{"version":3,"sources":["cmps/BoardPreview.js","cmps/BoardsList.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/SocketService.js","cmps/Login.js","services/utils.js","services/BoardService.js","actions/BoardActions.js","pages/Home.js","cmps/LoadPage.js","cmps/TopMenuOptions.js","cmps/dynamics/mapDynamicComponents.js","cmps/dynamics/TaskPreview.js","cmps/dynamics/VideoPreview.js","cmps/dynamics/ImagePreview.js","cmps/dynamics/DynamicComponent.js","cmps/TasksList.js","cmps/TaskForm.js","cmps/BoardColumns.js","cmps/BoardHistory.js","cmps/BoardTeamMembers.js","cmps/ColumnAddForm.js","cmps/Filter.js","cmps/Sort.js","cmps/SplashMenu.js","cmps/DueDate.js","cmps/Labels.js","cmps/Members.js","cmps/Todos.js","cmps/TaskDetails.js","cmps/MiniDetailsButton.js","cmps/MiniDetailsEditor.js","cmps/ScreenFilter.js","cmps/dynamics/MiniTextDetails.js","cmps/dynamics/MiniImageDetails.js","cmps/dynamics/mapDynamicMiniComponents.js","cmps/dynamics/MiniVideoDetails.js","cmps/dynamics/DynamicMiniComponent.js","pages/Board.js","App.js","serviceWorker.js","reducers/BoardReducer.js","reducers/UserReducer.js","reducers/index.js","store.js","index.js"],"names":["BoardPreview","board","className","src","boardBgThumbnail","alt","boardBgThumbnailTitleStyle","title","withRouter","boards","user","duplicateBoard","templateBoards","filter","isTemplate","myBoards","createdBy","_id","myCollaboratedBoards","teamMembers","find","teamMember","map","key","onClick","length","myBoard","to","myCollaboratedBoard","axios","Axios","create","withCredentials","endpoint","data","ajax","a","async","method","url","res","console","log","dir","response","status","this","props","history","push","login","userCred","HttpService","logout","signup","getLoggedInUser","getUsers","users","dispatch","UserService","_setUser","Object","entries","type","_setUsers","socket","Login","state","msg","loginCred","email","password","signupCred","firstName","lastName","username","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","doSignup","signupCreds","toggleLogin","doLogout","doStopPropagation","stopPropagation","signupSection","onSubmit","onChange","placeholder","loginSection","loggedInUser","style","Component","mapDispatchToProps","connect","setup","io","terminate","on","eventName","cb","off","emit","getRandomId","letters","id","i","ind","Math","floor","random","createUserIcon","charAt","getRandomColor","color","uploadImg","file","UPLOAD_URL","formData","FormData","append","post","then","catch","err","error","getImagesFromUnsplash","filterName","URL","get","results","emitNotification","notification","message","insert","container","animationIn","animationOut","dismiss","duration","SocketService","add","query","boardId","filterBy","sortBy","sortOrder","keys","join","_createQueryString","put","remove","_setBoards","loadBoard","BoardService","_boardUpdate","Home","tasks","columns","columnOrder","boardBgImage","createBoard","createdBoardMessage","newBoard","task","duplicatedBoard","taskTeamMembers","createdAt","Date","now","utils","time","sendMail","mail","window","open","loadBoards","button","paddingRight","CSSTransition","in","timeout","classNames","unmountOnExit","Fab","variant","href","addedBoard","_addBoard","LoadPage","CircularProgress","TopMenuOptions","onDuplicateColumn","column","newColumn","newId","idx","findIndex","columnId","splice","taskIds","forEach","taskId","clonedTaskId","taskIdIdx","taskIdx","toggleTopMenuOptions","updateBoard","onDelete","text","toggleMiniDetails","miniTask","boundingClientRect","taskContainer","current","getBoundingClientRect","previewType","React","createRef","prevProps","toggleRender","provided","innerRef","isDragging","showEditBtn","onTaskId","ref","draggableProps","dragHandleProps","labels","label","e","description","todos","todosDone","member","backgroundColor","video","videoContainer","width","height","allowFullScreen","security","image","imgContainer","DynamicComponent","componentType","mapDynamicComponents","Cmp","getComponent","Fragment","TasksList","showAddForm","currTaskId","showTaskDetails","toggleTaskDetails","canOpenTaskDetails","hideEditBtn","_","isDraggingOver","droppableProps","draggableId","index","snapshot","rotationMultiplier","onMouseEnter","onMouseLeave","TaskForm","dueDate","importance","edit","inputChange","fieldName","save","checkIfUrlAndSave","match","newUrl","replace","saveTask","includes","closeUpdateForm","toggleUpdateForm","textAreaAdjust","scrollHeight","nameInput","focus","setFormDataForEdit","onKeyUp","input","BoardColumns","timer","taskKey","onDragEnd","result","destination","source","droppableId","newColumnOrder","slice","columnTitle","start","finish","newTaskIds","taskTitle","startTaskIds","newStart","finishTaskIds","newFinish","setColumnName","emitChange","innerText","saveColumnName","updatedBoard","currColumnId","showTopMenuOptions","direction","columnKey","currId","contentEditable","spellCheck","onFocus","onInput","onBlur","suppressContentEditableWarning","openEditColumn","closeEditColumn","reRender","openAddForm","addCardText","closeAddForm","BoardHistory","item","moment","calendar","BoardTeamMembers","currentBoardMembers","componentDidMount","updateTeamMembers","notificationType","onStopPropagation","boardMember","ColumnAddForm","saveColumn","toggleAddForm","Filter","onFilter","background","isDarkBackground","Sort","onSortBy","onSort","toggleButtonName","SplashMenu","splashImagesUrls","office","filterByName","onSave","splashImages","UrlIndx","currUrl","urls","setBoardBackground","imageUrl","full","small","display","onAddImg","htmlFor","DueDate","setDate","handleChange","date","newTask","getTime","onToggle","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","popperModifiers","flip","behavior","preventOverflow","enabled","Labels","choosenLabels","setNewState","updateChoosenLabels","classList","labelIdx","currLabel","updateStyle","left","top","toggleChooseLabels","Members","choosenMembers","availableMembers","setAvailableMembers","updateChoosenMembers","memberIdx","currMember","taskMember","pos","toggleChooseMembers","Todo","updateTodo","onSaveTodo","todo","isDone","updateProgressBar","toggleTodos","TaskDetails","choosenlabels","showActivity","showEditDescriptionForm","onToggleDueDate","toggleDeleteTodo","progressWidth","currTodoId","targetValue","openUpdateDescriptionForm","closeUpdateDescriptionForm","onStopPropagationAndCloseOptions","onSaveDescription","onDuplicateTask","onDeleteTask","toggleTodoDone","currTodo","doneTodosCounter","interval","round","setInterval","clearInterval","deleteTodo","todoId","deletedTodo","hideDeleteTodoButton","showDeleteTodoButton","setTaskName","changeDescription","saveTaskName","uploadImage","files","currTask","position","fontSize","fontWeight","letterSpacing","Avatar","margin","textAlign","right","checked","format","cols","MiniDetailsButton","MiniDetailsEditor","onToggleLabels","onToggleMembers","innerHeight","ScreenFilter","MiniTextDetails","handleFocus","select","textArea","labelLen","defaultValue","MiniImageDetails","imgHeight","videoDimensions","bottom","DynamicMiniComponent","mapDynamicMiniComponents","Board","showColAddForm","showMiniTaskDetails","toggleSplashMenu","showHistory","toggleBoardTeamMembers","miniTaskDetails","isBoardLoaded","filterIconMod","mobileMod","params","toggleAddColumn","goBack","closeAllTabs","undefined","toggleBoardHistory","colId","img","fac","FastAverageColor","backgroundImage","Image","crossOrigin","getColorAsync","algorithm","isDark","resize","innerWidth","addEventListener","setBoard","store","addNotification","removeEventListener","backgroundAttachment","marginTop","Typography","component","marginRight","showUploadBgImg","toggleState","unshift","App","path","exact","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","process","origin","fetch","headers","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d5768906.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction BoardPreview({ board }) {\r\n  return (\r\n    <div className=\"board-preview card\">\r\n      <img src={board.boardBgThumbnail} alt=\"none\" />\r\n      <div className={`flex justify-center align-center title-container ${board.boardBgThumbnailTitleStyle}`}>\r\n        <h2 className={`capitalize ${board.boardBgThumbnailTitleStyle}`}>{board.title}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (BoardPreview)","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport BoardPreview from './BoardPreview';\r\n\r\nfunction BoardsList({ boards, user, duplicateBoard }) {\r\n    const templateBoards = boards.filter(board => board.isTemplate);\r\n    const myBoards = (user) ? boards.filter(board => board.createdBy._id === user._id) : '';\r\n    const myCollaboratedBoards = (user) ? boards.filter(board => {\r\n        return board.teamMembers.find(teamMember => user._id === teamMember._id && user._id !== board.createdBy._id);\r\n    }) : '';\r\n\r\n    return (\r\n        <section className=\"boards-list column\">\r\n            <div className=\"boards-list-main-inner-container-wrapper\">\r\n                <div className=\"boards-list-main-inner-container\">\r\n                    <h3 className=\"capitalize\"> check our premade templates</h3>\r\n                    <div className=\"boards-list-main-inner-container-grid flex justify-center column\">\r\n                        {templateBoards.map(board => (\r\n                            <div className=\"boards-list-main-inner-container-grid-item pointer\" key={board._id} onClick={() => duplicateBoard(board)}>\r\n                                <BoardPreview board={board} />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {user &&\r\n                <div>\r\n                    {(myBoards.length === 0) ?\r\n                        <div className=\"capitalize flex justify-center noboards\">\r\n                            you haven't created a board yet! click on get started or try one of our premade templates!\r\n                    </div> :\r\n                        <div className=\"boards-list-main-inner-container-wrapper\">\r\n                            <div className=\"boards-list-main-inner-container\">\r\n                                <h3 className=\"capitalize\">created boards</h3>\r\n                                <div className=\"boards-list-main-inner-container-grid flex justify-center column\">\r\n                                    {myBoards.map(myBoard => (\r\n                                        <NavLink className=\"boards-list-main-inner-container-grid-item\" key={myBoard._id} to={`/board/${myBoard._id}`}>\r\n                                            <BoardPreview board={myBoard} />\r\n                                        </NavLink>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    {(myCollaboratedBoards.length === 0) ?\r\n                        <div className=\"capitalize flex justify-center noboards\">\r\n                            you're not collaborating on any boards yet\r\n                    </div> :\r\n                        <div className=\"boards-list-main-inner-container-wrapper\">\r\n                            <div className=\"boards-list-main-inner-container\">\r\n                                <h3 className=\"capitalize\"> boards you collaborate on </h3>\r\n                                <div className=\"boards-list-main-inner-container-grid flex justify-center column\">\r\n                                    {myCollaboratedBoards.map(myCollaboratedBoard => (\r\n                                        <NavLink className=\"boards-list-main-inner-container-grid-item\" key={myCollaboratedBoard._id} to={`/board/${myCollaboratedBoard._id}`}>\r\n                                            <BoardPreview board={myCollaboratedBoard} />\r\n                                        </NavLink>\r\n                                    ))}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardsList)","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          this.props.history.push('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","import HttpService from './HttpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedInUser,\r\n    getUsers\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/login', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in login', err);\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/signup', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in signup', err);\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        await HttpService.post('auth/logout');\r\n    } catch (err) {\r\n        console.log('UserService: err in logout', err);\r\n    }\r\n}\r\n\r\nasync function getLoggedInUser() {\r\n    try {\r\n        const user = await HttpService.get('auth/user');\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting loggedInUser', err);\r\n    }\r\n}\r\n\r\nasync function getUsers() {\r\n    try {\r\n        const users = await HttpService.get('user');\r\n        return users;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting users', err);\r\n    }\r\n}\r\n","import UserService from '../services/UserService';\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.login(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.signup(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await UserService.logout();\r\n      dispatch(_setUser(null));\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getLoggedInUser() {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.getLoggedInUser();\r\n      if (Object.entries(user).length === 0) return;\r\n      dispatch(_setUser(user));\r\n    }  catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setUser(user) {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  };\r\n}\r\n\r\nexport function getUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await UserService.getUsers();\r\n      dispatch(_setUsers(users));\r\n    } catch (err) {\r\n      console.log('UserActions: err in getUsers', err);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _setUsers(users) {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users\r\n  };\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  getLoggedInUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../actions/UserActions';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    signupCred: {\r\n      firstName: '',\r\n      lastName: '',\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault();\r\n    const { email, password } = this.state.loginCred;\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' });\r\n    }\r\n    const userCreds = { email, password };\r\n    this.props.login(userCreds);\r\n    this.setState({ loginCred: { email: '', password: '' } });\r\n  };\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault();\r\n    const { firstName, lastName, username, email, password } = this.state.signupCred;\r\n    if (!firstName || !lastName || !email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' });\r\n    }\r\n    const signupCreds = { firstName, lastName, username, email, password };\r\n    this.props.signup(signupCreds);\r\n    this.setState({ signupCred: { firstName: '', lastName: '', username: '', email: '', password: '' } });\r\n    this.props.toggleLogin();\r\n  };\r\n\r\n  doLogout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  doStopPropagation = (ev) => {\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"login-container-signup text-center\" onSubmit={this.doSignup}>\r\n        <p>Not a member yet? Sign up!</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={this.state.signupCred.firstName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"First Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={this.state.signupCred.lastName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-signup-btn\">Signup</button>\r\n      </form>\r\n    );\r\n    let loginSection = (\r\n      <form className=\"login-container-login text-center\" onSubmit={this.doLogin}>\r\n        <p> Login: </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-login-btn\">Login</button>\r\n      </form>\r\n    );\r\n\r\n    const { loggedInUser } = this.props;\r\n\r\n    return (\r\n      <div className=\"login-container flex column align-center\"\r\n        style={this.props.style}\r\n        onClick={this.doStopPropagation}\r\n      >\r\n        <div className=\"login-container-logo\">\r\n        </div>\r\n        <h2>{this.state.msg}</h2>\r\n        <div className={\"login-container-form-container\"}>\r\n          {loggedInUser && (\r\n            <div>\r\n              <h2 className=\"login-container-loggedin-username\"> <p>Welcome!</p> {loggedInUser.username} </h2>\r\n              <div className=\"fill-width flex\">\r\n                <button className=\"login-container-form-container-logout\" onClick={this.doLogout}>Logout</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!this.props.loggedInUser && loginSection}\r\n          <hr />\r\n          {!this.props.loggedInUser && signupSection}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getLoggedInUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import axios from 'axios'\r\n\r\nimport SocketService from './SocketService';\r\n\r\nexport default {\r\n  getRandomId,\r\n  createUserIcon,\r\n  getRandomColor,\r\n  uploadImg,\r\n  getImagesFromUnsplash,\r\n  emitNotification\r\n}\r\n\r\nfunction getRandomId() {\r\n  let letters = '1234567890poiiytreqwasdfghjklmnbvcxxssersgyushquiz';\r\n  let id = '';\r\n  for (let i = 0; i < 10; i++) {\r\n    let ind = Math.floor(Math.random() * letters.length)\r\n    id += letters[ind];\r\n  }\r\n  return id;\r\n}\r\n\r\nfunction createUserIcon(firstName, lastName) {\r\n  let newIcon = firstName.charAt(0) + lastName.charAt(0)\r\n  return (newIcon)\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction uploadImg(file) {\r\n  const CLOUD_NAME = 'dujlxvxxv'\r\n  const PRESET_NAME = 'xi62wuas'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return axios.post(UPLOAD_URL, formData)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.url\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction getImagesFromUnsplash(filterName) {\r\n  const client_id = '9a992bf0a58ef7c4735758c98ec044dcdb524c2178db25d55cd773d7436f15d1'\r\n  const URL = `https://api.unsplash.com/search/photos?per_page=20&query=${filterName}&client_id=${client_id}`\r\n  return axios.get(URL)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.results\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction emitNotification(msg, type) {\r\n  const notification = {\r\n    message: msg,\r\n    type: type,\r\n    insert: \"top\",\r\n    container: \"bottom-right\",\r\n    animationIn: [\"animated\", \"zoomIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n    }\r\n  };\r\n  SocketService.emit('sendNotification', notification);\r\n}","import HttpService from './HttpService';\r\n\r\nexport default {\r\n  add,\r\n  query,\r\n  get,\r\n  put,\r\n  remove\r\n};\r\n\r\nfunction query() {\r\n  return HttpService.get('board');\r\n}\r\n\r\nfunction get(boardId, filterBy, sortBy, sortOrder) {\r\n  return HttpService.get(`board/${boardId}?${_createQueryString(filterBy)}&sortby=${sortBy}&sortorder=${sortOrder}`);\r\n}\r\n\r\nfunction _createQueryString(filterBy) {\r\n  return Object.keys(filterBy).map(filter => filter + '=' + filterBy[filter]).join('&');\r\n}\r\n\r\nfunction put(board) {\r\n  return HttpService.put(`board/${board._id}`, board);\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return HttpService.delete(`board/${boardId}`);\r\n}\r\n\r\nfunction add(board) {\r\n  return HttpService.post('board', board);\r\n}","import BoardService from '../services/BoardService';\r\nimport SocketService from '../services/SocketService';\r\nimport utils from '../services/utils';\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await BoardService.query();\r\n      dispatch(_setBoards(boards));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setBoards(boards) {\r\n  return {\r\n    type: 'SET_BOARDS',\r\n    boards\r\n  };\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy, sortBy, sortOrder) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await BoardService.get(boardId, filterBy, sortBy, sortOrder);\r\n      dispatch(_boardUpdate(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function setBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_boardUpdate(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in setBoard', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoard(board, msg, notificationType) {\r\n  return async dispatch => {\r\n    try {\r\n      board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n      dispatch(_boardUpdate(board));\r\n      await BoardService.put(board);\r\n      SocketService.emit('boardUpdate', board);\r\n      utils.emitNotification(msg, notificationType);\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _boardUpdate(board) {\r\n  return {\r\n    type: 'UPDATE_BOARD',\r\n    board\r\n  }\r\n}\r\n\r\nexport function createBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedBoard = await BoardService.add(board);\r\n      dispatch(_addBoard(addedBoard));\r\n      return addedBoard;\r\n    } catch (err) {\r\n      console.log('BoardActions: err in createBoard', err);\r\n    }\r\n  }\r\n\r\n  function _addBoard(addedBoard) {\r\n    return {\r\n      type: 'ADD_BOARD',\r\n      addedBoard\r\n    };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\n\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport BoardsList from '../cmps/BoardsList';\r\nimport Login from '../cmps/Login';\r\n\r\nimport utils from '../services/utils';\r\n\r\nimport { loadBoards, loadBoard, createBoard } from '../actions/BoardActions'\r\nimport { logout, getLoggedInUser } from '../actions/UserActions'\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    toggleLogin: false,\r\n    board: {\r\n      teamMembers: [],\r\n      tasks: {},\r\n      columns: {},\r\n      columnOrder: [],\r\n      style: {},\r\n      boardBgImage: 'https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjExMTc0M30',\r\n      history: [],\r\n      boardBgThumbnail: 'https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&ixid=eyJhcHBfaWQiOjExMTc0M30'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadBoards();\r\n    this.props.getLoggedInUser();\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState((prevState) => ({ toggleLogin: !prevState.toggleLogin }))\r\n  }\r\n\r\n  createBoard = async () => {\r\n    let board = this.state.board;\r\n    board.createdBy = this.props.loggedInUser || { _id: 'guest', username: 'guest' };\r\n    this.createdBoardMessage(board);\r\n    const newBoard = await this.props.createBoard(board);\r\n    this.props.history.push(`/board/${newBoard._id}`);\r\n  }\r\n\r\n  duplicateBoard = async (board) => {\r\n    let duplicatedBoard = { ...board };\r\n    delete duplicatedBoard._id;\r\n    delete duplicatedBoard.boardBgThumbnailTitleStyle;\r\n    duplicatedBoard.history = [];\r\n    duplicatedBoard.teamMembers = [];\r\n    duplicatedBoard.title = '';\r\n    duplicatedBoard.isTemplate = false;\r\n    duplicatedBoard.createdBy = this.props.loggedInUser || { _id: 'guest', username: 'guest' };\r\n    for (const task in duplicatedBoard.tasks) {\r\n      duplicatedBoard.tasks[task].taskTeamMembers = [];\r\n      duplicatedBoard.tasks[task].createdAt = Date.now();\r\n    }\r\n    this.createdBoardMessage(duplicatedBoard);\r\n    const newBoard = await this.props.createBoard(duplicatedBoard);\r\n    this.props.history.push(`/board/${newBoard._id}`);\r\n  }\r\n\r\n  createdBoardMessage = (board) => {\r\n    const username = (this.props.loggedInUser) ? this.props.loggedInUser.username : 'Guest';\r\n    let msg = `The Board was created by ${username}`;\r\n    board.history.push({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n  }\r\n\r\n\r\n  sendMail = (mail) => {\r\n    window.open('mailto:' + mail)\r\n  }\r\n\r\n  render() {\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <ExitToAppIcon className=\"login-btn\" onClick={this.props.logout} />\r\n    } else {\r\n      button = <div className=\"login-btn cursor-pointer flex\" onClick={this.toggleLogin}>\r\n        <PersonOutlineIcon />\r\n        <p>login</p>\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"home-page\">\r\n        {(this.state.toggleLogin) && <div className=\"home-page screen\" onClick={this.toggleLogin}></div>}\r\n        <section className=\"home-page-header\">\r\n          <div className=\"home-page-login flex justify-end align-center\">\r\n            {(this.props.loggedInUser) &&\r\n              <div className=\"flex\">\r\n                <div className=\"team-member-icon flex align-center\">\r\n                  <p>\r\n                    {utils.createUserIcon(this.props.loggedInUser.firstName,\r\n                      this.props.loggedInUser.lastName)}\r\n                  </p>\r\n                </div>\r\n                <p className=\"flex column\" style={{ paddingRight: 10 }}>\r\n                  <small>welcome!</small>\r\n                  {this.props.loggedInUser.username}\r\n                </p>\r\n              </div>\r\n            }\r\n            {button}\r\n          </div>\r\n          <CSSTransition\r\n            in={this.state.toggleLogin}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit>\r\n            <Login\r\n              className=\"home-page-login\"\r\n              toggleLogin={this.toggleLogin} />\r\n          </CSSTransition>\r\n          <div className=\"home-page-header-container flex\">\r\n            <div className=\"header-image flex align-center justify-center fill-width fill-height\">\r\n              <div className=\"login-get-started-container flex align-center justify-center align-center\">\r\n                <div className=\"home-page-logo-get-started flex column align-center\">\r\n                  <div className=\"home-page-header-container-logo-img fill-width fill-height\"></div>\r\n                  <div className=\"text-center\">\r\n                    <h2>Manage your tasks in a fun and easy way</h2>\r\n                  </div>\r\n                  <div className=\"get-started-btn\">\r\n                    <Fab variant=\"extended\">\r\n                      <p className=\"uppercase\" onClick={this.createBoard}>\r\n                        get started\r\n                    </p>\r\n                    </Fab>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"home-page-boards-list flex wrap colum justify-center\">\r\n          <div className=\"home-page-boards-list-img fill-width flex justify-center\">\r\n            <h3>\r\n              We, in Trebello, believe that simplicity and style must go together,\r\n            that's why we made our brand simple and easy to use for everyone.<br /> <br />\r\n              Maximize your team workflow and take them one step ahead.</h3>\r\n          </div>\r\n        </section>\r\n\r\n        <BoardsList boards={this.props.boards} user={this.props.loggedInUser} duplicateBoard={this.duplicateBoard} />\r\n\r\n        <section className=\"home-page-footer flex column align-center justify-center\">\r\n          <div className=\"fill-width\">\r\n            <h2 className=\"text-center uppercase\"> about us  </h2>\r\n          </div>\r\n          <div className=\"home-page-footer-team-members-cards-container flex wrap justify-center\">\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img vlad\"></div>\r\n              <div className=\"info fill-width flex space-between\">\r\n                <p>Vlad Batalin</p>\r\n                <div className=\"flex\">\r\n                  <a href=\"https://www.linkedin.com/in/vlad-batalin-647725180/\" target=\"blank\"><LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon></a>\r\n                  <EmailIcon onClick={() => this.sendMail('batalinvlad@gmail.com')} className=\"mail\" />\r\n                </div>\r\n              </div>\r\n              <span className=\"text-center fill-width capitalize\">Full-stack development</span>\r\n            </div>\r\n\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img margad\"></div>\r\n              <div className=\"info fill-width flex space-between\">\r\n                <p>Margad Taikhir</p>\r\n                <div className=\"flex\">\r\n                  {/* <a href=\"\" target=\"blank\"><LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon></a> */}\r\n                  <EmailIcon onClick={() => this.sendMail('mtaikhir@gmail.com')} className=\"mail\" />\r\n                </div>\r\n              </div>\r\n              <span className=\"text-center fill-width capitalize\">Full-Stack development</span>\r\n            </div>\r\n\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img paolo\"></div>\r\n              <div className=\"info fill-width flex space-between\">\r\n                <p>Paolo Groppi</p>\r\n                <div className=\"flex\">\r\n                  <a href=\"https://www.linkedin.com/in/paolo-groppi-6ba84117b\" target=\"blank\"><LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon></a>\r\n                  <EmailIcon onClick={() => this.sendMail('paolo.groppi@gmail.com')} className=\"mail\" />\r\n                </div>\r\n              </div>\r\n              <span className=\"text-center fill-width capitalize\">Full-Stack development</span>\r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boards.boards,\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  loadBoard,\r\n  createBoard,\r\n  getLoggedInUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function LoadPage() {\r\n  return (\r\n    <div className=\"loading-page flex column align-center justify-center\">\r\n      <h2 className=\"uppercase\"> just a moment :)</h2>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class TopMenuOptions extends Component {\r\n\r\n    onDuplicateColumn = () => {\r\n\r\n        let column = this.props.column;\r\n        let board = this.props.board;\r\n        let newColumn = { ...this.props.column }\r\n        const newId = utils.getRandomId();\r\n        const idx = board.columnOrder.findIndex(columnId => columnId === column.id);\r\n\r\n        newColumn.id = newId;\r\n        board.columnOrder.splice(idx + 1, 0, newColumn.id);\r\n\r\n        newColumn.taskIds.forEach(taskId => {\r\n\r\n            const clonedTaskId = utils.getRandomId();\r\n            const taskIdIdx = column.taskIds.findIndex(taskIdx => taskIdx === taskId);\r\n\r\n            board.tasks[clonedTaskId] = { ...board.tasks[taskId], id: clonedTaskId }\r\n            newColumn.taskIds = [...newColumn.taskIds];\r\n            newColumn.taskIds.splice(taskIdIdx, 1, clonedTaskId);\r\n        });\r\n\r\n        board.columns[newId] = newColumn;\r\n        this.props.toggleTopMenuOptions(column.id);\r\n        const msg = `'${column.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"top-menu-options\">\r\n            <h2 className=\"text-center capitalize\">options menu</h2>\r\n            <div className=\"options-container flex column\">\r\n                <p className=\"capitalize\" onClick={this.onDuplicateColumn}>duplicate list</p>\r\n                <p className=\"capitalize\" onClick={() => this.props.onDelete(this.props.column.id)}>delete list</p>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}","import TaskPreview from './TaskPreview';\r\nimport VideoPreview from './VideoPreview';\r\nimport ImagePreview from './ImagePreview';\r\n\r\nexport default {\r\n    text: TaskPreview,\r\n    video: VideoPreview,\r\n    image: ImagePreview\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\nexport default class TaskPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.taskContainer = React.createRef();\r\n    }\r\n\r\n    // need to see why it doesn't re-render tasklist\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.task.type !== this.props.task.type) {\r\n            console.log('inside')\r\n            this.props.toggleRender();\r\n        }\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.taskContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.taskContainer}>\r\n                <div\r\n                    className={\"task-container\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    {task.url && <img title={task.id} alt=\"task\" src={task.url} />}\r\n\r\n                    <div className=\"task-container-labels flex wrap\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n\r\n                    <div className={\"bottom-container grid-container flex\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(task.description !== '') ?\r\n                            <div className=\"grid-item justify-self-center align-self-center\">\r\n                                <SubjectIcon />\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n\r\n                        {(task.todos.length > 0) ?\r\n                            <div className=\"grid-item align-center flex\">\r\n                                <div className=\"flex align-center\">\r\n                                    <CheckBoxIcon />\r\n                                    <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                                </div>\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        <div className=\"team-members-container grid-item\">\r\n                            <div className=\"flex justify-end\">\r\n                                {(task.taskTeamMembers.map(member => {\r\n                                    return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                }))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class VideoPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoContainer = React.createRef();\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.videoContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.videoContainer}>\r\n                <div\r\n                    className={\"task-container without-padding flex column\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    {task.type === 'video' ?\r\n                        <iframe title={task.id} type='text/html' width=\"252\" height=\"142\" allowFullScreen=\"allowfullscreen\" src={task.url} security=\"restricted\"></iframe> :\r\n                        <img title={task.id} alt=\"task\" src={task.url} />\r\n                    }\r\n                    <div className=\"task-container-labels flex\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n                    {(task.description !== '') ?\r\n                        <div className=\"grid-item justify-self-center align-self-center\">\r\n                            <SubjectIcon />\r\n                        </div>\r\n                        : <div className=\"grid-item\"></div>\r\n                    }\r\n                    {(task.todos.length > 0) ?\r\n                        <div className=\"grid-item align-center flex\">\r\n                            <div className=\"flex\">\r\n                                <CheckBoxIcon />\r\n                                <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"grid-item\"></div>\r\n                    }\r\n                    <div className=\"team-members-container grid-item\">\r\n                        <div className=\"flex justify-end\">\r\n                            {(task.taskTeamMembers.map(member => {\r\n                                return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            }))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class ImagePreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imgContainer = React.createRef();\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.imgContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column,\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.imgContainer}>\r\n                <div\r\n                    className={\"task-container without-padding flex column align center\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    <img title={task.id} alt=\"task\" src={task.url} />\r\n                    <div className=\"task-container-labels flex wrap\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n                    <div className={\"bottom-container grid-container flex\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(task.description !== '') ?\r\n                            <div className=\"grid-item justify-self-center align-self-center\">\r\n                                <SubjectIcon />\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        {(task.todos.length > 0) ?\r\n                            <div className=\"grid-item align-center flex\">\r\n                                <div className=\"flex\">\r\n                                    <CheckBoxIcon />\r\n                                    <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                                </div>\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        <div className=\"team-members-container grid-item\">\r\n                            <div className=\"flex justify-end\">\r\n                                {(task.taskTeamMembers.map(member => {\r\n                                    return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                }))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicComponents from \"./mapDynamicComponents\"\r\n\r\nexport default class DynamicComponent extends Component {\r\n    state = {\r\n        componentType: 'text',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ componentType: this.props.task.type });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicComponents[this.state.componentType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                toggleRender={this.props.toggleRender}\r\n                column={this.props.column}\r\n                provided={this.props.provided}\r\n                innerRef={this.props.innerRef}\r\n                task={this.props.task}\r\n                isDragging={this.props.isDragging}\r\n                style={this.props.style}\r\n                onTaskId={this.props.onTaskId}\r\n                showEditBtn={this.props.showEditBtn}\r\n                toggleMiniDetails={this.props.toggleMiniDetails}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\nimport DynamicComponent from './dynamics/DynamicComponent';\r\n\r\nexport default class TasksList extends Component {\r\n\r\n    state = {\r\n        showAddForm: false,\r\n        currTaskId: '',\r\n        onTaskId: '',\r\n        showTaskDetails: false,\r\n    }\r\n\r\n    toggleTaskDetails = id => {\r\n        this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTaskId: id || prevState.currTaskId }));\r\n    }\r\n\r\n    canOpenTaskDetails = taskId => {\r\n        return (this.state.showTaskDetails && this.state.currTaskId === taskId)\r\n    }\r\n\r\n    showEditBtn = (id) => {\r\n        this.setState({ showEditBtn: true, onTaskId: id })\r\n    }\r\n\r\n    hideEditBtn = () => {\r\n        this.setState({ showEditBtn: false })\r\n    }\r\n\r\n    //is it re-rendering at all???\r\n    toggleRender = _ => {\r\n        console.log('tasklist');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { tasks, provided, innerRef, isDraggingOver } = this.props;\r\n\r\n        return (\r\n            <section\r\n                className={\"task-list\" + (isDraggingOver ? \" isDraggingOver\" : \"\")}\r\n                {...provided.droppableProps}\r\n                ref={innerRef}\r\n            >\r\n                {tasks.map((task, idx) => (\r\n                    <div key={task.id} className=\"task-list-container\">\r\n                        <Draggable draggableId={task.id} index={idx}>\r\n                            {(provided, snapshot) => (\r\n                                <NaturalDragAnimation\r\n                                    style={provided.draggableProps.style}\r\n                                    snapshot={snapshot}\r\n                                    rotationMultiplier={1.3}\r\n                                >\r\n                                    {style => (\r\n                                        <div onClick={_ => this.props.toggleTaskDetails({ id: task.id, column: this.props.column })}\r\n                                            onMouseEnter={() => this.showEditBtn(task.id)}\r\n                                            onMouseLeave={() => this.hideEditBtn()}\r\n                                        >\r\n                                            <DynamicComponent\r\n                                                toggleRender={this.toggleRender}\r\n                                                provided={provided}\r\n                                                innerRef={provided.innerRef}\r\n                                                task={task}\r\n                                                column={this.props.column}\r\n                                                isDragging={snapshot.isDragging}\r\n                                                style={style}\r\n                                                onTaskId={this.state.onTaskId}\r\n                                                showEditBtn={this.state.showEditBtn}\r\n                                                toggleMiniDetails={this.props.toggleMiniDetails}\r\n                                                user={this.props.user}\r\n                                            >\r\n                                            </DynamicComponent>\r\n                                        </div>\r\n                                    )}\r\n                                </NaturalDragAnimation>\r\n                            )}\r\n                        </Draggable>\r\n                    </div>\r\n                ))}\r\n                {provided.placeholder}\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskForm extends Component {\r\n\r\n    state = {\r\n        task: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            importance: '',\r\n            description: '',\r\n            type: 'text',\r\n            labels: [],\r\n            todos: [],\r\n            taskTeamMembers: []\r\n        },\r\n        edit: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.task !== this.props.task) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.task) {\r\n            const task = this.props.task;\r\n            this.setState({\r\n                task: {\r\n                    id: task.id,\r\n                    title: task.title,\r\n                    createdAt: task.createdAt,\r\n                    dueDate: task.dueDate,\r\n                    importance: task.importance,\r\n                    description: this.props.description,\r\n                    type: task.type,\r\n                    labels: task.labels,\r\n                    todos: task.todos,\r\n                    taskTeamMembers: task.taskTeamMembers\r\n                },\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        const fieldName = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ task: { ...this.state.task, [fieldName]: value } })\r\n    }\r\n\r\n    save = (ev) => {\r\n        ev.preventDefault();\r\n        this.checkIfUrlAndSave(this.state.task.title);\r\n    }\r\n\r\n    checkIfUrlAndSave = (url) => {\r\n        const youtubeREGEX = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        const imgREGEX = /.(jpg|jpeg|png|gif)\\/?$/;\r\n        if (url.match(youtubeREGEX)) {\r\n            const newUrl = url.replace('watch?v=', 'embed/');\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'video', url: newUrl } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        } else if (url.match(imgREGEX)) {\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'image', url } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        }\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [this.state.task.id]: this.state.task\r\n            }\r\n        };\r\n        const column = this.props.column;\r\n        const id = this.state.task.id;\r\n        if (!column.taskIds.includes(id)) column.taskIds.push(id);\r\n        const msg = (!this.state.edit) ?\r\n            `The task '${this.state.task.title}' was added by ${this.props.user}` :\r\n            `${this.props.user} edited the task '${this.state.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.closeUpdateForm();\r\n        if (this.props.toggleUpdateForm) this.props.toggleUpdateForm();\r\n        if (this.props.toggleTaskDetails) this.props.toggleTaskDetails();\r\n    }\r\n\r\n    textAreaAdjust = ev => {\r\n        ev.target.style.height = \"1px\"\r\n        ev.target.style.height = (25 + ev.target.scrollHeight) + \"px\";\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"task-form\" >\r\n            <form onSubmit={this.save} onClick={ev => ev.stopPropagation()}>\r\n                <div className=\"flex column\" >\r\n\r\n                    <textarea type=\"text\"\r\n                        onKeyUp={this.textAreaAdjust}\r\n                        placeholder=\"Enter a title for this card...\"\r\n                        name=\"title\"\r\n                        ref={(input) => { this.nameInput = input; }}\r\n                        onChange={this.inputChange} value={this.state.task.title} />\r\n                    <div className=\"save-btn-container flex align-center\">\r\n                        <button className=\"task-form-save-btn save capitalize\">add card</button>\r\n                        <CloseIcon className=\"task-form-back-btn\" onClick={(ev) => { ev.stopPropagation(); this.props.closeUpdateForm() }} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\n// import AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TopMenuOptions from './TopMenuOptions'\r\nimport TasksList from './TasksList';\r\nimport TaskForm from '../cmps/TaskForm'\r\n\r\nexport default class BoardColumns extends Component {\r\n    state = {\r\n        timer: null,\r\n        title: ''\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        const board = { ...this.props.board };\r\n        const columnOrder = board.columnOrder;\r\n        const column = board.columns[id];\r\n        for (const taskId of column.taskIds) {\r\n            for (const taskKey in board.tasks) {\r\n                if (taskId === taskKey) {\r\n                    delete board.tasks[taskKey];\r\n                }\r\n            }\r\n        }\r\n        delete board.columns[id];\r\n        const idx = columnOrder.findIndex(column => column === id);\r\n        columnOrder.splice(idx, 1);\r\n        const msg = `'${column.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        };\r\n\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return;\r\n        };\r\n\r\n        if (type === 'column') {\r\n            const newColumnOrder = this.props.board.columnOrder.slice();\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0, draggableId);\r\n            const columnTitle = this.props.board.columns[draggableId].title;\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columnOrder: newColumnOrder\r\n            }\r\n            const msg = `'${columnTitle}' was moved by ${this.props.user}`;\r\n            const notificationType = 'success';\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const start = this.props.board.columns[source.droppableId];\r\n        const finish = this.props.board.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = start.taskIds.slice();\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            };\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columns: {\r\n                    ...this.props.board.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            };\r\n            const taskTitle = this.props.board.tasks[draggableId].title;\r\n            const msg = `${this.props.user} changed the position of the task '${taskTitle}'`;\r\n            const notificationType = 'success';\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const startTaskIds = start.taskIds.slice();\r\n        startTaskIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        };\r\n\r\n        const finishTaskIds = finish.taskIds.slice();\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        };\r\n\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish\r\n            }\r\n        };\r\n        const taskTitle = this.props.board.tasks[draggableId].title;\r\n        const msg = `${this.props.user} moved the task '${taskTitle}' from '${newStart.title}' to '${newFinish.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    setColumnName = (columnId) => {\r\n        const columnTitle = this.props.board.columns[columnId].title;\r\n        this.setState({ title: columnTitle });\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        this.setState({ title: ev.target.innerText });\r\n    }\r\n\r\n    saveColumnName = (columnId, title) => {\r\n        const columnTitle = this.props.board.columns[columnId].title;\r\n        if (columnTitle === title) return;\r\n\r\n        const updatedBoard = { ...this.props.board };\r\n        updatedBoard.columns[columnId].title = title;\r\n\r\n        const msg = `${this.props.user} changed the name of '${columnTitle}' to '${title}'`;\r\n        const notificationType = 'success';\r\n\r\n        this.props.updateBoard(updatedBoard, msg, notificationType);\r\n    }\r\n\r\n    addCardText(column) {\r\n        return (column.taskIds.length === 0) ? 'Add a card' : 'Add another card';\r\n    }\r\n\r\n    render() {\r\n        const { currColumnId, showTopMenuOptions, showAddForm } = this.props;\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                    {provided => (\r\n                        <div\r\n                            className=\"board-columns flex\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}>\r\n                            {this.props.board.columnOrder.map((columnKey, idx) => {\r\n\r\n                                const column = this.props.board.columns[columnKey];\r\n                                const tasks = column.taskIds.map(currId => this.props.board.tasks[currId]);\r\n\r\n                                return (\r\n                                    <Draggable draggableId={columnKey} key={column.id} index={idx}>\r\n\r\n                                        {(provided, snapshot) => (\r\n                                            <NaturalDragAnimation\r\n                                                style={provided.draggableProps.style}\r\n                                                snapshot={snapshot}\r\n                                                rotationMultiplier={1.3}\r\n                                            >\r\n                                                {style => (\r\n\r\n                                                    <div\r\n                                                        className=\"board-columns-item\"\r\n                                                        {...provided.draggableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                        style={style}\r\n                                                    >\r\n                                                        <div\r\n                                                            className=\"board-columns-item-header flex align-center space-between\"\r\n                                                            {...provided.dragHandleProps}\r\n                                                        >\r\n                                                            <div className=\"board-columns-item-header-h2-wrapper\">\r\n                                                                <h2\r\n                                                                    contentEditable='true'\r\n                                                                    spellCheck=\"false\"\r\n                                                                    onFocus={() => this.setColumnName(column.id)}\r\n                                                                    onInput={(ev) => this.emitChange(ev)}\r\n                                                                    onBlur={() => this.saveColumnName(column.id, this.state.title)}\r\n                                                                    suppressContentEditableWarning={true}\r\n                                                                >\r\n                                                                    {column.title}\r\n                                                                </h2>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            <div className=\"board-columns-item-header-menu-btn-icon\"\r\n                                                                onClick={(ev) => { ev.stopPropagation(); this.props.openEditColumn(column.id) }}> ... </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                        {showTopMenuOptions && (currColumnId === column.id) ?\r\n                                                            <TopMenuOptions\r\n                                                                onDelete={this.onDelete}\r\n                                                                column={column}\r\n                                                                board={this.props.board}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                                toggleTopMenuOptions={this.props.closeEditColumn}\r\n                                                                user={this.props.user}\r\n                                                            />\r\n                                                            : ''}\r\n                                                        <Droppable droppableId={column.id} type=\"task\">\r\n                                                            {(provided, snapshot) => {\r\n                                                                return <TasksList\r\n                                                                reRender={this.reRender}\r\n                                                                    board={this.props.board}\r\n                                                                    innerRef={provided.innerRef}\r\n                                                                    provided={provided}\r\n                                                                    tasks={tasks}\r\n                                                                    isDraggingOver={snapshot.isDraggingOver}\r\n                                                                    column={column}\r\n                                                                    toggleTaskDetails={this.props.toggleTaskDetails}\r\n                                                                    updateBoard={this.props.updateBoard}\r\n                                                                    toggleMiniDetails={this.props.toggleMiniDetails}\r\n                                                                    user={this.props.user}\r\n                                                                >\r\n                                                                </TasksList>\r\n                                                            }}\r\n                                                        </Droppable>\r\n                                                        {(!showAddForm || currColumnId !== column.id) &&\r\n                                                            <div className=\"task-list-footer flex align-center\">\r\n                                                                <div className=\"task-list-footer-add-task fill-width\"\r\n                                                                    onClick={(ev) => { ev.stopPropagation(); this.props.openAddForm(column.id) }}>\r\n                                                                    <span className=\"add-icon\">+</span>{this.addCardText(column)}</div>\r\n                                                            </div>\r\n                                                        }\r\n                                                        {showAddForm && (currColumnId === column.id) ?\r\n                                                            <TaskForm\r\n                                                                user={this.props.user}\r\n                                                                board={this.props.board}\r\n                                                                column={column}\r\n                                                                closeUpdateForm={this.props.closeAddForm}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                            />\r\n                                                            : ''\r\n                                                        }\r\n                                                    </div>\r\n                                                )}\r\n                                            </NaturalDragAnimation>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div >)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class BoardHistory extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boardhistory-container column\">\r\n                <div className=\"flex column\">\r\n                    <div className=\"uppercase text-center\">\r\n                        <h2>board history :</h2>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <ul className=\"clean-list\">\r\n                    {this.props.history.map(item => (\r\n                        <li key={item.id}><div className=\"msg\">{item.msg}<br />{moment(item.time).calendar()}</div><hr /></li>\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class BoardTeamMembers extends Component {\r\n    state = {\r\n        currentBoardMembers: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ currentBoardMembers: this.props.board.teamMembers });\r\n    }\r\n\r\n    updateTeamMembers = (user) => {\r\n        const board = this.props.board;\r\n        const teamMembers = board.teamMembers;\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (teamMembers.find(teamMember => teamMember._id === user._id)) {\r\n            const idx = teamMembers.findIndex(teamMember => teamMember._id === user._id);\r\n            teamMembers.splice(idx, 1);\r\n            msg = `${user.username} was removed from this board`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            teamMembers.push(user);\r\n            msg = `${user.username} was added to this board`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ currentBoardMembers: teamMembers });\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const currentBoardMembers = this.state.currentBoardMembers;\r\n        const users = this.props.users.filter(user => !currentBoardMembers.find(boardMember => user._id === boardMember._id));\r\n        return (\r\n            <div className=\"board-team-members-container text-center column\"\r\n               onClick={(ev) => this.onStopPropagation(ev)}>\r\n\r\n                <div className=\"members-container-colors-container flex column\">\r\n                    <div className=\"pointer uppercase\"><h2>board members :</h2></div>\r\n                    <hr />\r\n                    {this.state.currentBoardMembers.map(teamMember => {\r\n                        return (\r\n                            <div key={teamMember._id} className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateTeamMembers(teamMember)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(teamMember.firstName, teamMember.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{teamMember.firstName} {teamMember.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"add-team-members flex column\">\r\n                    <p className=\"pointer uppercase\">add / remove users</p>\r\n                    {users.map(user => {\r\n                        return (\r\n                            <div key={user._id} className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateTeamMembers(user)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\"\r\n                                    style={{ backgroundColor: '#dfe1e6' }}>\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(user.firstName, user.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{user.firstName} {user.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class ColumnAddForm extends Component {\r\n\r\n    state = {\r\n        column: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            taskIds: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.column !== this.props.column) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.column) {\r\n            const column = this.props.column;\r\n            this.setState({\r\n                column: {\r\n                    id: column.id,\r\n                    title: column.title,\r\n                    taskIds: column.taskIds\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState({ column: { ...this.state.column, [fieldName]: value } })\r\n    }\r\n\r\n    saveColumn = (ev) => {\r\n        ev.preventDefault();\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [this.state.column.id]: this.state.column\r\n            }\r\n        };\r\n        const id = this.state.column.id;\r\n        const columnOrder = newBoard.columnOrder;\r\n        if (!columnOrder.includes(id)) columnOrder.push(id);\r\n        const msg = `'${this.state.column.title}' was added by ` + this.props.user;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleAddForm();\r\n    }\r\n\r\n    render() {\r\n        return <form className=\"add-column-form-container flex column space-between\" onSubmit={this.saveColumn}>\r\n            <input\r\n                ref={(input) => { this.nameInput = input; }}\r\n                type='text'\r\n                placeholder='Enter list title...'\r\n                name='title'\r\n                onChange={this.inputChange}\r\n                value={this.state.column.title} />\r\n            <div className=\"save-btn-container flex\">\r\n                <button className=\"add-column-save-btn capitalize\"\r\n                    variant=\"contained\">add list</button>\r\n\r\n                <CloseIcon className=\"add-column-back-to-board flex align-center\"\r\n                    onClick={this.props.toggleAddForm} />\r\n\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Filter extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            title: '',\r\n            teamMembers: ''\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [fieldName]: value } }), () => this.props.onFilter(this.state.filterBy));\r\n    }\r\n\r\n\r\n    render() {\r\n        const teamMembers = this.props.teamMembers;\r\n        return <div className=\"board-page-nav-bar-filters-item all-filters flex\">\r\n\r\n\r\n            <input type=\"text\" placeholder=\"Search card by name\"\r\n                value={this.state.filterBy.title}\r\n                onChange={this.inputChange} name=\"title\">\r\n            </input>\r\n\r\n            <div style={{ background: (this.props.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n            <select name=\"teamMembers\" style={{\r\n                color: (this.props.isDarkBackground) ? 'white' : 'black',\r\n                background: (this.props.isDarkBackground) ? '#0000006b' : '#ffffff8e'\r\n            }} onChange={this.inputChange}>\r\n                <option value=''>all team</option>\r\n                {teamMembers.map(teamMember => (\r\n                    <option className=\"capitalize\" key={teamMember._id} value={`${teamMember.username}`}>{teamMember.firstName} {teamMember.lastName}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Sort extends Component {\r\n\r\n    state = {\r\n        sortBy: '',\r\n        sortOrder: 'asc'\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [fieldName]: value } }));\r\n    }\r\n\r\n    onSortBy = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let sortOrder = (this.state.sortOrder === 'asc') ? 'desc' : 'asc';\r\n        this.setState({ sortBy: fieldName, sortOrder: sortOrder }, () => this.props.onSort(this.state.sortBy, this.state.sortOrder));\r\n    }\r\n\r\n    toggleButtonName = () => {\r\n        return (this.state.sortOrder === 'asc') ? 'Newest Cards' : 'Oldest Cards';\r\n    }\r\n\r\n    render() {\r\n        return <div  className=\"board-page-nav-bar-filters-item fill-height\">\r\n            <button className={`nav-btn fill-height\r\n            ${(this.props.isDarkBackground) ? 'dark' : 'light'}`}\r\n                onClick={this.onSortBy}\r\n                name='createdAt'>{this.toggleButtonName()}</button>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport utils from '../services/utils';\r\n\r\nimport office from '../unsplashdefaultdata/officequery';\r\n\r\nexport default class SplashMenu extends Component {\r\n\r\n    state = {\r\n        splashImagesUrls: office,\r\n        filterByName: ''\r\n    }\r\n\r\n    inputChange = ev => {\r\n        this.setState({ filterByName: ev.target.value });\r\n    }\r\n\r\n    onSave = async () => {\r\n        try {\r\n            const splashImages = await utils.getImagesFromUnsplash(this.state.filterByName)\r\n            let splashImagesUrls = [];\r\n            splashImages.forEach(image => {\r\n                const UrlIndx = splashImagesUrls.findIndex(currUrl => currUrl === image.urls);\r\n                if (UrlIndx >= 0) {\r\n                    splashImagesUrls.splice(UrlIndx, 1)\r\n                } else {\r\n                    splashImagesUrls.push(image.urls);\r\n                }\r\n            })\r\n            this.setState({ splashImagesUrls });\r\n        } catch (err) {\r\n            // console.err(401).send({ error: err });\r\n        }\r\n    }\r\n\r\n    setBoardBackground = (imageUrl) => {\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardBgImage = imageUrl.full;\r\n        newBoard.boardBgThumbnail = imageUrl.small;\r\n        const msg = `${this.props.user} changed background image`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"splash-menu flex column align-center translateLeft\"\r\n            onClick={(ev) => this.stopPropagation(ev)}>\r\n            <div className=\"flex column fill-width filter-container\">\r\n                <div className=\"splash-menu-search-bar fill-width flex justify-center\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search by name...'\r\n                        onChange={this.inputChange}\r\n                    />\r\n                    <button className=\"splash-menu-search-bar-save-btn\" onClick={this.onSave}>\r\n                        <SearchIcon />\r\n                    </button>\r\n                </div>\r\n                <button className=\"splash-menu-search-bar-save-btn upload-btn capitalize\">\r\n                    <input style={{ display: \"none\" }} type=\"file\" id=\"upload-img\" onChange={this.props.onAddImg}></input>\r\n                    <label htmlFor=\"upload-img\">upload image</label>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"splash-images-container-wrapper\">\r\n                <div className=\"splash-images-container flex wrap fill-width\" >\r\n                    {this.state.splashImagesUrls.map(imageUrl => {\r\n                        return <div key={imageUrl.small} className=\"splash-images-container-item flex wrap\">\r\n                            <img src={imageUrl.small} alt=\"oops.. didn't found it\" onClick={() => this.setBoardBackground(imageUrl)}></img>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class DueDate extends React.Component {\r\n    state = {\r\n        dueDate: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    setDate = _ => {\r\n        this.setState({ dueDate: this.props.task.dueDate ? new Date(this.props.task.dueDate) : new Date() })\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.saveTask();\r\n    // }\r\n\r\n    handleChange = date => {\r\n        this.setState({ dueDate: date });\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newTask = { ...this.props.task, dueDate: this.state.dueDate.getTime() };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the due date for task '${this.props.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"duedate-edit flex column\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}>\r\n                <div className=\"close-btn-container\">\r\n                    <CloseIcon className=\"duedate-edit-close-btn\" onClick={this.props.onToggle} />\r\n                </div>\r\n\r\n                <div className=\"flex column align-center justify-center datepicker-container\">\r\n                    <DatePicker\r\n                        selected={this.state.dueDate}\r\n                        onChange={this.handleChange}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeIntervals={15}\r\n                        timeCaption=\"Time\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        popperModifiers={{\r\n                            flip: {behavior: ['bottom']},\r\n                            preventOverflow: { enabled: false }\r\n                        }}\r\n                    />\r\n                    <button className=\"add-duedate-btn capitalize\" onClick={this.saveTask}>add</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class Labels extends Component {\r\n    state = {\r\n        choosenLabels: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenLabels: this.props.task.labels })\r\n    }\r\n\r\n    updateChoosenLabels = (ev) => {\r\n        const label = ev.target.classList[0];\r\n        const choosenLabels = this.state.choosenLabels;\r\n        const labelIdx = choosenLabels.findIndex(currLabel => currLabel === label);\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (labelIdx >= 0) {\r\n            choosenLabels.splice(labelIdx, 1)\r\n            msg = `A label was removed from the task '${this.props.task.title}'`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            choosenLabels.push(label);\r\n            msg = `A label was added to the task '${this.props.task.title}'`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ choosenLabels },() => this.onSave(msg, notificationType));\r\n    }\r\n\r\n    onSave = (msg, notificationType) => {\r\n        const newTask = { ...this.props.task, labels: this.state.choosenLabels };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.miniTask) {\r\n            updateStyle = {\r\n                left: 12 + 'px',\r\n                top: 36 + 'px',\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"labels-container text-center\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}\r\n            >\r\n                <CloseIcon className=\"labels-container-close-btn\" onClick={this.props.toggleChooseLabels} />\r\n                <p className=\"uppercase\">choose labels</p>\r\n                <hr />\r\n                <div className=\"labels-container-colors-container flex column align-center \">\r\n                    <div className=\"label-color-1 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-2 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-3 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-4 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-5 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-6 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class Members extends Component {\r\n    state = {\r\n        choosenMembers: [],\r\n        availableMembers: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenMembers: this.props.task.taskTeamMembers }, this.setAvailableMembers);\r\n    }\r\n\r\n    updateChoosenMembers = (teamMember) => {\r\n        const choosenMembers = this.state.choosenMembers;\r\n        const memberIdx = choosenMembers.findIndex(currMember => currMember._id === teamMember._id);\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (memberIdx >= 0) {\r\n            choosenMembers.splice(memberIdx, 1);\r\n            msg = `${teamMember.username} was released from the task '${this.props.task.title}'`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            choosenMembers.push(teamMember);\r\n            msg = `${teamMember.username} was asigned to the task '${this.props.task.title}'`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ choosenMembers }, this.setAvailableMembers(msg, notificationType));\r\n    }\r\n\r\n    setAvailableMembers = (msg, notificationType) => {\r\n        const availableMembers = this.props.board.teamMembers.filter(currMember => !this.state.choosenMembers.find(taskMember => taskMember._id === currMember._id));\r\n        this.setState({ availableMembers }, this.onSave(msg, notificationType));\r\n    }\r\n\r\n    onSave = (msg, notificationType) => {\r\n        const newTask = { ...this.props.task, taskTeamMembers: this.state.choosenMembers };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.pos) {\r\n            updateStyle = {\r\n                left: 10 + 'px',\r\n                top: 72 + 'px',\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"members-container text-center column\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}>\r\n                <CloseIcon className=\"members-container-close-btn\" onClick={this.props.toggleChooseMembers} />\r\n                <p className=\"uppercase\">assigned members</p>\r\n                <hr />\r\n\r\n                <div className=\"members-container-asign-members-wrapper flex\">\r\n                    <div className=\"members-container-asign-members flex column fill-width\">\r\n\r\n                        {this.props.task.taskTeamMembers.map(member => {\r\n                            return <div key={member._id} className=\"team-member flex\"\r\n                                onClick={() => this.updateChoosenMembers(member)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p>\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <p>{member.firstName} {member.lastName}</p>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"add-team-members-wrapper flex column\">\r\n                    <p className=\"uppercase\"> add a team member </p>\r\n                    <div className=\"add-team-members flex column\">\r\n                        {this.state.availableMembers.map(teamMember => {\r\n                            return (\r\n                                <div key={teamMember._id}\r\n                                    className=\"team-member flex align-center\"\r\n                                    onClick={() => this.updateChoosenMembers(teamMember)}>\r\n                                    <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p>\r\n                                                {utils.createUserIcon(teamMember.firstName,\r\n                                                    teamMember.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <p>{teamMember.firstName} {teamMember.lastName}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div >\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport utils from '../services/utils'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class Todo extends Component {\r\n    state = {\r\n        todos: [],\r\n        text: '',\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ todos: this.props.task.todos })\r\n    }\r\n\r\n    updateTodo = (ev) => {\r\n        this.setState({ text: ev.target.value })\r\n    }\r\n\r\n\r\n    onSaveTodo = async () => {\r\n        const todo = {\r\n            text: this.state.text,\r\n            isDone: false,\r\n            id: utils.getRandomId()\r\n        }\r\n\r\n        const todos = this.state.todos;\r\n        todos.push(todo);\r\n        this.setState({ todos });\r\n        const newTask = { ...this.props.task, todos: this.state.todos };\r\n        const newBoard = { ...this.props.board, tasks: { ...this.props.board.tasks, [newTask.id]: newTask } }\r\n        const taskTitle = this.props.task.title;\r\n        const msg = `${this.props.user} added a new todo to the task '${taskTitle}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.updateProgressBar();\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"check-list-item-container text-center\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n            >\r\n                <div className=\"checklist-closebtn-container\">\r\n                    <CloseIcon className=\"check-list-item-container-close-btn pointer\" onClick={this.props.toggleTodos} />\r\n                </div>\r\n\r\n                <div className=\"input-container flex column justify-center align-center\">\r\n                    <input className=\"text-center\" type=\"text\" placeholder=\"add new todo\"\r\n                        value={this.state.text}\r\n                        onChange={this.updateTodo} name=\"text\">\r\n                    </input>\r\n                    <button className=\"save-todo-btn capitalize\" onClick={this.onSaveTodo}>add</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n//icons :\r\n\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\r\nimport EventOutlinedIcon from '@material-ui/icons/EventOutlined';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\n\r\nimport DueDate from './DueDate';\r\nimport Labels from './Labels';\r\nimport Members from './Members';\r\nimport Todos from './Todos';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskDetails extends Component {\r\n    state = {\r\n        description: '',\r\n        teamMembers: [],\r\n        choosenMembers: [],\r\n        choosenlabels: [],\r\n        showActivity: false,\r\n        showEditDescriptionForm: false,\r\n        toggleChooseLabels: false,\r\n        toggleChooseMembers: false,\r\n        toggleTodos: false,\r\n        onToggleDueDate: false,\r\n        toggleDeleteTodo: false,\r\n        progressWidth: 0,\r\n        currTodoId: '',\r\n        taskTitle: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currTask = this.props.board.tasks[this.props.taskId]\r\n        this.setState({ description: currTask.description }, this.updateProgressBar);\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ description: targetValue });\r\n    }\r\n\r\n    openUpdateDescriptionForm = () => {\r\n        this.setState(prevState => ({ showEditDescriptionForm: true }))\r\n    }\r\n\r\n    onToggleDueDate = ev => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n\r\n    closeUpdateDescriptionForm = () => {\r\n        this.setState({ showEditDescriptionForm: false })\r\n    }\r\n\r\n    onStopPropagationAndCloseOptions = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            toggleChooseLabels: false,\r\n            toggleChooseMembers: false\r\n        })\r\n    }\r\n\r\n    toggleChooseLabels = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseLabels: !prevState.toggleChooseLabels }))\r\n    }\r\n\r\n    onSaveDescription = (ev, task) => {\r\n        ev.stopPropagation();\r\n        const newTask = { ...task, description: this.state.description };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The description of '${task.title}' was changed by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.closeUpdateDescriptionForm();\r\n    }\r\n\r\n    toggleChooseMembers = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseMembers: !prevState.toggleChooseMembers }))\r\n    }\r\n\r\n    toggleTodos = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleTodos: !prevState.toggleTodos }))\r\n    }\r\n\r\n    onDuplicateTask = (column, task) => {\r\n        const newTask = { ...task, id: utils.getRandomId(), labels: [...task.labels], todos: [...task.todos], taskTeamMembers: [...task.taskTeamMembers]};\r\n        column.taskIds.push(newTask.id);\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n    onDeleteTask = (column, task) => {\r\n        const board = { ...this.props.board };\r\n        const taskIds = column.taskIds;\r\n        const idx = taskIds.findIndex(taskId => taskId === task.id);\r\n        taskIds.splice(idx, 1);\r\n        delete board.tasks[task.id];\r\n        const msg = `'${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n    toggleTodoDone = async (todo) => {\r\n        todo.isDone = !todo.isDone;\r\n        let newTask = { ...this.props.board.tasks[this.props.taskId] };\r\n        const todos = newTask.todos;\r\n        const idx = todos.findIndex(currTodo => (currTodo.id === todo.id));\r\n        todos[idx].isDone = todo.isDone;\r\n        let doneTodosCounter = newTask.todos.filter(todo => (todo.isDone)).length;\r\n        newTask.todosDone = doneTodosCounter;\r\n        let msg = '';\r\n        let notificationType = '';\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        if (todo.isDone) {\r\n            msg = `The subtask '${todo.text}' in '${newTask.title}' was completed by ${this.props.user}`;\r\n            notificationType = 'success';\r\n        } else {\r\n            msg = `The subtask '${todo.text}' in '${newTask.title}' was remarked as uncompleted by ${this.props.user}`;\r\n            notificationType = 'danger';\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.updateProgressBar()\r\n    }\r\n\r\n    updateProgressBar = () => {\r\n        let start = this.state.progressWidth;\r\n        let task = this.props.board.tasks[this.props.taskId];\r\n        let doneTodosCounter = task.todos.filter(todo => (todo.isDone)).length;\r\n        task.todosDone = doneTodosCounter;\r\n\r\n        let interval;\r\n        let progressWidth = Math.round((doneTodosCounter / task.todos.length) * 100);\r\n        if (!progressWidth && !start) return;\r\n        if (start < progressWidth) {\r\n            interval = setInterval(() => {\r\n                if (start >= progressWidth) {\r\n                    clearInterval(interval);\r\n                } else {\r\n                    start++;\r\n                    this.setState({ progressWidth: start })\r\n                }\r\n            }, 10);\r\n        } else {\r\n            interval = setInterval(() => {\r\n                if (start <= progressWidth) {\r\n                    clearInterval(interval);\r\n                } else {\r\n                    start--;\r\n                    this.setState({ progressWidth: start })\r\n                }\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    deleteTodo = (todoId) => {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        let todos = task.todos;\r\n        const idx = todos.findIndex(currTodo => (currTodo.id === todoId));\r\n        const deletedTodo = todos[idx];\r\n        todos.splice(idx, 1);\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [task.id]: task\r\n            }\r\n        }\r\n        const msg = `The subtask '${deletedTodo.text}' in '${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.updateProgressBar();\r\n        this.hideDeleteTodoButton(todoId);\r\n    }\r\n\r\n    showDeleteTodoButton = (todoId) => {\r\n        this.setState({ toggleDeleteTodo: true, currTodoId: todoId });\r\n    }\r\n\r\n    hideDeleteTodoButton = (todoId) => {\r\n        this.setState({ toggleDeleteTodo: false, currTodoId: todoId });\r\n    }\r\n\r\n    setTaskName = (taskId) => {\r\n        const taskTitle = this.props.board.tasks[taskId].title;\r\n        this.setState({ taskTitle: taskTitle });\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        this.setState({ taskTitle: ev.target.innerText });\r\n    }\r\n\r\n    changeDescription = (ev) => {\r\n        this.setState({ description: ev.target.value });\r\n    }\r\n\r\n    saveTaskName = (taskId, title) => {\r\n        const taskTitle = this.props.board.tasks[taskId].title;\r\n        if (taskTitle === title) return;\r\n\r\n        const updatedBoard = { ...this.props.board };\r\n        updatedBoard.tasks[taskId].title = title;\r\n\r\n        const msg = `${this.props.user} changed the title of the task '${taskTitle}' to '${title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(updatedBoard, msg, notificationType);\r\n    }\r\n\r\n\r\n\r\n    uploadImage = async (ev) => {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        const newColumn = { ...this.props.column }\r\n        newColumn.taskIds = this.props.column.taskIds.slice();\r\n        const file = ev.target.files[0];\r\n        const imageUrl = await utils.uploadImg(file)\r\n        const newTask = { ...task }\r\n        newTask.type = 'image';\r\n        newTask.url = imageUrl;\r\n        newTask.taskTeamMembers = [...task.taskTeamMembers];\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [newColumn.id]: newColumn\r\n            },\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n\r\n        const msg = `${this.props.user} changed task ${this.props.board.tasks[this.props.taskId]}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n\r\n    render() {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        const { column } = this.props;\r\n        return (\r\n            <div className=\"screen flex align-center justify-center\" onClick={() => this.props.toggleTaskDetails()}>\r\n                <div className=\"task-details-container-wrapper flex\" onClick={(ev) => this.onStopPropagationAndCloseOptions(ev)}>\r\n                    <div className=\"task-details-container flex\">\r\n                        <CloseIcon className=\"add-column-back-to-board   flex align-center\"\r\n                            onClick={() => this.props.toggleTaskDetails()} />\r\n                        <div className=\"task-details-container-main full\">\r\n                            <header className=\"task-details-container-header\">\r\n                                <DescriptionOutlinedIcon style={{\r\n                                    color: '#42526e', position: 'absolute',\r\n                                    top: '10px',\r\n                                    left: '12px'\r\n                                }} />\r\n                                <h2\r\n                                    contentEditable='true'\r\n                                    spellCheck=\"false\"\r\n                                    onFocus={() => this.setTaskName(task.id)}\r\n                                    onInput={(ev) => this.emitChange(ev)}\r\n                                    onBlur={() => this.saveTaskName(task.id, this.state.taskTitle)}\r\n                                    suppressContentEditableWarning={true}\r\n                                >{task.title}</h2>\r\n                                <div className=\"task-details-container-in-list flex\">\r\n                                    <p>in list <span>{column.title}</span></p>\r\n                                </div>\r\n                            </header>\r\n\r\n                            <div className=\"chosen-labels-container\">\r\n                                {this.state.toggleChooseLabels ?\r\n                                    <Labels\r\n                                        toggleChooseLabels={this.toggleChooseLabels}\r\n                                        board={this.props.board}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                    /> : ''\r\n                                }\r\n                                {task.labels.length !== 0 && <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '.04em',\r\n                                }}>Labels</h3>}\r\n                                <div className=\"labels-choosen-container flex\">\r\n                                    {\r\n                                        task.labels.map(label => {\r\n                                            return <div key={label} className={label + ' medium-label'}>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"task-details-container-members-container\">\r\n                                {this.state.toggleChooseMembers ?\r\n                                    <Members\r\n                                        toggleChooseMembers={this.toggleChooseMembers}\r\n                                        board={this.props.board}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                        users={this.props.users}\r\n                                    /> : ''\r\n                                }\r\n                                {task.taskTeamMembers.length !== 0 && <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '.04em'\r\n                                }}>members</h3>}\r\n                                <div className=\"flex\">\r\n                                    {\r\n                                        task.taskTeamMembers.map(member => {\r\n                                            return <Avatar key={member._id} style={{\r\n                                                backgroundColor: '#dfe1e6',\r\n                                                height: 28,\r\n                                                width: 28,\r\n                                                fontSize: '0.85rem',\r\n                                                margin: '4px 4px 4px 0',\r\n                                                color: '#172b4d',\r\n                                                fontWeight: 600,\r\n                                                textAlign: 'center'\r\n                                            }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </Avatar>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"task-details-container-check-list-container\">\r\n                                {this.state.toggleTodos ?\r\n                                    <Todos\r\n                                        toggleTodos={this.toggleTodos}\r\n                                        board={this.props.board}\r\n                                        user={this.props.user}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                        updateProgressBar={this.updateProgressBar}\r\n                                    /> : ''\r\n                                }\r\n                                <AssignmentTurnedInOutlinedIcon\r\n                                    style={{\r\n                                        color: '#42526e',\r\n                                        position: 'relative',\r\n                                        top: '35px',\r\n                                        right: '44px',\r\n                                    }}\r\n                                />\r\n                                <h2>Checklist</h2>\r\n\r\n                                {task.todos ?\r\n                                    <div className=\"check-list-container flex column\">\r\n                                        {task.todos.map(todo => {\r\n                                            return <div key={todo.id} className=\"todo-item flex align-center space-between\" onMouseEnter={() => this.showDeleteTodoButton(todo.id)}\r\n                                                onMouseLeave={() => this.hideDeleteTodoButton(todo.id)}>\r\n                                                <div className=\"flex align-center\">\r\n                                                    <input type=\"checkbox\" onChange={() => this.toggleTodoDone(todo)} checked={todo.isDone ? 'checked' : ''}>\r\n                                                    </input>\r\n                                                    <p className={todo.isDone ? \"text-decoration\" : \"\"}>\r\n                                                        {todo.text}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <DeleteOutlineIcon\r\n                                                    onClick={() => this.deleteTodo(todo.id)}\r\n                                                    className=\"pointer delete-btn\"\r\n                                                    style={{ display: this.state.toggleDeleteTodo && this.state.currTodoId === todo.id ? 'block' : 'none' }}\r\n                                                />\r\n                                            </div>\r\n                                        })\r\n                                        }\r\n                                        <div className=\"check-list-progress\">\r\n                                            <div className=\"progress fill-height flex align-center\" style={{ width: this.state.progressWidth + \"%\" }} >\r\n                                                <small className=\"fill-width text-center\">{this.state.progressWidth + \"%\"}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                            <div className=\"task-details-container-duedate-container\">\r\n                                <EventOutlinedIcon style={{\r\n                                    color: '#42526e', position: 'relative',\r\n                                    top: '35px',\r\n                                    right: '44px'\r\n                                }} />\r\n                                <h2>Due Date</h2>\r\n                                {(task.dueDate) ?\r\n                                    <p>{moment(task.dueDate).format(\"MMMM Do YYYY, hh:mm a\")}</p> :\r\n                                    <p>This task doesn't have a due date yet</p>\r\n                                }\r\n                                {this.state.onToggleDueDate ? <DueDate\r\n                                    task={task}\r\n                                    onToggle={this.onToggleDueDate}\r\n                                    board={this.props.board}\r\n                                    updateBoard={this.props.updateBoard}\r\n                                    updateProgressBar={this.updateProgressBar}\r\n\r\n                                    user={this.props.user}\r\n                                /> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"task-details-container-description\">\r\n                                <NotesIcon style={{\r\n                                    color: '#42526e', position: 'relative',\r\n                                    top: '35px',\r\n                                    right: '44px'\r\n                                }} />\r\n                                <h2>Description</h2>\r\n                                <textarea className=\"fill-width\"\r\n                                    name=\"description\"\r\n                                    cols=\"40\"\r\n                                    onChange={this.changeDescription}\r\n                                    onClick={this.openUpdateDescriptionForm}\r\n                                    value={this.state.description}\r\n                                    spellCheck=\"false\"\r\n                                    placeholder=\"Add a more detailed description...\">\r\n                                </textarea>\r\n                                {this.state.showEditDescriptionForm ?\r\n                                    <div className=\"flex align-center\">\r\n                                        <button className=\"task-form-save-btn uppercase\" onClick={(ev) => this.onSaveDescription(ev, task)}>save</button>\r\n                                        <CloseIcon className=\"task-form-back-btn\" onClick={this.closeUpdateDescriptionForm} />\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"task-details-container-overall-options\">\r\n                            <div className=\"task-details-container-add-to-card-options container\">\r\n                                <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '0.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '0.04em'\r\n                                }}>add to card</h3>\r\n                                <div className=\"task-details-container-add-to-card-options flex column\">\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleChooseLabels(ev)}>\r\n                                        <LabelOutlinedIcon />\r\n                                        <p className=\"capitalize\" >labels</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleChooseMembers(ev)} >\r\n                                        <PersonAddOutlinedIcon />\r\n                                        <p className=\"capitalize\">members</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleTodos(ev)} >\r\n                                        <AssignmentTurnedInOutlinedIcon />\r\n                                        <p className=\"capitalize\">check list</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.onToggleDueDate(ev)}>\r\n                                        <EventOutlinedIcon />\r\n                                        <p className=\"capitalize\">due date</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\">\r\n                                        <ImageOutlinedIcon />\r\n                                        <input style={{ display: \"none\" }} type=\"file\" id=\"upload-img-2\" onChange={ev => this.uploadImage(ev)}></input>\r\n                                        <label htmlFor=\"upload-img-2\"><p className=\"capitalize\">\r\n                                            upload image\r\n                                            </p></label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-details-container-actions-options container flex column \">\r\n                                <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '0.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '0.04em'\r\n                                }}>actions</h3>\r\n                                <div className=\"task-details-container-actions-options-btn flex align-center\" onClick={() => this.onDuplicateTask(column, task)}>\r\n                                    <FileCopyOutlinedIcon />\r\n                                    <p className=\"capitalize\">duplicate</p>\r\n                                </div>\r\n                                <div className=\"task-details-container-actions-options-btn flex align-center\" onClick={() => this.onDeleteTask(column, task)}>\r\n                                    <DeleteOutlineOutlinedIcon />\r\n                                    <p className=\"capitalize\">delete</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MiniDetailsButton extends Component {\r\n\r\n    render() {\r\n        const { text, onClick } = this.props;\r\n        return <div className=\"mini-details-editor-button\"\r\n            onClick={onClick}>\r\n            <p>{text}</p>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsButton from './MiniDetailsButton';\r\nimport Labels from './Labels';\r\nimport DueDate from './DueDate';\r\nimport Members from './Members';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class MiniDetailsEditor extends Component {\r\n    state = {\r\n        onToggleLabels: false,\r\n        onToggleDueDate: false,\r\n        onToggleMembers: false\r\n    }\r\n\r\n    onToggleLabels = _ => {\r\n        this.setState(prevState => ({ onToggleLabels: !prevState.onToggleLabels }));\r\n    }\r\n\r\n    onToggleDueDate = _ => {\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n    onToggleMembers = _ => {\r\n        this.setState(prevState => ({ onToggleMembers: !prevState.onToggleMembers }));\r\n    }\r\n\r\n    onDuplicateTask = _ => {\r\n        const { task } = this.props.miniTask\r\n        const newTask = { ...task, id: utils.getRandomId(), labels: [...task.labels], todos: [...task.todos], taskTeamMembers: [...task.taskTeamMembers]};\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        newBoard.columns[this.props.miniTask.column.id].taskIds.push(newTask.id);\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    onDelete = _ => {\r\n        const { miniTask } = this.props;\r\n        const board = { ...this.props.board };\r\n        const column = this.props.miniTask.column;\r\n        const taskIds = column.taskIds;\r\n        const task = board.tasks[miniTask.task.id];\r\n        const idx = taskIds.findIndex(taskId => taskId === miniTask.task.id);\r\n        taskIds.splice(idx, 1);\r\n        delete board.tasks[miniTask.task.id];\r\n        const msg = `'${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger'; \r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        let top = boundingClientRect.top;\r\n\r\n        if(top + 180 > window.innerHeight){\r\n            top = window.innerHeight - 180;\r\n        }\r\n\r\n        return <div\r\n            className=\"mini-details-editor\"\r\n            style={{\r\n                left: (boundingClientRect.left + 265) + 'px',\r\n                top: (top + 1) + 'px'\r\n            }}\r\n        >\r\n            <MiniDetailsButton text=\"🖊️ Edit Labels\" onClick={this.onToggleLabels} />\r\n            {this.state.onToggleLabels ? <Labels\r\n                miniTask={miniTask}\r\n                task={miniTask.task}\r\n                toggleChooseLabels={this.onToggleLabels}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard} /> : ''}\r\n            <MiniDetailsButton text=\"🎭 Change Members\" onClick={this.onToggleMembers} />\r\n            {this.state.onToggleMembers ? <Members\r\n                pos={true}\r\n                task={miniTask.task}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleChooseMembers={this.onToggleMembers}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"📅 Change Due Date\" onClick={this.onToggleDueDate} />\r\n            {this.state.onToggleDueDate ? <DueDate\r\n                task={miniTask.task}\r\n                onToggle={this.onToggleDueDate}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"⎘ Duplicate Task\" onClick={this.onDuplicateTask} />\r\n            <MiniDetailsButton text=\"🗑️ Delete Task\" onClick={this.onDelete} />\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default function ScreenFilter(props) {\r\n    return (\r\n        <div className=\"screen-filter\" onClick={_ => props.onToggle()}></div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniTextDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the title of the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 248 ? window.innerHeight - top - 50 : 248;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n        \r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + 10) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n            />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniImageDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n        this.imgContainer = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n        imgHeight: 220\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n        this.setState({ imgHeight: this.imgContainer.current.getBoundingClientRect().height });\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 252 ? window.innerHeight - top - 50 : 252;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                <img ref={this.imgContainer} title={task.id} alt=\"task\" src={task.url} />\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    style={{\r\n                        height: height - this.state.imgHeight + 'px',\r\n                        position: 'relative',\r\n                    }}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + (task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import MiniTextDetails from './MiniTextDetails';\r\nimport MiniImageDetails from './MiniImageDetails';\r\nimport MiniVideoDetails from './MiniVideoDetails';\r\n\r\nexport default {\r\n    text: MiniTextDetails,\r\n    video: MiniVideoDetails,\r\n    image: MiniImageDetails\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniVideoDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const videoDimensions = { height: 140, width: 246 };\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 248 ? window.innerHeight - top - 50 : 248;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                {task.type === 'video' ?\r\n                    <iframe title={task.id}\r\n                        type='text/html' width={videoDimensions.width}\r\n                        height={videoDimensions.height}\r\n                        src={task.url}\r\n                        allowFullScreen=\"allowfullscreen\"></iframe>\r\n                    : <img ref={this.imgContainer} title={task.id} alt=\"task\" src={task.url} />\r\n                }\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    style={{\r\n                        height: height - videoDimensions.height,\r\n                        position: 'relative',\r\n                        bottom: 14 + 'px'\r\n                    }}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + (task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicMiniComponents from \"./mapDynamicMiniComponents\"\r\n\r\nexport default class DynamicMiniComponent extends Component {\r\n    state = {\r\n        previewType: 'text'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ previewType: this.props.miniTask.previewType });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicMiniComponents[this.state.previewType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                miniTask={this.props.miniTask}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n                board={this.props.board}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { store } from 'react-notifications-component';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport LoadPage from '../cmps/LoadPage';\r\nimport BoardColumns from '../cmps/BoardColumns';\r\nimport BoardHistory from '../cmps/BoardHistory';\r\nimport BoardTeamMembers from '../cmps/BoardTeamMembers';\r\nimport ColumnAddForm from '../cmps/ColumnAddForm';\r\nimport Login from '../cmps/Login';\r\nimport Filter from '../cmps/Filter';\r\nimport Sort from '../cmps/Sort';\r\nimport SplashMenu from '../cmps/SplashMenu';\r\nimport TaskDetails from '../cmps/TaskDetails';\r\nimport DynamicMiniComponent from '../cmps/dynamics/DynamicMiniComponent';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\nimport ImageSearchOutlinedIcon from '@material-ui/icons/ImageSearchOutlined';\r\nimport HistoryOutlinedIcon from '@material-ui/icons/HistoryOutlined';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\n\r\nimport utils from '../services/utils';\r\nimport SocketService from '../services/SocketService';\r\n\r\nimport { loadBoard, updateBoard, setBoard } from '../actions/BoardActions';\r\nimport { logout, getLoggedInUser, getUsers } from '../actions/UserActions';\r\n\r\n// import { filterBoard } from '../selectors/BoardSelector';\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    showColAddForm: true,\r\n    showTaskDetails: false,\r\n    showMiniTaskDetails: false,\r\n    toggleLogin: false,\r\n    toggleSplashMenu: false,\r\n    showHistory: false,\r\n    toggleBoardTeamMembers: false,\r\n    miniTaskDetails: {},\r\n    filterBy: {\r\n      title: '',\r\n      teamMembers: ''\r\n    },\r\n    sortBy: '',\r\n    sortOrder: '',\r\n    showTopMenuOptions: true,\r\n    showAddForm: false,\r\n    currColumnId: '',\r\n    isBoardLoaded: false,\r\n    isDarkBackground: null,\r\n    filterIconMod: false,\r\n    mobileMod: false\r\n  }\r\n\r\n  componentDidMount() {\r\n    const boardId = this.props.match.params.id;\r\n\r\n    this.props.getUsers();\r\n    this.props.getLoggedInUser();\r\n    this.loadBoard();\r\n    this.resize();\r\n    window.addEventListener('resize', this.resize);\r\n\r\n    SocketService.setup();\r\n    SocketService.emit('boardId', boardId);\r\n    SocketService.on('updateBoard', (board) => this.props.setBoard(board));\r\n    SocketService.on('getNotification', (notification) => store.addNotification(notification));\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const boardId = this.props.match.params.id;\r\n    if (this.state.isBoardLoaded) {\r\n      if (prevProps.board.boardBgImage !== this.props.board.boardBgImage) {\r\n        this.isDarkBackground();\r\n      };\r\n      return;\r\n    } else if (boardId === this.props.board._id) {\r\n      this.setState({ isBoardLoaded: true });\r\n      this.isDarkBackground();\r\n    };\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resize);\r\n    SocketService.off('updateBoard');\r\n    SocketService.off('getNotification');\r\n    SocketService.terminate();\r\n  }\r\n\r\n  loadBoard = () => {\r\n    const boardId = this.props.match.params.id;\r\n    const filterBy = this.state.filterBy;\r\n    const sortBy = this.state.sortBy;\r\n    const sortOrder = this.state.sortOrder;\r\n    this.props.loadBoard(boardId, filterBy, sortBy, sortOrder);\r\n  }\r\n\r\n  toggleAddColumn = () => {\r\n    this.setState((prevState) => ({\r\n      showColAddForm: !prevState.showColAddForm,\r\n    }))\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState((prevState) => ({\r\n      toggleLogin: !prevState.toggleLogin,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleSplashMenu: false\r\n    }))\r\n  }\r\n\r\n  closeAllTabs = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState({\r\n      toggleLogin: false,\r\n      toggleSplashMenu: false,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      showTopMenuOptions: false,\r\n      showAddForm: false,\r\n    });\r\n  }\r\n\r\n  toggleTaskDetails = (currTask) => {\r\n    if (currTask === undefined) {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails }));\r\n    } else if (this.state.showTaskDetails && currTask.id !== this.state.currTask.id) {\r\n      this.setState({ currTask });\r\n    } else {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTask }));\r\n    }\r\n  }\r\n\r\n  onAddImg = (ev) => {\r\n    const file = ev.target.files[0];\r\n    utils.uploadImg(file).then(res => {\r\n      const newBoard = { ...this.props.board }\r\n      newBoard.boardBgImage = res\r\n      newBoard.boardBgThumbnail = res\r\n      const msg = `${this.props.user} changed background image`;\r\n      const notificationType = 'success';\r\n      this.props.updateBoard(newBoard, msg, notificationType);\r\n    })\r\n  }\r\n\r\n  onFilter = (filterBy) => {\r\n    this.setState(prevState => ({ filterBy: { ...prevState.filterBy, ...filterBy } }), this.loadBoard);\r\n    // this.props.updateFilter(filterBy);\r\n  }\r\n\r\n  onSort = (sortBy, sortOrder) => {\r\n    this.setState({ sortBy, sortOrder }, this.loadBoard);\r\n  }\r\n\r\n  toggleMiniDetails = miniTask => {\r\n    if (miniTask) {\r\n      return this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails, miniTaskDetails: miniTask }));\r\n    }\r\n    this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails }));\r\n  }\r\n\r\n  toggleSplashMenu = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleSplashMenu: !prevState.toggleSplashMenu,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardHistory = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      showHistory: !prevState.showHistory,\r\n      toggleSplashMenu: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardTeamMembers = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleBoardTeamMembers: !prevState.toggleBoardTeamMembers,\r\n      showHistory: false,\r\n      toggleSplashMenu: false,\r\n      toggleLogin: false\r\n    }))\r\n  }\r\n\r\n  openAddForm = colId => {\r\n    this.setState({ showAddForm: true, currColumnId: colId }, this.closeEditColumn);\r\n  }\r\n\r\n  closeAddForm = _ => {\r\n    this.setState({ showAddForm: false });\r\n  }\r\n\r\n  openEditColumn = (colId) => {\r\n    this.setState({ showTopMenuOptions: true, currColumnId: colId }, this.closeAddForm());\r\n  }\r\n\r\n  closeEditColumn = _ => {\r\n    this.setState({ showTopMenuOptions: false });\r\n  }\r\n\r\n  isDarkBackground = async (img) => {\r\n    const fac = new FastAverageColor();\r\n    let backgroundImage = new Image();\r\n    backgroundImage.crossOrigin = 'anonymous';\r\n    backgroundImage.src = img || this.props.board.boardBgImage;\r\n    try {\r\n      const color = await fac.getColorAsync(backgroundImage, { algorithm: 'dominant' });\r\n      (color.isDark) ? this.setState({ isDarkBackground: true }) : this.setState({ isDarkBackground: false });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  resize = _ => {\r\n    this.setState({\r\n      filterIconMod: window.innerWidth < 1075 ? true : false,\r\n      mobileMod: window.innerWidth < 550 ? true : false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isBoardLoaded) return <LoadPage />\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <ExitToAppIcon onClick={this.props.logout} />\r\n    } else {\r\n      button = <div className=\"login-btn flex\"\r\n        onClick={ev => this.toggleLogin(ev)}>\r\n        <PersonOutlineIcon />\r\n        <p>login</p>\r\n      </div>\r\n    }\r\n\r\n    return (\r\n      <div className=\"screen\" onClick={this.closeAllTabs}>\r\n        <div className=\"board-page fill-height flex column\" style={{ backgroundImage: 'url(' + this.props.board.boardBgImage + ')', backgroundAttachment: 'fixed' }}>\r\n\r\n          <div className=\"board-page-nav-bar flex align-center space-between\">\r\n            <div className=\"board-page-nav-bar-logo\" onClick={this.goBack}> </div>\r\n            <div className=\"flex align-center\">\r\n              {this.props.loggedInUser &&\r\n                <div className=\"flex\">\r\n                  <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: 'rgba(223, 225, 230, 0.8)', color: '#172b4d' }} >\r\n                    <div className=\"team-member-icon\">\r\n                      <p>\r\n                        {utils.createUserIcon(this.props.loggedInUser.firstName,\r\n                          this.props.loggedInUser.lastName)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {!this.state.mobileMod ?\r\n                    <div className=\"logged-in-user flex column\">\r\n                      <small>Logged as:</small>\r\n                      <p> {this.props.loggedInUser.username}</p>\r\n                    </div> : ''}\r\n                </div>\r\n              }\r\n              {button}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"board-page-nav-bar-filters flex wrap align-center space-between\">\r\n            <div className=\"left-section flex align-center wrap\" style={{ marginTop: 2 }}>\r\n              <div className=\"left-section-mobile-mode flex align-center\">\r\n                <button\r\n                  className={`board-page-nav-bar-filters nav-btn flex \r\n                ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={this.goBack} >\r\n                  <HomeIcon />\r\n                </button>\r\n\r\n\r\n                <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n                <Sort onSort={this.onSort} isDarkBackground={this.state.isDarkBackground} />\r\n                {window.innerWidth < 489 ? '' :\r\n                  <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n                }\r\n\r\n              </div>\r\n\r\n              <Filter onFilter={this.onFilter}\r\n                teamMembers={this.props.board.teamMembers}\r\n                isDarkBackground={this.state.isDarkBackground} />\r\n\r\n\r\n\r\n              {!this.state.mobileMod ?\r\n                <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n                : ''\r\n              }\r\n            </div>\r\n\r\n\r\n            <div className=\"right-section flex align-center\" style={{ marginTop: 2 }}>\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button\r\n                  className={`nav-btn fill-height capitalize\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={this.toggleBoardTeamMembers}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <GroupAddOutlinedIcon style={{ marginRight: 5 }} />\r\n                    add members\r\n                    </Typography> : <GroupAddOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button\r\n                  className={`nav-btn fill-height capitalize\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={(ev) => this.toggleSplashMenu(ev)}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <ImageSearchOutlinedIcon style={{ marginRight: 5 }} />\r\n                    change background\r\n                  </Typography> : <ImageSearchOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <div className=\"board-page-nav-bar-filters-item flex fill-height\">\r\n                <button\r\n                  className={`nav-btn fill-height capitalize \r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={this.toggleBoardHistory}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <HistoryOutlinedIcon style={{ marginRight: 5 }} />\r\n                    show history\r\n                  </Typography> : <HistoryOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <CSSTransition\r\n            in={this.state.toggleSplashMenu}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <SplashMenu\r\n              // toggleSplashMenu={this.state.toggleSplashMenu}\r\n              board={this.props.board}\r\n              updateBoard={this.props.updateBoard}\r\n              closeAllTabs={this.closeAllTabs}\r\n              onAddImg={this.onAddImg}\r\n              showUploadBgImg={this.state.closeAllTabs}\r\n              isDarkBackground={this.isDarkBackground}\r\n              user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n            />\r\n          </CSSTransition>\r\n\r\n          <div className=\"board-page-columns-container\">\r\n            <div className=\"flex align-start fill-height\">\r\n              <CSSTransition\r\n                in={this.state.toggleLogin}\r\n                timeout={700}\r\n                classNames=\"modal\"\r\n                unmountOnExit\r\n              >\r\n                <Login\r\n                  variant=\"outlined\"\r\n                  className=\"home-page-login\"\r\n                  toggleLogin={this.toggleLogin}\r\n                  toggleState={this.state.toggleLogin} />\r\n              </CSSTransition>\r\n              <BoardColumns\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleTaskDetails={this.toggleTaskDetails}\r\n                toggleMiniDetails={this.toggleMiniDetails}\r\n                user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n                currColumnId={this.state.currColumnId}\r\n                openAddForm={this.openAddForm}\r\n                closeAddForm={this.closeAddForm}\r\n                openEditColumn={this.openEditColumn}\r\n                closeEditColumn={this.closeEditColumn}\r\n                showTopMenuOptions={this.state.showTopMenuOptions}\r\n                showAddForm={this.state.showAddForm}\r\n              />\r\n              <div className=\"flex column align-center\">\r\n                {this.state.showColAddForm ?\r\n                  <button className={`board-page-add-another-column-btn\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                    onClick={this.toggleAddColumn}>\r\n                    <span className=\"add-icon\">+</span>Add another list</button> : ''}\r\n                {!this.state.showColAddForm && <ColumnAddForm board={this.props.board} updateBoard={this.props.updateBoard}\r\n                  toggleAddForm={this.toggleAddColumn} user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.showTaskDetails && <TaskDetails\r\n            taskId={this.state.currTask.id}\r\n            board={this.props.board}\r\n            column={this.state.currTask.column}\r\n            updateBoard={this.props.updateBoard}\r\n            toggleTaskDetails={this.toggleTaskDetails}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n          {this.state.showMiniTaskDetails && <DynamicMiniComponent\r\n            miniTask={this.state.miniTaskDetails}\r\n            updateBoard={this.props.updateBoard}\r\n            onToggle={this.toggleMiniDetails}\r\n            board={this.props.board}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n          />}\r\n          <CSSTransition\r\n            in={this.state.showHistory}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <BoardHistory variant=\"outlined\"\r\n              className=\"home-page-login\" history={this.props.board.history} />\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            in={this.state.toggleBoardTeamMembers}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <BoardTeamMembers board={this.props.board}\r\n              users={this.props.users}\r\n              updateBoard={this.props.updateBoard} />\r\n          </CSSTransition>\r\n        </div>\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser,\r\n    users: state.user.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  updateBoard,\r\n  logout,\r\n  getLoggedInUser,\r\n  setBoard,\r\n  getUsers,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport '../src/styles/global.scss'\r\n\r\nimport Home from './pages/Home.js';\r\nimport Board from './pages/Board.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/board/:id\" component={Board} exact />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  boards: [],\r\n  board: {},\r\n  filterBy: {title: '', teamMembers: ''}\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards };\r\n    case 'UPDATE_BOARD':\r\n      return { ...state, board: action.board };\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.addedBoard] };\r\n    case 'UPDATE_FILTER':\r\n      return { ...state, filterBy: action.filterBy };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","let localLoggedinUser = null;\r\n// if (localStorage.user) localLoggedinUser = JSON.parse(localStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'SET_USERS':\r\n      return {...state, users: action.users};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport BoardReducer from './BoardReducer'\r\nimport UserReducer from './UserReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  boards: BoardReducer,\r\n  user: UserReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux'\r\nimport ReactNotification from 'react-notifications-component';\r\n\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport 'react-notifications-component/dist/theme.css';\r\n\r\nimport Store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store={Store}>\r\n    <ReactNotification />\r\n      <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}