{"version":3,"sources":["history.js","cmps/BoardPreview.js","cmps/BoardsList.js","services/SocketService.js","services/utils.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","cmps/Login.js","services/BoardService.js","actions/BoardActions.js","pages/Home.js","cmps/TopMenuOptions.js","cmps/dynamics/mapDynamicComponents.js","cmps/dynamics/TaskPreview.js","cmps/dynamics/VideoPreview.js","cmps/dynamics/ImagePreview.js","cmps/dynamics/DynamicComponent.js","cmps/TasksList.js","cmps/TaskForm.js","cmps/BoardColumns.js","cmps/BoardHistory.js","cmps/BoardTeamMembers.js","cmps/ColumnAddForm.js","cmps/Filter.js","cmps/Sort.js","cmps/SplashMenu.js","cmps/DueDate.js","cmps/Labels.js","cmps/Members.js","cmps/TaskDetails.js","cmps/MiniDetailsButton.js","cmps/MiniDetailsEditor.js","cmps/ScreenFilter.js","cmps/dynamics/MiniTextDetails.js","cmps/dynamics/MiniImageDetails.js","cmps/dynamics/mapDynamicMiniComponents.js","cmps/dynamics/MiniVideoDetails.js","cmps/dynamics/DynamicMiniComponent.js","pages/Board.js","cmps/LoadPage.js","App.js","serviceWorker.js","reducers/BoardReducer.js","reducers/UserReducer.js","reducers/SystemReducer.js","reducers/index.js","store.js","index.js"],"names":["history","createBrowserHistory","BoardPreview","board","className","style","height","width","position","src","boardBgImage","alt","withRouter","socket","newBoards","boards","filter","_id","map","key","to","setup","io","terminate","on","eventName","cb","off","emit","data","getRandomId","letters","id","i","ind","Math","floor","random","length","createUserIcon","firstName","lastName","charAt","getRandomColor","color","uploadImg","file","UPLOAD_URL","formData","FormData","append","axios","post","then","res","url","catch","err","console","error","getImagesFromUnsplash","filterName","URL","get","results","emitNotification","msg","type","notification","message","insert","container","animationIn","animationOut","dismiss","duration","SocketService","Axios","create","withCredentials","endpoint","ajax","a","async","method","log","dir","response","status","push","login","userCred","HttpService","user","logout","signup","getLoggedInUser","getUsers","users","dispatch","UserService","_setUser","_setUsers","Login","state","loginCred","email","password","signupCred","username","utils","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","props","doSignup","signupCreds","toggleLogin","doLogout","doStopPropagation","stopPropagation","this","signupSection","onSubmit","onChange","placeholder","loginSection","loggedInUser","toggleState","onClick","Component","mapDispatchToProps","connect","isLoading","system","add","query","boardId","filterBy","sortBy","sortOrder","Object","keys","join","_createQueryString","put","remove","_setBoards","loadBoard","BoardService","_setBoard","_boardUpdate","Home","closeLogin","createBoard","createdBy","time","Date","now","newBoard","loadBoards","title","button","Button","Fab","variant","href","addedBoard","_addBoard","TopMenuOptions","onDuplicateColumn","column","newColumn","newId","idx","columnOrder","findIndex","columnId","splice","taskIds","forEach","taskId","clonedTaskId","taskIdIdx","taskIdx","tasks","columns","toggleTopMenuOptions","unshift","updateBoard","onDelete","text","elTop","elLeft","elHeight","toggleMiniDetails","miniTask","task","left","refs","ref","getBoundingClientRect","top","previewType","provided","innerRef","isDragging","showEditBtn","onTaskId","draggableProps","dragHandleProps","labels","label","description","e","taskTeamMembers","member","backgroundColor","video","allowFullScreen","security","image","imgWidth","imgHeight","isMiniDetailsOn","setNewState","_","img","Image","onload","heightRatio","newWidth","widthRatio","newHeight","DynamicComponent","componentType","mapDynamicComponents","Cmp","getComponent","Fragment","TasksList","showAddForm","currTaskId","showTaskDetails","toggleTaskDetails","canOpenTaskDetails","hideEditBtn","isDraggingOver","droppableProps","draggableId","index","snapshot","rotationMultiplier","onMouseEnter","onMouseLeave","TaskForm","createdAt","dueDate","importance","creator","edit","inputChange","fieldName","save","checkIfUrlAndSave","match","newUrl","replace","saveTask","includes","closeUpdateForm","toggleUpdateForm","textAreaAdjust","scrollHeight","nameInput","focus","setFormDataForEdit","prevProps","onKeyUp","input","BoardColumns","timer","taskKey","onDragEnd","result","destination","source","droppableId","newColumnOrder","slice","columnTitle","start","finish","newTaskIds","taskTitle","startTaskIds","newStart","finishTaskIds","newFinish","handleCheck","colId","clearTimeout","setTimeout","updatedBoard","emitChange","innerText","currColumnId","showTopMenuOptions","direction","columnKey","currId","contentEditable","spellCheck","onInput","suppressContentEditableWarning","openEditColumn","closeEditColumn","openAddForm","closeAddForm","BoardHistory","showHistory","item","moment","calendar","BoardTeamMembers","currentBoardMembers","toggleUsersList","componentDidMount","teamMembers","updateTeamMembers","notificationType","find","teamMember","onStopPropagation","toggleBoardTeamMembers","ColumnAddForm","saveColumn","toggleAddForm","Filter","onFilterClick","onFilter","Sort","onSortBy","onSort","toggleButtonName","splashImagesUrls","filterByName","onSave","splashImages","UrlIndx","currUrl","urls","full","setBoardBackground","toggleSplashMenu","display","onAddImg","htmlFor","imageUrl","DueDate","setDate","handleChange","date","newTask","getTime","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","onToggle","React","Labels","choosenLabels","updateChoosenLabels","classList","labelIdx","currLabel","updateStyle","toggleChooseLabels","Members","choosenMembers","availableMembers","setAvailableMembers","currMember","taskMember","updateChoosenMembers","memberIdx","pos","toggleChooseMembers","TaskDetails","showActivity","showEditDescriptionForm","deuDate","choosenlabels","onToggleDueDate","targetValue","toggleUpdateDescriptionForm","closeUpdateDescriptionForm","onStopPropagationAndCloseOptions","onSaveDescription","onDuplicateTask","rows","cols","defaultValue","MiniDetailsButton","MiniDetailsEditor","onToggleLabels","onToggleMembers","ScreenFilter","MiniTextDetails","handleFocus","select","textarea","labelLen","onFocus","MiniImageDetails","videoDimensions","bottom","DynamicMiniComponent","mapDynamicMiniComponents","Board","showColAddForm","showMiniTaskDetails","toggleUploadBgImg","miniTaskDetails","params","toggleAddColumn","goBack","closeAllTabs","currTask","undefined","files","toggleBoardHistory","setBoard","store","addNotification","backgroundImage","showUploadBgImg","CircularProgress","App","path","component","exact","Boolean","window","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6a02a02e.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React from \"react\";\r\n\r\nexport default function BoardPreview({ board }) {\r\n  return (\r\n    <div className=\"board-preview card\">\r\n      <img style={{ height: \"100%\", width: \"100%\"  , position: \"absolute\"}} src={board.boardBgImage} alt=\"none\">\r\n      </img>\r\n      <div>\r\n        <h2>click me!</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport BoardPreview from \"./BoardPreview\";\r\n\r\nfunction BoardsList({ boards }) {\r\n\r\n    const newBoards = boards.filter(board => board._id !== '5e2581b51c9d44000081af2a');\r\n\r\n    return (\r\n        <section className=\"boards-list flex column\">\r\n            <h2 className=\"text-center uppercase\"> check our beautiful boards</h2>\r\n            <div className=\"boards-list-main-container fill-width\">\r\n                <div className=\"boards-list-main-inner-container\">\r\n                    {newBoards.map(board => (\r\n                        <NavLink className=\"boards-list-main-inner-container-item\" key={board._id} to={`/board/${board._id}`}>\r\n                            <BoardPreview board={board} />\r\n                        </NavLink>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardsList)","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import axios from 'axios'\r\n\r\nimport SocketService from './SocketService';\r\n\r\nexport default { getRandomId, \r\n                 createUserIcon, \r\n                 getRandomColor, \r\n                 uploadImg, \r\n                 getImagesFromUnsplash,\r\n                 emitNotification }\r\n\r\nfunction getRandomId() {\r\n  let letters = '1234567890poiiytreqwasdfghjklmnbvcxxssersgyushquiz';\r\n  let id = '';\r\n  for (let i = 0; i < 10; i++) {\r\n    let ind = Math.floor(Math.random() * letters.length)\r\n    id += letters[ind];\r\n  }\r\n  return id;\r\n}\r\n\r\nfunction createUserIcon(firstName, lastName) {\r\n  let newIcon = firstName.charAt(0) + lastName.charAt(0)\r\n  return (newIcon)\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction uploadImg(file) {\r\n  const CLOUD_NAME = 'dujlxvxxv'\r\n  const PRESET_NAME = 'xi62wuas'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return axios.post(UPLOAD_URL, formData)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.url\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction getImagesFromUnsplash(filterName) {\r\n  const client_id = '9a992bf0a58ef7c4735758c98ec044dcdb524c2178db25d55cd773d7436f15d1'\r\n  const URL = `https://api.unsplash.com/search/photos?query=${filterName}&client_id=${client_id}`\r\n  return axios.get(URL)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.results\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction emitNotification(msg, type) {\r\n  const notification = {\r\n    message: msg,\r\n    type: type,\r\n    insert: \"top\",\r\n    container: \"bottom-right\",\r\n    animationIn: [\"animated\", \"zoomIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n    }\r\n  };\r\n  SocketService.emit('sendNotification', notification);\r\n}","import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","import HttpService from './HttpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedInUser,\r\n    getUsers\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/login', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in login', err);\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/signup', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in signup', err);\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        await HttpService.post('auth/logout');\r\n    } catch (err) {\r\n        console.log('UserService: err in logout', err);\r\n    }\r\n}\r\n\r\nasync function getLoggedInUser() {\r\n    try {\r\n        const user = await HttpService.get('auth/user');\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting loggedInUser', err);\r\n    }\r\n}\r\n\r\nasync function getUsers() {\r\n    try {\r\n        const users = await HttpService.get('user');\r\n        return users;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting users', err);\r\n    }\r\n}\r\n","import UserService from '../services/UserService';\r\n// import { loading, doneLoading } from './SystemActions';\r\n// import history from './../history';\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.login(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.signup(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await UserService.logout();\r\n      dispatch(_setUser(null));\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getLoggedInUser() {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.getLoggedInUser();\r\n      // localStorage.setItem('user', JSON.stringify(user));\r\n      dispatch(_setUser(user));\r\n    }  catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setUser(user) {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  };\r\n}\r\n\r\nexport function getUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await UserService.getUsers();\r\n      dispatch(_setUsers(users));\r\n    } catch (err) {\r\n      console.log('UserActions: err in getUsers', err);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _setUsers(users) {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport utils from '../services/utils'\r\n\r\nimport {\r\n  // loadUsers,\r\n  getLoggedInUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../actions/UserActions';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    signupCred: {\r\n      firstName: '',\r\n      lastName: '',\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n      color: utils.getRandomColor()\r\n    },\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getLoggedInUser();\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault();\r\n    const { email, password } = this.state.loginCred;\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' });\r\n    }\r\n    const userCreds = { email, password };\r\n    this.props.login(userCreds);\r\n    this.setState({ loginCred: { email: '', password: '' } });\r\n    // this.props.toggleLogin();\r\n  };\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault();\r\n    const { firstName, lastName, username, email, password, color } = this.state.signupCred;\r\n    if (!firstName || !lastName || !email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' });\r\n    }\r\n    const signupCreds = { firstName, lastName, username, email, password, color };\r\n    this.props.signup(signupCreds);\r\n    this.setState({ signupCred: { firstName: '', lastName: '', username: '', email: '', password: '' } });\r\n    this.props.toggleLogin();\r\n  };\r\n\r\n  doLogout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  doStopPropagation = (ev) => {\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"login-container-signup text-center\" onSubmit={this.doSignup}>\r\n        <p>Not a member yet? Sign up!</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={this.state.signupCred.firstName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"First Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={this.state.signupCred.lastName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-signup-btn\">Signup</button>\r\n      </form>\r\n    );\r\n    let loginSection = (\r\n      <form className=\"login-container-login text-center\" onSubmit={this.doLogin}>\r\n        <p> Login: </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-login-btn\">Login</button>\r\n      </form>\r\n    );\r\n\r\n    const { loggedInUser } = this.props;\r\n\r\n    return (\r\n\r\n      // <div className=\"screen\" onClick={() => this.props.toggleLogin()} >\r\n\r\n      <div className={\"login-container flex column align-center\"\r\n        + (this.props.toggleState ? ' translateLeft' : '')}\r\n        style={this.props.style}\r\n        onClick={this.doStopPropagation}>\r\n\r\n\r\n        <div className=\"login-container-logo\">\r\n        </div>\r\n        <h2>{this.state.msg}</h2>\r\n        <div className={\"login-container-form-container\"}>\r\n          {loggedInUser && (\r\n            <div>\r\n              <h2 className=\"login-container-loggedin-username\"> <p>Welcome!</p> {loggedInUser.username} </h2>\r\n              <div className=\"fill-width flex\">\r\n                <button className=\"login-container-form-container-logout\" onClick={this.doLogout}>Logout</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!this.props.loggedInUser && loginSection}\r\n          <hr />\r\n          {!this.props.loggedInUser && signupSection}\r\n        </div>\r\n      </div>\r\n\r\n      // </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n    isLoading: state.system.isLoading\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getLoggedInUser\r\n  // loadUsers\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import HttpService from './HttpService';\r\n\r\nexport default {\r\n  add,\r\n  query,\r\n  get,\r\n  put,\r\n  remove\r\n};\r\n\r\nfunction query() {\r\n  return HttpService.get('board');\r\n}\r\n\r\nfunction get(boardId, filterBy, sortBy, sortOrder) {\r\n  return HttpService.get(`board/${boardId}?${_createQueryString(filterBy)}&sortby=${sortBy}&sortorder=${sortOrder}`);\r\n}\r\n\r\nfunction _createQueryString(filterBy) {\r\n  return Object.keys(filterBy).map(filter => filter + '=' + filterBy[filter]).join('&');\r\n}\r\n\r\nfunction put(board) {\r\n  return HttpService.put(`board/${board._id}`, board);\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return HttpService.delete(`board/${boardId}`);\r\n}\r\n\r\nfunction add(board) {\r\n  return HttpService.post('board', board);\r\n}","import BoardService from '../services/BoardService';\r\nimport SocketService from '../services/SocketService';\r\nimport utils from '../services/utils';\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await BoardService.query();\r\n      dispatch(_setBoards(boards));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setBoards(boards) {\r\n  return {\r\n    type: 'SET_BOARDS',\r\n    boards\r\n  };\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy, sortBy, sortOrder) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await BoardService.get(boardId, filterBy, sortBy, sortOrder);\r\n      dispatch(_setBoard(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setBoard(board) {\r\n  return {\r\n    type: 'SET_BOARD',\r\n    board\r\n  }\r\n}\r\n\r\nexport function updateBoard(board, msg, notificationType) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_boardUpdate(board));\r\n      await BoardService.put(board);\r\n      SocketService.emit('boardUpdate', board);\r\n      utils.emitNotification(msg, notificationType);\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _boardUpdate(board) {\r\n  return {\r\n    type: 'UPDATE_BOARD',\r\n    board\r\n  }\r\n}\r\n\r\nexport function updateBoardOffline(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_boardUpdate(board));\r\n      sessionStorage.setItem('board', JSON.stringify(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function createBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedBoard = await BoardService.add(board);\r\n      dispatch(_addBoard(addedBoard));\r\n      return addedBoard;\r\n    } catch (err) {\r\n      console.log('BoardActions: err in createBoard', err);\r\n    }\r\n  }\r\n\r\n  function _addBoard(addedBoard) {\r\n    return {\r\n      type: 'ADD_BOARD',\r\n      addedBoard\r\n    };\r\n  }\r\n}\r\n\r\nexport function setBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_setBoard(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in setBoard', err);\r\n    }\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nimport BoardsList from '../cmps/BoardsList';\r\nimport Login from '../cmps/Login';\r\n\r\nimport utils from '../services/utils';\r\n\r\nimport { loadBoards, loadBoard, createBoard } from '../actions/BoardActions'\r\nimport { logout } from '../actions/UserActions'\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    toggleLogin: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadBoards();\r\n    const blankDefaultBoardId = '5e2581b51c9d44000081af2a';\r\n    const filterBy = { title: '' };\r\n    this.props.loadBoard(blankDefaultBoardId, filterBy);\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    if (ev) ev.stopPropagation();\r\n    this.setState((prevState) => ({ toggleLogin: !prevState.toggleLogin }))\r\n  }\r\n\r\n  closeLogin = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState({ toggleLogin: false })\r\n  }\r\n\r\n  createBoard = async () => {\r\n    let board = this.props.board;\r\n    const username = (this.props.loggedInUser) ? this.props.loggedInUser.username : 'Guest';\r\n    let msg = `The Board was created by ${username}`;\r\n    delete board._id;\r\n    board.createdBy = this.props.loggedInUser;\r\n    board.history = [{ id: utils.getRandomId(), msg: msg, time: Date.now() }];\r\n    const newBoard = await this.props.createBoard(board);\r\n    this.props.history.push(`/board/${newBoard._id}`);\r\n  }\r\n\r\n  render() {\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <Button className=\"home-page-login-btn\">\r\n        <div onClick={this.props.logout}>logout</div>\r\n      </Button>\r\n    } else {\r\n      button = <Button className=\"home-page-login-btn\">\r\n        <div onClick={this.toggleLogin}>login</div>\r\n      </Button>\r\n    }\r\n\r\n    return (\r\n      <div className=\"home-page\" onClick={this.closeLogin}>\r\n        <section className=\"home-page-header\">\r\n          <div className=\"home-page-login flex justify-end align-center\">\r\n            {(this.props.loggedInUser) &&\r\n              <p className=\"flex column\">\r\n                <small>welcome!</small>\r\n                {this.props.loggedInUser.username}\r\n              </p>\r\n            }\r\n            {button}\r\n          </div>\r\n\r\n          <Login\r\n            className=\"home-page-login\"\r\n            toggleLogin={this.toggleLogin}\r\n            toggleState={this.state.toggleLogin} />\r\n\r\n          <div className=\"home-page-header-container flex\">\r\n\r\n            {/* <div className=\"header-image-wrapper\"> */}\r\n            <div className=\"header-image flex align-center justify-center fill-width fill-height\">\r\n\r\n              <div className=\"login-get-started-container flex align-center justify-center align-center\">\r\n                <div className=\"home-page-logo-get-started flex column align-center\">\r\n                  <div className=\"home-page-header-container-logo-img fill-width fill-height\"></div>\r\n                  {/* <h2 className=\"text-center\"> EASY ORGANIZE TOOL</h2> */}\r\n                  <div className=\"text-center\">\r\n                    <h2>Manage your tasks in a fun and easy way</h2>\r\n                  </div>\r\n                  <div className=\"get-started-btn\">\r\n\r\n                    <Fab variant=\"extended\">\r\n                      <p className=\"uppercase\" onClick={this.createBoard}>\r\n                        get started\r\n                    </p>\r\n                    </Fab>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* </div> */}\r\n            </div>\r\n\r\n\r\n\r\n          </div>\r\n        </section>\r\n\r\n\r\n        {/* <div className=\"next-section flex align-center justify-center\"> */}\r\n        {/* <h1 className=\"text-center\"> MANAGE YOUR TEAM </h1> */}\r\n        {/* </div> */}\r\n\r\n\r\n\r\n        <section className=\"home-page-boards-list flex colum\">\r\n          <div className=\"home-page-boards-list-img-wrapper\">\r\n            <div className=\"home-page-boards-list-img\"></div>\r\n          </div>\r\n          <div className=\"home-page-boards-list-start-new-board flex column align-center\">\r\n            <p className=\"home-page-boards-list-start-new-board-right-text\">\r\n              We, in Trebello, believe that simplicity and style must go together,\r\n            that's why we made our brand simple and easy to use for everyone.<br /> <br />\r\n              Organize your team and take them one step ahead.</p>\r\n\r\n            {/* <div className=\"home-page-boards-list-start-new-board-card flex align-center justify-center\"\r\n              onClick={this.createBoard}>\r\n              <div className=\"flex column justify-center align-center\">\r\n                <h2>+ ADD NEW LIST</h2>\r\n                <small> please sign up first</small>\r\n              </div>\r\n            </div> */}\r\n\r\n          </div>\r\n\r\n\r\n\r\n\r\n        </section>\r\n\r\n\r\n\r\n        <BoardsList boards={this.props.boards} />\r\n\r\n        <section className=\"home-page-footer flex column align-center justify-center\">\r\n          <h2> OUR TEAM </h2>\r\n          <div className=\"home-pagge-footer-team-members-cards-container flex justify-center\">\r\n\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img vlad\"></div>\r\n              <p>Vlad Batalin</p>\r\n              <small>Design and overall technical support</small>\r\n              <div className=\"flex\">\r\n                <LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon>\r\n                <FacebookIcon className=\"faceBookIcon\"></FacebookIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img margad\"></div>\r\n              <p>Margad Taikhir</p>\r\n              <small>High functionality backend support</small>\r\n              <div className=\"flex\">\r\n                <LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon>\r\n                <FacebookIcon className=\"faceBookIcon\"></FacebookIcon>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n              <div className=\"home-page-footer-team-member-card-member-img paolo\"></div>\r\n              <p>Paolo Groppi</p>\r\n              <small>High functionality and backend</small>\r\n              <div className=\"flex\">\r\n                <a href=\"https://www.linkedin.com/in/paolo-groppi-6ba84117b\" target=\"blank\"><LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon></a>\r\n                <a href=\"https://www.facebook.com/karma.tova\" target=\"blank\"><FacebookIcon className=\"faceBookIcon\"></FacebookIcon></a>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n        </section>\r\n\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boards.boards,\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  loadBoard,\r\n  createBoard,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\r\n","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class TopMenuOptions extends Component {\r\n\r\n    onDuplicateColumn = () => {\r\n\r\n        let column = this.props.column;\r\n        let board = this.props.board;\r\n        let newColumn = { ...this.props.column }\r\n        const newId = utils.getRandomId();\r\n        const idx = board.columnOrder.findIndex(columnId => columnId === column.id);\r\n\r\n        newColumn.id = newId;\r\n        board.columnOrder.splice(idx + 1, 0, newColumn.id);\r\n\r\n        newColumn.taskIds.forEach(taskId => {\r\n\r\n            const clonedTaskId = utils.getRandomId();\r\n            const taskIdIdx = column.taskIds.findIndex(taskIdx => taskIdx === taskId);\r\n\r\n            board.tasks[clonedTaskId] = { ...board.tasks[taskId], id: clonedTaskId }\r\n            newColumn.taskIds = [...newColumn.taskIds];\r\n            newColumn.taskIds.splice(taskIdIdx, 1, clonedTaskId);\r\n        });\r\n\r\n        board.columns[newId] = newColumn;\r\n        this.props.toggleTopMenuOptions(column.id);\r\n        const msg = `'${column.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"top-menu-options\">\r\n            <h2 className=\"text-center capitalize\">options menu</h2>\r\n            <div className=\"options-container flex column\">\r\n                <p className=\"capitalize\">rename list</p>\r\n                <p className=\"capitalize\" onClick={this.onDuplicateColumn}>duplicate list</p>\r\n                <p className=\"capitalize\" onClick={() => this.props.onDelete(this.props.column.id)}>delete list</p>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}","import TaskPreview from './TaskPreview';\r\nimport VideoPreview from './VideoPreview';\r\nimport ImagePreview from './ImagePreview';\r\n\r\nexport default {\r\n    text: TaskPreview,\r\n    video: VideoPreview,\r\n    image: ImagePreview\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport utils from '../../services/utils'\r\n\r\nexport default class TaskPreview extends Component {\r\n\r\n    state = {\r\n        elTop: 0,\r\n        elLeft: 0,\r\n        elHeight: 0,\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            left: this.refs.ref.getBoundingClientRect().left,\r\n            top: this.refs.ref.getBoundingClientRect().top,\r\n            height: this.refs.ref.getBoundingClientRect().height,\r\n            previewType: 'text',\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref=\"ref\">\r\n                <div\r\n                    className={\"task-container\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    <div className=\"task-container-labels flex\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    <div className={\"flex align-center space-between\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(showEditBtn && (onTaskId === task.id)) ?\r\n                            <CreateIcon className=\"task-container-open-menu\"\r\n                                onClick={e => this.toggleMiniDetails(e)} />\r\n                            : ''}\r\n                        {(task.description !== '') ?\r\n                            <ListAltIcon /> : ''\r\n                        }\r\n\r\n                        <div className=\"flex\">\r\n                            {(task.taskTeamMembers.map(member => {\r\n                                return <div key={member._id} className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${member.color}` }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"flex align-center\">\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            }))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class VideoPreview extends Component {\r\n    state = {\r\n        elTop: 0,\r\n        elLeft: 0,\r\n        elHeight: 0,\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            left: this.refs.ref.getBoundingClientRect().left,\r\n            top: this.refs.ref.getBoundingClientRect().top,\r\n            height: this.refs.ref.getBoundingClientRect().height,\r\n            previewType: 'video',\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref=\"ref\">\r\n                <div\r\n                    className={\"task-container flex column\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    <iframe title={task.id} type='text/html' width=\"248\" height=\"140\" allowFullScreen=\"allowfullscreen\" src={task.url} security=\"restricted\"></iframe>\r\n                    <div className=\"task-container-labels flex\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    <div className={\"flex align-center space-between\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(showEditBtn && (onTaskId === task.id)) ?\r\n                            <CreateIcon className=\"task-container-open-menu\"\r\n                                onClick={e => this.toggleMiniDetails(e)} />\r\n                            : ''}\r\n                        {(task.description !== '') ?\r\n                            <ListAltIcon /> : ''\r\n                        }\r\n\r\n                        <div className=\"flex\">\r\n                            {(task.taskTeamMembers.map(member => {\r\n                                return <div key={member._id} className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${member.color}` }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"flex align-center\">\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            }))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class ImagePreview extends Component {\r\n    state = {\r\n        imgWidth: 220,\r\n        imgHeight: 220,\r\n        isMiniDetailsOn: false,\r\n        elTop: 0,\r\n        elLeft: 0,\r\n        elHeight: 0,\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = _ => {\r\n        const maxWidth = 220;\r\n        const maxHeight = 220; \r\n\r\n        const img = new Image();\r\n        img.onload = _ => {\r\n\r\n            if (img.width > img.height) {\r\n                const heightRatio = maxHeight / img.height;\r\n                const newWidth = img.width > maxWidth ? maxWidth : img.width;\r\n                this.setState({\r\n                    imgWidth: newWidth,\r\n                    imgHeight: img.height * heightRatio,\r\n                });\r\n            } else {  \r\n                const widthRatio = maxWidth / img.width;\r\n                const newHeight = img.height > maxHeight ? maxHeight : img.height;\r\n                this.setState({\r\n                    imgWidth: img.width * widthRatio,\r\n                    imgHeight: newHeight,\r\n                });\r\n            }\r\n        }\r\n        img.src = this.props.task.url;\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            left: this.refs.ref.getBoundingClientRect().left,\r\n            top: this.refs.ref.getBoundingClientRect().top,\r\n            height: this.refs.ref.getBoundingClientRect().height,\r\n            imgHeight: this.state.imgHeight,\r\n            imgWidth: this.state.imgWidth,\r\n            previewType: 'image',\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref=\"ref\">\r\n                <div\r\n                    className={\"task-container flex column align center\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    <img title={task.id} alt=\"task\" width={this.state.imgWidth} height={this.state.imgHeight} src={task.url} />\r\n                    <div className=\"task-container-labels flex\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    <div className={\"flex align-center space-between\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(showEditBtn && (onTaskId === task.id)) ?\r\n                            <CreateIcon className=\"task-container-open-menu\"\r\n                                onClick={e => this.toggleMiniDetails(e)} />\r\n                            : ''}\r\n                        {(task.description !== '') ?\r\n                            <ListAltIcon /> : ''\r\n                        }\r\n\r\n                        <div className=\"flex\">\r\n                            {(task.taskTeamMembers.map(member => {\r\n                                return <div key={member._id} className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${member.color}` }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"flex align-center\">\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            }))\r\n                            }\r\n                        </div>\r\n                    </div>  \r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicComponents from \"./mapDynamicComponents\"\r\n\r\nexport default class DynamicComponent extends Component {\r\n    state = {\r\n        componentType: 'text',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ componentType: this.props.task.type });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicComponents[this.state.componentType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                column={this.props.column}\r\n                provided={this.props.provided}\r\n                innerRef={this.props.innerRef}\r\n                task={this.props.task}\r\n                isDragging={this.props.isDragging}\r\n                style={this.props.style}\r\n                onTaskId={this.props.onTaskId}\r\n                showEditBtn={this.props.showEditBtn}\r\n                toggleMiniDetails = {this.props.toggleMiniDetails}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\nimport DynamicComponent from './dynamics/DynamicComponent';\r\n\r\nexport default class TasksList extends Component {\r\n\r\n    state = {\r\n        showAddForm: false,\r\n        currTaskId: '',\r\n        onTaskId: '',\r\n        showTaskDetails: false\r\n    }\r\n\r\n    toggleTaskDetails = id => {\r\n        if (id) {\r\n            this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTaskId: id }));\r\n        } else {\r\n            this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails }));\r\n        }\r\n\r\n    }\r\n\r\n    canOpenTaskDetails = taskId => {\r\n        return (this.state.showTaskDetails && this.state.currTaskId === taskId)\r\n    }\r\n\r\n    showEditBtn = (id) => {\r\n        this.setState({ showEditBtn: true, onTaskId: id })\r\n    }\r\n\r\n    hideEditBtn = () => {\r\n        this.setState({ showEditBtn: false })\r\n    }\r\n\r\n    render() {\r\n        const { tasks, provided, innerRef, isDraggingOver } = this.props;\r\n        return (\r\n            <section\r\n                className={\"task-list\" + (isDraggingOver ? \" isDraggingOver\" : \"\")}\r\n                {...provided.droppableProps}\r\n                ref={innerRef}\r\n            >\r\n                        {tasks.map((task, idx) => (\r\n                            <div key={task.id}>\r\n                                <Draggable draggableId={task.id} index={idx}>\r\n                                    {(provided, snapshot) => (\r\n                                        <NaturalDragAnimation\r\n                                            style={provided.draggableProps.style}\r\n                                            snapshot={snapshot}\r\n                                            rotationMultiplier={1.3}\r\n                                        >\r\n                                            {style => (\r\n                                                <div onClick={_ => this.props.toggleTaskDetails({ id: task.id, column: this.props.column })}\r\n                                                    onMouseEnter={() => this.showEditBtn(task.id)}\r\n                                                    onMouseLeave={() => this.hideEditBtn()}\r\n                                                >\r\n                                                    <DynamicComponent\r\n                                                        provided={provided}\r\n                                                        innerRef={provided.innerRef}\r\n                                                        task={task}\r\n                                                        column={this.props.column}\r\n                                                        isDragging={snapshot.isDragging}\r\n                                                        style={style}\r\n                                                        onTaskId={this.state.onTaskId}\r\n                                                        showEditBtn={this.state.showEditBtn}\r\n                                                        toggleMiniDetails = {this.props.toggleMiniDetails}\r\n                                                        user={this.props.user}\r\n                                                    >\r\n                                                    </DynamicComponent>\r\n                                                </div>\r\n                                            )}\r\n                                        </NaturalDragAnimation>\r\n                                    )}\r\n                                </Draggable>\r\n                            </div>\r\n                        ))}\r\n                        {provided.placeholder}\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskForm extends Component {\r\n\r\n    state = {\r\n        task: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            importance: '',\r\n            description: '',\r\n            type: 'text',\r\n            labels: [],\r\n            creator: {},\r\n            taskTeamMembers: []\r\n        },\r\n        edit: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.task !== this.props.task) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.saveTask();\r\n    // }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.task) {\r\n            const task = this.props.task;\r\n            this.setState({\r\n                task: {\r\n                    id: task.id,\r\n                    title: task.title,\r\n                    createdAt: task.createdAt,\r\n                    dueDate: task.dueDate,\r\n                    importance: task.importance,\r\n                    description: this.props.description,\r\n                    type: task.type,\r\n                    labels: task.labels,\r\n                    creator: task.creator,\r\n                    taskTeamMembers: task.taskTeamMembers\r\n                },\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        const fieldName = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ task: { ...this.state.task, [fieldName]: value } })\r\n    }\r\n\r\n    save = (ev) => {\r\n        ev.preventDefault();\r\n        this.checkIfUrlAndSave(this.state.task.title);\r\n    }\r\n\r\n    checkIfUrlAndSave = (url) => {\r\n        const youtubeREGEX = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        const imgREGEX = /.(jpg|jpeg|png|gif)\\/?$/;\r\n        if (url.match(youtubeREGEX)) {\r\n            const newUrl = url.replace('watch?v=', 'embed/');\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'video', url: newUrl } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        } else if (url.match(imgREGEX)) {\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'image', url } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        }\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [this.state.task.id]: this.state.task\r\n            }\r\n        };\r\n        const column = this.props.column;\r\n        const id = this.state.task.id;\r\n        if (!column.taskIds.includes(id)) column.taskIds.push(id);\r\n        const msg = (!this.state.edit) ?\r\n            `The task '${this.state.task.title}' was added by ${this.props.user}` :\r\n            `${this.props.user} edited the task '${this.state.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.closeUpdateForm();\r\n        if (this.props.toggleUpdateForm) this.props.toggleUpdateForm();\r\n        if (this.props.toggleTaskDetails) this.props.toggleTaskDetails();\r\n    }\r\n\r\n    textAreaAdjust = ev => {\r\n        ev.target.style.height = \"1px\"\r\n        ev.target.style.height = (25 + ev.target.scrollHeight) + \"px\";\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"task-form\" >\r\n            <form onSubmit={this.save} onClick={ev => ev.stopPropagation()}>\r\n                <div className=\"flex column\" >\r\n\r\n                    <textarea type=\"text\"\r\n                        onKeyUp={this.textAreaAdjust}\r\n                        placeholder=\"Add a task title...\"\r\n                        name=\"title\"\r\n                        ref={(input) => { this.nameInput = input; }}\r\n                        onChange={this.inputChange} value={this.state.task.title} />\r\n                    <div className=\"flex align-center\">\r\n                        <button className=\"task-form-save-btn\">SAVE</button>\r\n                        <CloseIcon className=\"task-form-back-btn\" onClick={(ev) => { ev.stopPropagation(); this.props.closeUpdateForm() }} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\nimport TopMenuOptions from './TopMenuOptions'\r\nimport TasksList from './TasksList';\r\nimport TaskForm from '../cmps/TaskForm'\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class BoardColumns extends Component {\r\n\r\n    state = {\r\n        timer: null,\r\n        title: ''\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        const board = { ...this.props.board };\r\n        const columnOrder = board.columnOrder;\r\n        const column = board.columns[id];\r\n        for (const taskId of column.taskIds) {\r\n            for (const taskKey in board.tasks) {\r\n                if (taskId === taskKey) {\r\n                    delete board.tasks[taskKey];\r\n                }\r\n            }\r\n        }\r\n        delete board.columns[id];\r\n        const idx = columnOrder.findIndex(column => column === id);\r\n        columnOrder.splice(idx, 1);\r\n        const msg = `'${column.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        \r\n    }\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        };\r\n\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return;\r\n        };\r\n\r\n        if (type === 'column') {\r\n            const newColumnOrder = this.props.board.columnOrder.slice();\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0, draggableId);\r\n            const columnTitle = this.props.board.columns[draggableId].title;\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columnOrder: newColumnOrder\r\n            }\r\n            const msg = `'${columnTitle}' was moved by ${this.props.user}`;\r\n            const notificationType = 'success';\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const start = this.props.board.columns[source.droppableId];\r\n        const finish = this.props.board.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = start.taskIds.slice();\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            };\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columns: {\r\n                    ...this.props.board.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            };\r\n            const taskTitle = this.props.board.tasks[draggableId].title;\r\n            const msg = `${this.props.user} changed the position of the task '${taskTitle}'`;\r\n            const notificationType = 'success';\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const startTaskIds = start.taskIds.slice();\r\n        startTaskIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        };\r\n\r\n        const finishTaskIds = finish.taskIds.slice();\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        };\r\n\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish\r\n            }\r\n        };\r\n        const taskTitle = this.props.board.tasks[draggableId].title;\r\n        const msg = `${this.props.user} moved the task '${taskTitle}' from '${newStart.title}' to '${newFinish.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    handleCheck = (colId, title) => {\r\n        clearTimeout(this.state.timer);\r\n        this.setState({\r\n            timer: setTimeout(() => {\r\n                const updatedBoard = { ...this.props.board };\r\n                updatedBoard.columns[colId].title = title;\r\n                this.props.updateBoard(updatedBoard);\r\n            }, 1000)\r\n        });\r\n    }\r\n\r\n    emitChange = (ev, colId) => {\r\n        this.setState({ title: ev.target.innerText }, _ => {\r\n            this.handleCheck(colId, this.state.title);\r\n        });\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { currColumnId, showTopMenuOptions, showAddForm } = this.props;\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                    {provided => (\r\n                        <div\r\n                            className=\"board-columns flex\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}\r\n                        >\r\n                            {this.props.board.columnOrder.map((columnKey, idx) => {\r\n\r\n                                const column = this.props.board.columns[columnKey];\r\n                                const tasks = column.taskIds.map(currId => this.props.board.tasks[currId]);\r\n\r\n                                return <Draggable draggableId={columnKey} key={column.id} index={idx}>\r\n\r\n                                    {(provided, snapshot) => (\r\n                                        <NaturalDragAnimation\r\n                                            style={provided.draggableProps.style}\r\n                                            snapshot={snapshot}\r\n                                            rotationMultiplier={1.3}\r\n                                        >\r\n                                            {style => (\r\n\r\n                                                <div\r\n                                                    className=\"board-columns-item\"\r\n                                                    {...provided.draggableProps}\r\n                                                    ref={provided.innerRef}\r\n                                                    style={style}\r\n                                                >\r\n                                                    <div\r\n                                                        className=\"board-columns-item-header flex align-center space-between\"\r\n                                                        {...provided.dragHandleProps}\r\n                                                    >\r\n                                                        <div className=\"board-columns-item-header-h2-wrapper\">\r\n                                                            <h2\r\n                                                                contentEditable='true'\r\n                                                                spellCheck=\"false\"\r\n                                                                onInput={(ev) => this.emitChange(ev, column.id)}\r\n                                                                suppressContentEditableWarning={true}\r\n                                                            >\r\n                                                                {column.title}\r\n                                                            </h2>\r\n                                                        </div>\r\n\r\n                                                        <div className=\"board-columns-item-header-menu-btn\"\r\n                                                            onClick={(ev) => { ev.stopPropagation(); this.props.openEditColumn(column.id) }}\r\n                                                        >\r\n                                                            <h2 className=\"board-columns-item-header-menu-btn-icon\"> ... </h2>\r\n                                                        </div>\r\n\r\n                                                    </div>\r\n\r\n                                                    {showTopMenuOptions && (currColumnId === column.id) ?\r\n                                                        <TopMenuOptions\r\n                                                            onDelete={this.onDelete}\r\n                                                            column={column}\r\n                                                            board={this.props.board}\r\n                                                            updateBoard={this.props.updateBoard}\r\n                                                            toggleTopMenuOptions={this.props.closeEditColumn}\r\n                                                            user={this.props.user}\r\n                                                        />\r\n                                                        : ''}\r\n                                                    <Droppable droppableId={column.id} type=\"task\">\r\n                                                        {(provided, snapshot) => {\r\n                                                            return <TasksList\r\n                                                                board={this.props.board}\r\n                                                                innerRef={provided.innerRef}\r\n                                                                provided={provided}\r\n                                                                tasks={tasks}\r\n                                                                isDraggingOver={snapshot.isDraggingOver}\r\n                                                                column={column}\r\n                                                                toggleTaskDetails={this.props.toggleTaskDetails}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                                toggleMiniDetails={this.props.toggleMiniDetails}\r\n                                                                user={this.props.user}\r\n                                                            >\r\n                                                            </TasksList>\r\n                                                        }}\r\n                                                    </Droppable>\r\n\r\n                                                    <div className=\"task-list-footer\">\r\n                                                        {(!showAddForm || currColumnId !== column.id) &&\r\n                                                            <p className=\"task-list-footer-add-task\"\r\n                                                                onClick={(ev) => { ev.stopPropagation(); this.props.openAddForm(column.id) }}>\r\n                                                                + Add a task</p>\r\n                                                        }\r\n                                                        {showAddForm && (currColumnId === column.id) ?\r\n                                                            <TaskForm\r\n                                                                user={this.props.user}\r\n                                                                board={this.props.board}\r\n                                                                column={column}\r\n                                                                closeUpdateForm={this.props.closeAddForm}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                            />\r\n                                                            : ''\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            )}\r\n                                        </NaturalDragAnimation>\r\n                                    )}\r\n                                </Draggable>\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div >)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class BoardHistory extends Component {\r\n    render() {\r\n        return (\r\n            <div className={\"boardhistory-container column\"\r\n                + (this.props.showHistory ? ' translateLeft' : '')}>\r\n                <div className=\"members-container-colors-container flex column\">\r\n                    <div className=\"uppercase text-center\">\r\n                        <h2>board history :</h2>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <ul className=\"clean-list\">\r\n                    {this.props.history.map(item => (\r\n                        <li key={item.id}><div className=\"msg\">{item.msg}<br />{moment(item.time).calendar()}</div><hr /></li>\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class BoardTeamMembers extends Component {\r\n    state = {\r\n        currentBoardMembers: [],\r\n        toggleUsersList: false\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ currentBoardMembers: this.props.board.teamMembers });\r\n    }\r\n\r\n    updateTeamMembers = (user) => {\r\n        const board = this.props.board;\r\n        const teamMembers = board.teamMembers;\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (teamMembers.length === 0) {\r\n            teamMembers.push(user);\r\n            msg = `${user.username} was added to this board`;\r\n            notificationType = 'success';\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        } else if (teamMembers.find(teamMember => teamMember._id === user._id)) {\r\n            const idx = teamMembers.findIndex(teamMember => teamMember._id === user._id);\r\n            teamMembers.splice(idx, 1);\r\n            msg = `${user.username} was removed from this board`;\r\n            notificationType = 'danger';\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        } else {\r\n            teamMembers.push(user);\r\n            msg = `${user.username} was added to this board`;\r\n            notificationType = 'success';\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        }\r\n        this.setState({ currentBoardMembers: teamMembers });\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    toggleUsersList = () => {\r\n        this.setState(prevState => ({ toggleUsersList: !prevState.toggleUsersList }));\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"board-team-members-container text-center column\"\r\n                + (this.props.toggleBoardTeamMembers ? ' translateLeft' : '')} onClick={(ev) => this.onStopPropagation(ev)}>\r\n\r\n                <div className=\"members-container-colors-container flex column\">\r\n                    <div className=\"pointer uppercase\"><h2>board members :</h2></div>\r\n                    <hr />\r\n                    {this.state.currentBoardMembers.map(teamMember => {\r\n                        return (\r\n                            <div key={teamMember._id} className=\"team-member flex align-center\">\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${teamMember.color}` }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\">\r\n                                            {utils.createUserIcon(teamMember.firstName, teamMember.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{teamMember.firstName} {teamMember.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"add-team-members flex column\">\r\n                    <p className=\"pointer uppercase\" onClick={this.toggleUsersList}>add / remove users</p>\r\n                    {this.state.toggleUsersList && this.props.users.map(user => {\r\n                        return (\r\n                            <div key={user._id} className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateTeamMembers(user)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\"\r\n                                    style={{ backgroundColor: `${user.color}` }}>\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\">\r\n                                            {utils.createUserIcon(user.firstName, user.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{user.firstName} {user.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class ColumnAddForm extends Component {\r\n\r\n    state = {\r\n        column: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            taskIds: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.column !== this.props.column) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.column) {\r\n            const column = this.props.column;\r\n            this.setState({\r\n                column: {\r\n                    id: column.id,\r\n                    title: column.title,\r\n                    taskIds: column.taskIds\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState({ column: { ...this.state.column, [fieldName]: value } })\r\n    }\r\n\r\n    saveColumn = (ev) => {\r\n        ev.preventDefault();\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [this.state.column.id]: this.state.column\r\n            }\r\n        };\r\n        const id = this.state.column.id;\r\n        const columnOrder = newBoard.columnOrder;\r\n        if (!columnOrder.includes(id)) columnOrder.push(id);\r\n        const msg = `'${this.state.column.title}' was added by ` + this.props.user;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleAddForm();\r\n    }\r\n\r\n    render() {\r\n        return <form className=\"add-column-form-container flex column space-between\" onSubmit={this.saveColumn}>\r\n            <input\r\n                ref={(input) => { this.nameInput = input; }}\r\n                type='text'\r\n                placeholder='Column Name'\r\n                name='title'\r\n                onChange={this.inputChange}\r\n                value={this.state.column.title} />\r\n            <div className=\"add-column flex\">\r\n                <button className=\"add-column-save-btn\"\r\n                    variant=\"contained\">SAVE</button>\r\n\r\n                <CloseIcon className=\"add-column-back-to-board flex align-center\"\r\n                    onClick={this.props.toggleAddForm} />\r\n\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nexport default class Filter extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            title: '',\r\n            teamMembers: ''\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        console.log(fieldName, value);\r\n        this.setState(prevState => ({\r\n            filterBy: {\r\n                ...prevState.filterBy,\r\n                [fieldName]: value\r\n            }\r\n        }));\r\n    }\r\n\r\n    onFilterClick = () => {\r\n        this.props.onFilter(this.state.filterBy);\r\n    }\r\n\r\n    render() {\r\n\r\n        const teamMembers = this.props.teamMembers;\r\n\r\n        return <div className=\"board-page-nav-bar-filters-item flex\">\r\n            <input type=\"text\" placeholder=\"Search task by name\"\r\n                value={this.state.filterBy.title}\r\n                onChange={this.inputChange} name=\"title\">\r\n            </input>\r\n            <select name=\"teamMembers\" onChange={this.inputChange}>\r\n                <option value=''>All Team Members</option>\r\n                {teamMembers.map(teamMember => (\r\n                    <option key={teamMember._id} value={`${teamMember.username}`}>{teamMember.firstName} {teamMember.lastName}</option>\r\n                ))}\r\n            </select>\r\n            <button className=\"board-page-nav-bar-filters nav-btn\"\r\n                onClick={this.onFilterClick}>\r\n                <SearchIcon className=\"flex\" />\r\n            </button>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Sort extends Component {\r\n\r\n    state = {\r\n        sortBy: '',\r\n        sortOrder: 'asc'\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [fieldName]: value } }));\r\n    }\r\n\r\n    onSortBy = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let sortOrder = (this.state.sortOrder === 'asc') ? 'desc' : 'asc';\r\n        this.setState({ sortBy: fieldName, sortOrder: sortOrder }, () => this.props.onSort(this.state.sortBy, this.state.sortOrder));\r\n    }\r\n\r\n    toggleButtonName = () => {\r\n        return (this.state.sortOrder === 'asc') ? 'Newest Tasks' : 'Oldest Tasks';\r\n    }\r\n\r\n    render() {\r\n        return <div  className=\"board-page-nav-bar-filters-item fill-height\">\r\n            <button className=\"nav-btn fill-height\"\r\n                onClick={this.onSortBy}\r\n                name='createdAt'>{this.toggleButtonName()}</button>\r\n\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class Sort extends Component {\r\n\r\n    state = {\r\n        splashImagesUrls: [],\r\n        filterByName: ''\r\n    }\r\n\r\n    inputChange = ev => {\r\n        this.setState({ filterByName: ev.target.value });\r\n    }\r\n\r\n    onSave = async () => {\r\n        try {\r\n            const splashImages = await utils.getImagesFromUnsplash(this.state.filterByName)\r\n            let splashImagesUrls = []\r\n            splashImages.forEach(image => {\r\n                const UrlIndx = splashImagesUrls.findIndex(currUrl => currUrl === image.urls.full);\r\n                if (UrlIndx >= 0) {\r\n                    splashImagesUrls.splice(UrlIndx, 1)\r\n                } else {\r\n                    splashImagesUrls.push(image.urls.full);\r\n                }\r\n            })\r\n            this.setState({ splashImagesUrls })\r\n        } catch (err) {\r\n            // res.status(401).send({ error: err })\r\n        }\r\n    }\r\n\r\n    setBoardBackground = (ev) => {\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardBgImage = ev.target.src;\r\n        const msg = `${this.props.user} changed background image`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        return <div className={\"splash-menu flex column align-center\" + (this.props.toggleSplashMenu ? ' translateLeft' : '')} \r\n        onClick={(ev) => this.stopPropagation(ev)}>\r\n\r\n            <div className=\"flex column fill-width\">\r\n                <div className=\"splash-menu-search-bar fill-width flex justify-center\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search by name...'\r\n                        onChange={this.inputChange}\r\n                    />\r\n                    <button className=\"splash-menu-search-bar-save-btn\" onClick={this.onSave}>\r\n                        <SearchIcon />\r\n                    </button>\r\n                </div>\r\n                <button className=\"splash-menu-search-bar-save-btn upload-btn\">\r\n                    <input style={{ display: \"none\" }} type=\"file\" id=\"upload-img\" onChange={this.props.onAddImg}></input>\r\n                    <label htmlFor=\"upload-img\">upload image</label>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"splash-images-container-wrapper\">\r\n                <div className=\"splash-images-container flex wrap fill-width\" >\r\n                    {this.state.splashImagesUrls.map(imageUrl => {\r\n                        return <div key={imageUrl} className=\"splash-images-container-item flex wrap\">\r\n                            <img src={imageUrl} alt=\"oops.. didn't found it\" onClick={(ev) => this.setBoardBackground(ev)}></img>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class DueDate extends React.Component {\r\n    state = {\r\n        dueDate: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    setDate = _ => {\r\n        this.setState({ dueDate: this.props.task.dueDate ? new Date(this.props.task.dueDate) : new Date() })\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.saveTask();\r\n    // }\r\n\r\n    handleChange = date => {\r\n        this.setState({ dueDate: date });\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newTask = { ...this.props.task, dueDate: this.state.dueDate.getTime() };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the due date for task '${this.props.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        \r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"duedate-edit\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}>\r\n                <DatePicker\r\n                    selected={this.state.dueDate}\r\n                    onChange={this.handleChange}\r\n                    showTimeSelect\r\n                    timeFormat=\"HH:mm\"\r\n                    timeIntervals={15}\r\n                    timeCaption=\"Time\"\r\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                />\r\n                <button onClick={this.saveTask}>Set</button>\r\n                <CloseIcon className=\"duedate-edit-close-btn\" onClick={this.props.onToggle} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class Labels extends Component {\r\n    state = {\r\n        choosenLabels: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenLabels: this.props.task.labels })\r\n    }\r\n\r\n    updateChoosenLabels = (ev) => {\r\n        const label = ev.target.classList[0];\r\n        const choosenLabels = this.state.choosenLabels;\r\n        const labelIdx = choosenLabels.findIndex(currLabel => currLabel === label);\r\n        if (labelIdx >= 0) {\r\n            choosenLabels.splice(labelIdx, 1)\r\n        } else {\r\n            choosenLabels.push(label);\r\n        }\r\n        this.setState({ choosenLabels }, this.onSave);\r\n    }\r\n\r\n    onSave = () => {\r\n        const newTask = { ...this.props.task, labels: this.state.choosenLabels };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.miniTask) {\r\n            updateStyle = {\r\n                left: 12 + 'px',\r\n                top: 36 + 'px',\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"labels-container text-center\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}\r\n            >\r\n                <CloseIcon className=\"labels-container-close-btn\" onClick={this.props.toggleChooseLabels} />\r\n                <p className=\"uppercase\">choose labels</p>\r\n                <hr />\r\n                <div className=\"labels-container-colors-container flex column align-center \">\r\n                    <div className=\"label-color-1 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-2 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-3 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-4 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-5 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-6 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class Members extends Component {\r\n    state = {\r\n        choosenMembers: [],\r\n        availableMembers: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenMembers: this.props.task.taskTeamMembers }, this.setAvailableMembers);\r\n    }\r\n\r\n    setAvailableMembers = _ => {\r\n        const availableMembers = this.props.board.teamMembers.filter(currMember => !this.state.choosenMembers.find(taskMember => taskMember._id === currMember._id));\r\n        this.setState({ availableMembers }, this.onSave);\r\n    }\r\n\r\n    updateChoosenMembers = (teamMember) => {\r\n        const choosenMembers = this.state.choosenMembers;\r\n        const memberIdx = choosenMembers.findIndex(currMember => currMember._id === teamMember._id);\r\n        if (memberIdx >= 0) {\r\n            choosenMembers.splice(memberIdx, 1);\r\n            const msg = `${teamMember.username} was released from the task '${this.props.task.title}'`;\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n            utils.emitNotification(msg, 'danger');\r\n        } else {\r\n            choosenMembers.push(teamMember);\r\n            const msg = `${teamMember.username} was asigned to the task '${this.props.task.title}'`;\r\n            this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n            utils.emitNotification(msg, 'success');\r\n        }\r\n        this.setState({ choosenMembers }, this.setAvailableMembers);\r\n    }\r\n\r\n    onSave = () => {\r\n        const newTask = { ...this.props.task, taskTeamMembers: this.state.choosenMembers };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.pos) {\r\n            updateStyle = {\r\n                left: 10 + 'px',\r\n                top: 72 + 'px',\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"members-container text-center column\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}>\r\n                <CloseIcon className=\"members-container-close-btn\" onClick={this.props.toggleChooseMembers} />\r\n                <p>ASSIGNED MEMBERS</p>\r\n                <hr />\r\n                <div className=\"members-container-colors-container flex column\">\r\n                    {this.props.task.taskTeamMembers.map(member => {\r\n                        return <div key={member._id} className=\"team-member flex\"\r\n                            onClick={() => this.updateChoosenMembers(member)}>\r\n                            <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${member.color}` }} >\r\n                                <div className=\"team-member-icon\">\r\n                                    <p>\r\n                                        {utils.createUserIcon(member.firstName,\r\n                                            member.lastName)}\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                            <p>{member.firstName}</p>\r\n                            <p>{member.lastName}</p>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <div className=\"add-team-members flex column\">\r\n                    <p className=\"uppercase\"> add a team member </p>\r\n                    {this.state.availableMembers.map(teamMember => {\r\n                        return (\r\n                            <div key={teamMember._id}\r\n                                className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateChoosenMembers(teamMember)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${teamMember.color}` }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p>\r\n                                            {utils.createUserIcon(teamMember.firstName,\r\n                                                teamMember.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <p>{teamMember.firstName}</p>\r\n                                <p>{teamMember.lastName}</p>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div >\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport TitleIcon from '@material-ui/icons/Title';\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\n// import ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport LabelIcon from '@material-ui/icons/Label';\r\nimport EmojiPeopleIcon from '@material-ui/icons/EmojiPeople';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nimport DueDate from './DueDate';\r\nimport Labels from './Labels';\r\nimport Members from './Members';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskDetails extends Component {\r\n    state = {\r\n        description: '',\r\n        showActivity: false,\r\n        showEditDescriptionForm: false,\r\n        teamMembers: [],\r\n        deuDate: null,\r\n        toggleChooseLabels: false,\r\n        choosenlabels: [],\r\n        onToggleDueDate: false,\r\n        toggleChooseMembers: false,\r\n        choosenMembers: []\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ description: this.props.board.tasks[this.props.taskId].description });\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ description: targetValue });\r\n    }\r\n\r\n    toggleUpdateDescriptionForm = () => {\r\n        this.setState(prevState => ({ showEditDescriptionForm: !prevState.showEditDescriptionForm }))\r\n    }\r\n\r\n    onToggleDueDate = ev => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n\r\n    closeUpdateDescriptionForm = () => {\r\n        this.setState({ toggleUpdateDescriptionForm: false })\r\n    }\r\n\r\n    onStopPropagationAndCloseOptions = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            toggleChooseLabels: false,\r\n            toggleChooseMembers: false\r\n        })\r\n    }\r\n\r\n    toggleChooseLabels = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseLabels: !prevState.toggleChooseLabels }))\r\n    }\r\n\r\n    onSaveDescription = (task) => {\r\n        const newTask = { ...task, description: this.state.description };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The description of '${task.title}' was changed by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    toggleChooseMembers = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseMembers: !prevState.toggleChooseMembers }))\r\n    }\r\n\r\n    onDuplicateTask = (column, task) => {\r\n        const newTask = { ...task, id: utils.getRandomId() };\r\n        column.taskIds.push(newTask.id);\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n\r\n    render() {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        const { column } = this.props;\r\n        return (\r\n            <div className=\"screen flex align-center justify-center\" onClick={() => this.props.toggleTaskDetails()}>\r\n\r\n                <div className=\"task-details-container flex\" onClick={(ev) => this.onStopPropagationAndCloseOptions(ev)}>\r\n                    <CloseIcon className=\"add-column-back-to-board   flex align-center\"\r\n                        onClick={() => this.props.toggleTaskDetails()} />\r\n                    <div className=\"task-details-container-main full\">\r\n                        <header className=\"task-details-container-header\">\r\n                            <div className=\"flex align-center\">\r\n                                <TitleIcon />\r\n                                <h2>{task.title}</h2>\r\n                            </div>\r\n                            <div className=\"task-details-container-in-list flex\">\r\n                                <p className=\"flex\">in list \"{column.title}\"</p>\r\n                            </div>\r\n                        </header>\r\n\r\n                        <div className=\"task-details-container-labels-container\">\r\n\r\n                            {this.state.toggleChooseLabels ?\r\n                                <Labels\r\n                                    toggleChooseLabels={this.toggleChooseLabels}\r\n                                    board={this.props.board}\r\n                                    task={task}\r\n                                    updateBoard={this.props.updateBoard}\r\n                                /> : ''\r\n                            }\r\n                            <div className=\"flex align-center\">\r\n                                <LabelIcon />\r\n                                <h2>Labels :</h2>\r\n                            </div>\r\n                            <div className=\"labels-choosen-container flex\">\r\n\r\n                                {\r\n                                    task.labels.map(label => {\r\n                                        return <div key={label} className={label + ' medium-label'}>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"task-details-container-members-container\">\r\n\r\n                            {this.state.toggleChooseMembers ?\r\n                                <Members\r\n                                    toggleChooseMembers={this.toggleChooseMembers}\r\n                                    board={this.props.board}\r\n                                    task={task}\r\n                                    updateBoard={this.props.updateBoard}\r\n                                    users={this.props.users}\r\n                                /> : ''\r\n                            }\r\n                            <div className=\"flex align-center\">\r\n                                <EmojiPeopleIcon />\r\n                                <h2>Team members :</h2>\r\n                            </div>\r\n\r\n                            <div className=\"members-choosen-container flex column\">\r\n                                {\r\n                                    task.taskTeamMembers.map(member => {\r\n                                        return <div key={member._id} className=\"flex\">\r\n                                            <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: `${member.color}` }} >\r\n                                                <div className=\"team-member-icon flex align-center\">\r\n                                                    <p>\r\n                                                        {utils.createUserIcon(member.firstName,\r\n                                                            member.lastName)}\r\n                                                    </p>\r\n                                                </div>\r\n                                            </div>\r\n                                            <p className=\" flex align-center\">{member.firstName}</p>\r\n                                            <p className=\" flex align-center\"> {member.lastName}</p>\r\n                                        </div>\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"task-details-container-duedate-container\">\r\n                            <div className=\"flex align-center\">\r\n                                <EventIcon />\r\n                                <h2>Due Date :</h2>\r\n                            </div>\r\n                            <div>\r\n                                {(task.dueDate) ?\r\n                                    <p>{moment(task.dueDate).calendar()}</p> :\r\n                                    <p>This task doesn't have a due date yet</p>\r\n                                }\r\n\r\n                            </div>\r\n\r\n                            {this.state.onToggleDueDate ? <DueDate\r\n                                task={task}\r\n                                onToggle={this.onToggleDueDate}\r\n                                board={this.props.board}\r\n                                updateBoard={this.props.updateBoard}\r\n                                user={this.props.user}\r\n                            /> : ''}\r\n\r\n                        </div>\r\n\r\n                        <div className=\"task-details-container-main-description\">\r\n                            <div className=\"flex align-center\">\r\n                                <NotesIcon />\r\n                                <h2>Description</h2>\r\n                            </div>\r\n                            <div className=\"flex column text-area-wrapper\" onClick={this.toggleUpdateDescriptionForm}>\r\n                                <form onSubmit={this.save}>\r\n                                    <textarea className=\"fill-width\"\r\n                                        name=\"description\"\r\n                                        rows=\"3\"\r\n                                        cols=\"40\"\r\n                                        onInput={this.emitChange}\r\n                                        defaultValue={task.description}\r\n                                        spellCheck=\"false\"\r\n                                        placeholder=\"Add a more detailed description...\">\r\n                                    </textarea>\r\n                                </form>\r\n                                {this.state.showEditDescriptionForm ?\r\n                                    <div className=\"flex align-center\">\r\n                                        <button className=\"task-form-save-btn uppercase\" onClick={() => this.onSaveDescription(task)}>save</button>\r\n                                        <CloseIcon className=\"task-form-back-btn\" onClick={this.closeUpdateDescriptionForm} />\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        {/* <div className=\"task-details-container-main-activity flex space-between\">\r\n                            <div className=\"flex align-center\">\r\n                                <ListAltIcon />\r\n                                <h2>Activity</h2>\r\n\r\n                            </div>\r\n                            <button>{this.state.showActivity ? 'Show Activity' : 'Hide Activity'}</button>\r\n                        </div> */}\r\n                    </div>\r\n\r\n                    <div className=\"task-details-container-overall-options\">\r\n                        <div className=\"task-details-container-add-to-card-options-container\">\r\n                            <p className=\"text-center uppercase\">add to card</p>\r\n                            <div className=\"task-details-container-add-to-card-options flex column\">\r\n\r\n                                <button className=\"task-details-container-add-to-card-options-btn btn\" onClick={(ev) => this.toggleChooseLabels(ev)} >Labels</button>\r\n                                <button className=\"task-details-container-add-to-card-options-btn btn\" onClick={(ev) => this.toggleChooseMembers(ev)} >Members</button>\r\n                                {/* <button className=\"task-details-container-add-to-card-options-btn btn\" >Check List</button> */}\r\n                                <button className=\"task-details-container-add-to-card-options-btn btn\" onClick={ev => this.onToggleDueDate(ev)}>Due date</button>\r\n                                {/* <button className=\"task-details-container-add-to-card-options-btn btn\" >Image</button>\r\n                                <button className=\"task-details-container-add-to-card-options-btn btn\" >Video</button> */}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"task-details-container-actions-options-container\">\r\n                            <p className=\"text-center uppercase\">actions</p>\r\n                            <div className=\"task-details-container-actions-options-actions flex column\">\r\n                                {/* <button className=\"task-details-container-actions-options-btn btn\" >Move</button> */}\r\n                                <button className=\"task-details-container-actions-options-btn btn\" onClick={() => this.onDuplicateTask(column, task)}>Duplicate</button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MiniDetailsButton extends Component {\r\n\r\n    render() {\r\n        const { text, onClick } = this.props;\r\n        return <div className=\"mini-details-editor-button\"\r\n            onClick={onClick}>\r\n            <p>{text}</p>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsButton from './MiniDetailsButton';\r\nimport Labels from './Labels';\r\nimport DueDate from './DueDate';\r\nimport Members from './Members';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class MiniDetailsEditor extends Component {\r\n    state = {\r\n        onToggleLabels: false,\r\n        onToggleDueDate: false,\r\n        onToggleMembers: false\r\n    }\r\n\r\n    onToggleLabels = _ => {\r\n        this.setState(prevState => ({ onToggleLabels: !prevState.onToggleLabels }));\r\n    }\r\n\r\n    onToggleDueDate = _ => {\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n    onToggleMembers = _ => {\r\n        this.setState(prevState => ({ onToggleMembers: !prevState.onToggleMembers }));\r\n    }\r\n\r\n    onDuplicateTask = _ => {\r\n        const { task } = this.props.miniTask\r\n        const newTask = { ...task, id: utils.getRandomId() };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        newBoard.columns[this.props.miniTask.column.id].taskIds.push(newTask.id);\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    onDelete = _ => {\r\n        const { miniTask } = this.props;\r\n        const board = { ...this.props.board };\r\n        const column = this.props.miniTask.column;\r\n        const taskIds = column.taskIds;\r\n        const task = board.tasks[miniTask.task.id];\r\n        const idx = taskIds.findIndex(taskId => taskId === miniTask.task.id);\r\n        taskIds.splice(idx, 1);\r\n        delete board.tasks[miniTask.task.id];\r\n        const msg = `'${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger'; \r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        return <div\r\n            className=\"mini-details-editor\"\r\n            style={{\r\n                left: (miniTask.left + 265) + 'px',\r\n                top: (miniTask.top + 1) + 'px'\r\n            }}\r\n        >\r\n            <MiniDetailsButton text=\"🖊️ Edit Labels\" onClick={this.onToggleLabels} />\r\n            {this.state.onToggleLabels ? <Labels\r\n                miniTask={miniTask}\r\n                task={miniTask.task}\r\n                toggleChooseLabels={this.onToggleLabels}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard} /> : ''}\r\n            <MiniDetailsButton text=\"🎭 Change Members\" onClick={this.onToggleMembers} />\r\n            {this.state.onToggleMembers ? <Members\r\n                pos={true}\r\n                task={miniTask.task}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleChooseMembers={this.onToggleMembers}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"📅 Change Due Date\" onClick={this.onToggleDueDate} />\r\n            {this.state.onToggleDueDate ? <DueDate\r\n                task={miniTask.task}\r\n                onToggle={this.onToggleDueDate}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"⎘ Duplicate Task\" onClick={this.onDuplicateTask} />\r\n            <MiniDetailsButton text=\"🗑️ Delete Task\" onClick={this.onDelete} />\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default function ScreenFilter(props) {\r\n    return (\r\n        <div className=\"screen-filter\" onClick={_ => props.onToggle()}></div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nimport utils from '../../services/utils';\r\n\r\nexport default class MiniTextDetails extends Component {\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.textarea.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the title of the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        const labelLen = miniTask.task.labels.length;\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: miniTask.top + 'px',\r\n                    height: miniTask.height + 'px'\r\n                }}\r\n            >\r\n                <div className=\"task-container-labels flex\">\r\n                    {miniTask.task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    defaultValue={miniTask.task.title}\r\n                    ref=\"textarea\"\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a task title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: (miniTask.top + miniTask.height + 10) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n            />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nimport utils from '../../services/utils';\r\n\r\nexport default class MiniImageDetails extends Component {\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.textarea.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: miniTask.top + 'px',\r\n                    height: miniTask.height + 'px'\r\n                }}\r\n            >\r\n                <img title={miniTask.task.id} alt=\"task\" width={miniTask.imgWidth} height={miniTask.imgHeight} src={miniTask.task.url} />\r\n\r\n                <textarea\r\n                    name=\"title\"\r\n                    className=\"text-area\"\r\n                    style={{\r\n                        height: miniTask.height - miniTask.imgHeight - 6,\r\n                        position: 'relative',\r\n                        // top: -5 + 'px'\r\n                    }}\r\n                    defaultValue={miniTask.task.title}\r\n                    ref=\"textarea\"\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a task title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: (miniTask.top + miniTask.height + (miniTask.task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import MiniTextDetails from './MiniTextDetails';\r\nimport MiniImageDetails from './MiniImageDetails';\r\nimport MiniVideoDetails from './MiniVideoDetails';\r\n\r\nexport default {\r\n    text: MiniTextDetails,\r\n    video: MiniVideoDetails,\r\n    image: MiniImageDetails\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nimport utils from '../../services/utils'\r\n\r\nexport default class MiniVideoDetails extends Component {\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refs.textarea.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        const videoDimensions = { height: 140, width: 246 };\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: miniTask.top + 'px',\r\n                    height: miniTask.height + 'px'\r\n                }}\r\n            >\r\n                <iframe title={miniTask.task.id}\r\n                    type='text/html' width={videoDimensions.width}\r\n                    height={videoDimensions.height}\r\n                    src={miniTask.task.url}\r\n                    allowFullScreen=\"allowfullscreen\"></iframe>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className=\"text-area\"\r\n                    style={{\r\n                        height: miniTask.height - videoDimensions.height,\r\n                        position: 'relative',\r\n                        bottom: 8 + 'px'\r\n                    }}\r\n                    defaultValue={miniTask.task.title}\r\n                    ref=\"textarea\"\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a task title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: miniTask.left + 'px',\r\n                    top: (miniTask.top + miniTask.height + (miniTask.task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicMiniComponents from \"./mapDynamicMiniComponents\"\r\n\r\nexport default class DynamicMiniComponent extends Component {\r\n    state = {\r\n        previewType: 'text'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ previewType: this.props.miniTask.previewType });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicMiniComponents[this.state.previewType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                miniTask={this.props.miniTask}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n                board={this.props.board}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { store } from 'react-notifications-component';\r\n\r\nimport pageLoading from '../cmps/LoadPage';\r\nimport BoardColumns from '../cmps/BoardColumns';\r\nimport BoardHistory from '../cmps/BoardHistory';\r\nimport BoardTeamMembers from '../cmps/BoardTeamMembers';\r\nimport ColumnAddForm from '../cmps/ColumnAddForm';\r\nimport Login from '../cmps/Login';\r\nimport Filter from '../cmps/Filter';\r\nimport Sort from '../cmps/Sort';\r\nimport SplashMenu from '../cmps/SplashMenu';\r\nimport TaskDetails from '../cmps/TaskDetails';\r\nimport DynamicMiniComponent from '../cmps/dynamics/DynamicMiniComponent';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport utils from '../services/utils';\r\nimport SocketService from '../services/SocketService';\r\n\r\nimport { loadBoard, updateBoard, setBoard } from '../actions/BoardActions';\r\nimport { logout, getLoggedInUser, getUsers } from '../actions/UserActions';\r\n\r\nclass Board extends Component {\r\n\r\n  state = {\r\n    showColAddForm: true,\r\n    showTaskDetails: false,\r\n    showMiniTaskDetails: false,\r\n    toggleUploadBgImg: false,\r\n    toggleLogin: false,\r\n    toggleSplashMenu: false,\r\n    showHistory: false,\r\n    toggleBoardTeamMembers: false,\r\n    miniTaskDetails: {},\r\n    filterBy: {\r\n      title: '',\r\n      teamMembers: ''\r\n    },\r\n    sortBy: '',\r\n    sortOrder: '',\r\n    showTopMenuOptions: true,\r\n    showAddForm: false,\r\n    currColumnId: '',\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getUsers();\r\n    this.props.getLoggedInUser();\r\n    this.loadBoard();\r\n    const boardId = this.props.match.params.id;\r\n    SocketService.setup();\r\n    SocketService.emit('boardId', boardId);\r\n    SocketService.on('updateBoard', (board) => this.props.setBoard(board));\r\n    SocketService.on('getNotification', (notification) => store.addNotification(notification));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    SocketService.off('updateBoard');\r\n    SocketService.off('getNotification');\r\n    SocketService.terminate();\r\n  }\r\n\r\n  loadBoard = () => {\r\n    const boardId = this.props.match.params.id;\r\n    const filterBy = this.state.filterBy;\r\n    const sortBy = this.state.sortBy;\r\n    const sortOrder = this.state.sortOrder;\r\n    this.props.loadBoard(boardId, filterBy, sortBy, sortOrder);\r\n  }\r\n\r\n  toggleAddColumn = () => {\r\n    this.setState((prevState) => ({\r\n      showColAddForm: !prevState.showColAddForm,\r\n    }))\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState((prevState) => ({\r\n      toggleLogin: !prevState.toggleLogin,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleSplashMenu: false\r\n    }))\r\n  }\r\n\r\n  closeAllTabs = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState({\r\n      toggleLogin: false,\r\n      toggleSplashMenu: false,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      showTopMenuOptions: false,\r\n      showAddForm: false,\r\n    });\r\n  }\r\n\r\n  toggleTaskDetails = (currTask) => {\r\n    if (currTask === undefined) {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails }));\r\n    } else if (this.state.showTaskDetails && currTask.id !== this.state.currTask.id) {\r\n      this.setState({ currTask });\r\n    } else {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTask }));\r\n    }\r\n  }\r\n\r\n  onAddImg = (ev) => {\r\n    const file = ev.target.files[0];\r\n    utils.uploadImg(file).then(res => {\r\n      const newBoard = { ...this.props.board }\r\n      newBoard.boardBgImage = res\r\n      this.props.updateBoard(newBoard);\r\n      this.toggleUploadBgImg();\r\n    })\r\n  }\r\n\r\n  onFilter = (filterBy) => {\r\n    this.setState({ filterBy }, this.loadBoard);\r\n  }\r\n\r\n  onSort = (sortBy, sortOrder) => {\r\n    this.setState({ sortBy, sortOrder }, this.loadBoard);\r\n  }\r\n\r\n  toggleMiniDetails = miniTask => {\r\n    if (miniTask) {\r\n      return this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails, miniTaskDetails: miniTask }));\r\n    }\r\n    this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails }));\r\n  }\r\n\r\n  toggleSplashMenu = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleSplashMenu: !prevState.toggleSplashMenu,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardHistory = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      showHistory: !prevState.showHistory,\r\n      toggleSplashMenu: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardTeamMembers = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleBoardTeamMembers: !prevState.toggleBoardTeamMembers,\r\n      showHistory: false,\r\n      toggleSplashMenu: false,\r\n      toggleLogin: false\r\n    }))\r\n  }\r\n\r\n  openAddForm = colId => {\r\n    this.setState({ showAddForm: true, currColumnId: colId }, this.closeEditColumn);\r\n  }\r\n\r\n  closeAddForm = _ => {\r\n    this.setState({ showAddForm: false });\r\n  }\r\n\r\n  openEditColumn = (colId) => {\r\n    this.setState({ showTopMenuOptions: true, currColumnId: colId }, this.closeAddForm());\r\n  }\r\n\r\n  closeEditColumn = _ => {\r\n    this.setState({ showTopMenuOptions: false });\r\n  }\r\n\r\n\r\n  render() {\r\n    if (!this.props.board.columns) return pageLoading();\r\n\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <button className=\"board-page-nav-bar nav-btn\"\r\n        onClick={this.props.logout}>\r\n        logout\r\n      </button>\r\n    } else {\r\n      button = <button className=\"board-page-nav-bar nav-btn\"\r\n        onClick={ev => this.toggleLogin(ev)}>\r\n        login\r\n      </button>\r\n    }\r\n\r\n    return (\r\n      <div className=\"screen\" onClick={this.closeAllTabs}>\r\n        <div className=\"board-page fill-height flex column\" style={{ backgroundImage: 'url(' + this.props.board.boardBgImage + ')' }}>\r\n\r\n          <div className=\"board-page-nav-bar flex space-between\">\r\n            <div className=\"board-page-nav-bar-logo\" onClick={this.goBack}> </div>\r\n            <div className=\"flex align-center\">\r\n              {this.props.loggedInUser && <p className=\"logged-in-user\">Logged in as: {this.props.loggedInUser.username}</p>}\r\n              {button}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"board-page-nav-bar-filters flex align-center space-between\">\r\n            <div className=\"board-page-nav-bar-filters-item flex align-center\">\r\n              <button className=\"board-page-nav-bar-filters nav-btn flex\">\r\n                <HomeIcon onClick={this.goBack} />\r\n              </button>\r\n              <Filter onFilter={this.onFilter} teamMembers={this.props.board.teamMembers} />\r\n              <Sort onSort={this.onSort} />\r\n            </div>\r\n            <div className=\"flex\">\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button className=\"nav-btn fill-height\"\r\n                  onClick={this.toggleBoardTeamMembers}>Add Members</button>\r\n              </div>\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button className=\"nav-btn fill-height\"\r\n                  onClick={(ev) => this.toggleSplashMenu(ev)}>Change Background</button>\r\n              </div>\r\n              <div className=\"board-page-nav-bar-filters-item flex fill-height\">\r\n                <button className=\"board-page-nav-bar-filters nav-btn\"\r\n                  onClick={this.toggleBoardHistory}>Show History</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <SplashMenu\r\n            toggleSplashMenu={this.state.toggleSplashMenu}\r\n            board={this.props.board}\r\n            updateBoard={this.props.updateBoard}\r\n            toggleUploadBgImg={this.toggleUploadBgImg}\r\n            onAddImg={this.onAddImg}\r\n            showUploadBgImg={this.state.toggleUploadBgImg}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n          />\r\n\r\n          {(this.state.toggleLogin) && <Login variant=\"outlined\" className=\"home-page-login\" toggleLogin={this.toggleLogin} />}\r\n          <div className=\"board-page-columns-container\">\r\n            <div className=\"flex align-start fill-height\">\r\n              <Login\r\n                variant=\"outlined\"\r\n                className=\"home-page-login\"\r\n                toggleLogin={this.toggleLogin}\r\n                toggleState={this.state.toggleLogin} />\r\n              <BoardColumns\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleTaskDetails={this.toggleTaskDetails}\r\n                toggleMiniDetails={this.toggleMiniDetails}\r\n                user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n                currColumnId={this.state.currColumnId}\r\n                openAddForm={this.openAddForm}\r\n                closeAddForm={this.closeAddForm}\r\n                openEditColumn={this.openEditColumn}\r\n                closeEditColumn={this.closeEditColumn}\r\n                showTopMenuOptions={this.state.showTopMenuOptions}\r\n                showAddForm={this.state.showAddForm}\r\n              />\r\n              <div className=\"flex column align-center\">\r\n                {this.state.showColAddForm ?\r\n                  <button className=\"board-page-add-another-column-btn\" onClick={this.toggleAddColumn}>\r\n                    + Add another list..  </button> : ''}\r\n                {!this.state.showColAddForm && <ColumnAddForm board={this.props.board} updateBoard={this.props.updateBoard}\r\n                  toggleAddForm={this.toggleAddColumn} user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.showTaskDetails && <TaskDetails\r\n            taskId={this.state.currTask.id}\r\n            board={this.props.board}\r\n            column={this.state.currTask.column}\r\n            updateBoard={this.props.updateBoard}\r\n            toggleTaskDetails={this.toggleTaskDetails}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n          {this.state.showMiniTaskDetails && <DynamicMiniComponent\r\n            miniTask={this.state.miniTaskDetails}\r\n            updateBoard={this.props.updateBoard}\r\n            onToggle={this.toggleMiniDetails}\r\n            board={this.props.board}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n          />}\r\n\r\n          <BoardHistory variant=\"outlined\"\r\n            className=\"home-page-login\" history={this.props.board.history} showHistory={this.state.showHistory}\r\n            toggleBoardHistory={this.toggleBoardHistory} />\r\n\r\n          <BoardTeamMembers board={this.props.board}\r\n            users={this.props.users} toggleBoardTeamMembers={this.state.toggleBoardTeamMembers}\r\n            updateBoard={this.props.updateBoard} />\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser,\r\n    users: state.user.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  updateBoard,\r\n  logout,\r\n  getLoggedInUser,\r\n  setBoard,\r\n  getUsers\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function pageLoading() {\r\n  return (\r\n    <div className=\"loading-page flex column align-center justify-center\">\r\n      <h2> JUST A MOMENT :)</h2>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom'\r\nimport history from './history';\r\nimport '../src/styles/global.scss'\r\n\r\nimport Home from './pages/Home.js';\r\nimport Board from './pages/Board.js';\r\n// import EmptyBoard from './pages/EmptyBoard.js'\r\n// import About from './pages/About.js';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          {/* <Route path=\"/#/board/getstarted\" component={EmptyBoard} exact /> */}\r\n          <Route path=\"/board/:id\" component={Board} exact />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  boards: [],\r\n  board: {}\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards };\r\n    case 'SET_BOARD':\r\n      return { ...state, board: action.board };\r\n    case 'UPDATE_BOARD':\r\n      return { ...state, board: action.board };\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.addedBoard] };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","let localLoggedinUser = null;\r\n// if (localStorage.user) localLoggedinUser = JSON.parse(localStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'SET_USERS':\r\n      return {...state, users: action.users};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n  isLoading: false\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'LOADING_START':\r\n      return { ...state, isLoading: true };\r\n    case 'LOADING_DONE':\r\n      return { ...state, isLoading: false };\r\n    default: return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport BoardReducer from './BoardReducer'\r\nimport UserReducer from './UserReducer';\r\nimport SystemReducer from './SystemReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  boards: BoardReducer,\r\n  system: SystemReducer,\r\n  user: UserReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport ReactNotification from 'react-notifications-component';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-notifications-component/dist/theme.css';\n\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <ReactNotification />\n      <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}