{"version":3,"sources":["history.js","cmps/BoardPreview.js","cmps/BoardsList.js","services/HttpService.js","services/UserService.js","actions/UserActions.js","services/SocketService.js","cmps/Login.js","services/utils.js","services/BoardService.js","actions/BoardActions.js","pages/Home.js","cmps/LoadPage.js","cmps/TopMenuOptions.js","cmps/dynamics/mapDynamicComponents.js","cmps/dynamics/TaskPreview.js","cmps/dynamics/VideoPreview.js","cmps/dynamics/ImagePreview.js","cmps/dynamics/DynamicComponent.js","cmps/TasksList.js","cmps/TaskForm.js","cmps/BoardColumns.js","cmps/BoardHistory.js","cmps/BoardTeamMembers.js","cmps/ColumnAddForm.js","cmps/Filter.js","cmps/Sort.js","cmps/SplashMenu.js","cmps/DueDate.js","cmps/Labels.js","cmps/Members.js","cmps/Todos.js","cmps/TaskDetails.js","cmps/MiniDetailsButton.js","cmps/MiniDetailsEditor.js","cmps/ScreenFilter.js","cmps/dynamics/MiniTextDetails.js","cmps/dynamics/MiniImageDetails.js","cmps/dynamics/mapDynamicMiniComponents.js","cmps/dynamics/MiniVideoDetails.js","cmps/dynamics/DynamicMiniComponent.js","pages/Board.js","App.js","serviceWorker.js","reducers/BoardReducer.js","reducers/UserReducer.js","reducers/index.js","store.js","index.js"],"names":["history","createBrowserHistory","BoardPreview","board","className","src","boardBgThumbnail","alt","boardBgThumbnailTitleStyle","title","withRouter","boards","user","duplicateBoard","templateBoards","filter","isTemplate","myBoards","createdBy","_id","myCollaboratedBoards","teamMembers","find","teamMember","map","key","onClick","username","length","myBoard","to","myCollaboratedBoard","axios","Axios","create","withCredentials","endpoint","data","ajax","a","async","method","url","res","console","log","dir","response","status","push","login","userCred","HttpService","logout","signup","getLoggedInUser","getUsers","users","dispatch","UserService","_setUser","type","_setUsers","socket","Login","state","msg","loginCred","email","password","signupCred","firstName","lastName","loginHandleChange","ev","target","name","value","setState","prevState","signupHandleChange","doLogin","preventDefault","userCreds","props","doSignup","signupCreds","toggleLogin","doLogout","doStopPropagation","stopPropagation","signupSection","onSubmit","this","onChange","placeholder","loginSection","loggedInUser","style","Component","mapDispatchToProps","connect","setup","io","terminate","on","eventName","cb","off","emit","getRandomId","letters","id","i","ind","Math","floor","random","createUserIcon","charAt","getRandomColor","color","uploadImg","file","UPLOAD_URL","formData","FormData","append","post","then","catch","err","error","getImagesFromUnsplash","filterName","URL","get","results","emitNotification","notification","message","insert","container","animationIn","animationOut","dismiss","duration","SocketService","add","query","boardId","filterBy","sortBy","sortOrder","Object","keys","join","_createQueryString","put","remove","_setBoards","loadBoard","BoardService","_boardUpdate","Home","tasks","columns","columnOrder","boardBgImage","createBoard","createdBoardMessage","newBoard","task","duplicatedBoard","taskTeamMembers","createdAt","Date","now","utils","time","loadBoards","button","Button","CSSTransition","in","timeout","classNames","unmountOnExit","Fab","variant","href","addedBoard","_addBoard","LoadPage","CircularProgress","TopMenuOptions","onDuplicateColumn","column","newColumn","newId","idx","findIndex","columnId","splice","taskIds","forEach","taskId","clonedTaskId","taskIdIdx","taskIdx","toggleTopMenuOptions","updateBoard","onDelete","text","toggleMiniDetails","miniTask","boundingClientRect","taskContainer","current","getBoundingClientRect","previewType","React","createRef","prevProps","toggleRender","provided","innerRef","isDragging","showEditBtn","onTaskId","ref","draggableProps","dragHandleProps","labels","label","e","description","todos","todosDone","member","backgroundColor","video","videoContainer","width","height","allowFullScreen","security","image","imgContainer","DynamicComponent","componentType","mapDynamicComponents","Cmp","getComponent","Fragment","TasksList","showAddForm","currTaskId","showTaskDetails","toggleTaskDetails","canOpenTaskDetails","hideEditBtn","_","isDraggingOver","droppableProps","draggableId","index","snapshot","rotationMultiplier","onMouseEnter","onMouseLeave","TaskForm","dueDate","importance","edit","inputChange","fieldName","save","checkIfUrlAndSave","match","newUrl","replace","saveTask","includes","closeUpdateForm","toggleUpdateForm","textAreaAdjust","scrollHeight","nameInput","focus","setFormDataForEdit","onKeyUp","input","BoardColumns","timer","taskKey","onDragEnd","result","destination","source","droppableId","newColumnOrder","slice","columnTitle","start","finish","newTaskIds","taskTitle","startTaskIds","newStart","finishTaskIds","newFinish","setColumnName","emitChange","innerText","saveColumnName","updatedBoard","currColumnId","showTopMenuOptions","direction","columnKey","currId","contentEditable","spellCheck","onFocus","onInput","onBlur","suppressContentEditableWarning","openEditColumn","closeEditColumn","reRender","openAddForm","addCardText","closeAddForm","BoardHistory","item","moment","calendar","BoardTeamMembers","currentBoardMembers","componentDidMount","updateTeamMembers","notificationType","onStopPropagation","boardMember","ColumnAddForm","saveColumn","toggleAddForm","Filter","onFilter","background","isDarkBackground","Sort","onSortBy","onSort","toggleButtonName","SplashMenu","splashImagesUrls","office","filterByName","onSave","splashImages","UrlIndx","currUrl","urls","setBoardBackground","imageUrl","full","small","display","onAddImg","htmlFor","DueDate","setDate","handleChange","date","newTask","getTime","onToggle","selected","showTimeSelect","timeFormat","timeIntervals","timeCaption","dateFormat","popperModifiers","flip","behavior","preventOverflow","enabled","Labels","choosenLabels","setNewState","updateChoosenLabels","classList","labelIdx","currLabel","updateStyle","left","top","toggleChooseLabels","Members","choosenMembers","availableMembers","setAvailableMembers","updateChoosenMembers","memberIdx","currMember","taskMember","pos","toggleChooseMembers","Todo","updateTodo","onSaveTodo","todo","isDone","updateProgressBar","toggleTodos","TaskDetails","choosenlabels","showActivity","showEditDescriptionForm","onToggleDueDate","toggleDeleteTodo","progressWidth","currTodoId","targetValue","openUpdateDescriptionForm","closeUpdateDescriptionForm","onStopPropagationAndCloseOptions","onSaveDescription","onDuplicateTask","onDeleteTask","toggleTodoDone","currTodo","doneTodosCounter","interval","round","setInterval","clearInterval","deleteTodo","todoId","deletedTodo","hideDeleteTodoButton","showDeleteTodoButton","setTaskName","changeDescription","saveTaskName","uploadImage","files","currTask","position","fontSize","fontWeight","letterSpacing","Avatar","margin","textAlign","right","checked","format","cols","MiniDetailsButton","MiniDetailsEditor","onToggleLabels","onToggleMembers","window","innerHeight","ScreenFilter","MiniTextDetails","handleFocus","select","textArea","labelLen","defaultValue","MiniImageDetails","imgHeight","videoDimensions","bottom","DynamicMiniComponent","mapDynamicMiniComponents","Board","showColAddForm","showMiniTaskDetails","toggleSplashMenu","showHistory","toggleBoardTeamMembers","miniTaskDetails","isBoardLoaded","filterIconMod","params","toggleAddColumn","goBack","closeAllTabs","undefined","toggleBoardHistory","colId","img","fac","FastAverageColor","backgroundImage","Image","crossOrigin","getColorAsync","algorithm","isDark","resize","innerWidth","addEventListener","setBoard","store","addNotification","removeEventListener","backgroundAttachment","Typography","component","marginRight","showUploadBgImg","toggleState","unshift","App","path","exact","Boolean","location","hostname","initialState","rootReducer","combineReducers","action","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","Store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.026d2972.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React from \"react\";\r\n\r\nfunction BoardPreview({ board }) {\r\n  return (\r\n    <div className=\"board-preview card\">\r\n      <img src={board.boardBgThumbnail} alt=\"none\" />\r\n      <div className={`flex justify-center align-center title-container ${board.boardBgThumbnailTitleStyle}`}>\r\n        <h2 className={`capitalize ${board.boardBgThumbnailTitleStyle}`}>{board.title}</h2>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default (BoardPreview)","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport BoardPreview from './BoardPreview';\r\n\r\nfunction BoardsList({ boards, user, duplicateBoard }) {\r\n    const templateBoards = boards.filter(board => board.isTemplate);\r\n    const myBoards = (user) ? boards.filter(board => board.createdBy._id === user._id) : '';\r\n    const myCollaboratedBoards = (user) ? boards.filter(board => {\r\n        return board.teamMembers.find(teamMember => user._id === teamMember._id && user._id !== board.createdBy._id);\r\n    }) : '';\r\n\r\n    return (\r\n        <section className=\"boards-list column\">\r\n            <h2 className=\"text-center uppercase\"> check our premade templates</h2>\r\n            <div className=\"boards-list-main-inner-container\">\r\n                {templateBoards.map(board => (\r\n                    <div className=\"boards-list-main-inner-container-item pointer\" key={board._id} onClick={() => duplicateBoard(board)}>\r\n                        <BoardPreview board={board} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {user &&\r\n                <div>\r\n                    <h2 className=\"text-center uppercase\"> {`${user.username}'s`} boards</h2>\r\n                    {(myBoards.length === 0) ?\r\n                        <div className=\"capitalize flex justify-center noboards\">\r\n                            you haven't created a board yet! click on get started or try one of our premade templates!\r\n                    </div> :\r\n                        <div className=\"boards-list-main-inner-container\">\r\n                            {myBoards.map(myBoard => (\r\n                                <NavLink className=\"boards-list-main-inner-container-item\" key={myBoard._id} to={`/board/${myBoard._id}`}>\r\n                                    <BoardPreview board={myBoard} />\r\n                                </NavLink>\r\n                            ))}\r\n                        </div>\r\n                    }\r\n                    <h2 className=\"text-center uppercase\"> {`${user.username}`} is also a member of these boards</h2>\r\n                    {(myCollaboratedBoards.length === 0) ?\r\n                        <div className=\"capitalize flex justify-center noboards\">\r\n                            you are not a member of other boards\r\n                    </div> :\r\n                        <div>\r\n                            <div className=\"boards-list-main-inner-container\">\r\n                                {myCollaboratedBoards.map(myCollaboratedBoard => (\r\n                                    <NavLink className=\"boards-list-main-inner-container-item\" key={myCollaboratedBoard._id} to={`/board/${myCollaboratedBoard._id}`}>\r\n                                        <BoardPreview board={myCollaboratedBoard} />\r\n                                    </NavLink>\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </div>}\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default withRouter(BoardsList)","import history from '../history';\r\nimport Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data){\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data){\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data){\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data){\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method='get', data=null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n          history.push('/');\r\n        }\r\n        throw err;\r\n    }\r\n}","import HttpService from './HttpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getLoggedInUser,\r\n    getUsers\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/login', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in login', err);\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    try {\r\n        const user = await HttpService.post('auth/signup', userCred);\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in signup', err);\r\n    }\r\n}\r\n\r\nasync function logout() {\r\n    try {\r\n        await HttpService.post('auth/logout');\r\n    } catch (err) {\r\n        console.log('UserService: err in logout', err);\r\n    }\r\n}\r\n\r\nasync function getLoggedInUser() {\r\n    try {\r\n        const user = await HttpService.get('auth/user');\r\n        return user;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting loggedInUser', err);\r\n    }\r\n}\r\n\r\nasync function getUsers() {\r\n    try {\r\n        const users = await HttpService.get('user');\r\n        return users;\r\n    } catch (err) {\r\n        console.log('UserService: err in getting users', err);\r\n    }\r\n}\r\n","import UserService from '../services/UserService';\r\n\r\nexport function login(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.login(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in login', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function signup(userCreds) {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.signup(userCreds);\r\n      dispatch(_setUser(user));\r\n    } catch (err) {\r\n      console.log('UserActions: err in signup', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function logout() {\r\n  return async dispatch => {\r\n    try {\r\n      await UserService.logout();\r\n      dispatch(_setUser(null));\r\n    } catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function getLoggedInUser() {\r\n  return async dispatch => {\r\n    try {\r\n      const user = await UserService.getLoggedInUser();\r\n      dispatch(_setUser(user));\r\n    }  catch (err) {\r\n      console.log('UserActions: err in logout', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setUser(user) {\r\n  return {\r\n    type: 'SET_USER',\r\n    user\r\n  };\r\n}\r\n\r\nexport function getUsers() {\r\n  return async dispatch => {\r\n    try {\r\n      const users = await UserService.getUsers();\r\n      dispatch(_setUsers(users));\r\n    } catch (err) {\r\n      console.log('UserActions: err in getUsers', err);\r\n    }\r\n  }\r\n}\r\n\r\nfunction _setUsers(users) {\r\n  return {\r\n    type: 'SET_USERS',\r\n    users\r\n  };\r\n}","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {\r\n  getLoggedInUser,\r\n  login,\r\n  logout,\r\n  signup\r\n} from '../actions/UserActions';\r\n\r\nclass Login extends Component {\r\n  state = {\r\n    msg: '',\r\n    loginCred: {\r\n      email: '',\r\n      password: '',\r\n    },\r\n    signupCred: {\r\n      firstName: '',\r\n      lastName: '',\r\n      username: '',\r\n      email: '',\r\n      password: '',\r\n    },\r\n  }\r\n\r\n  loginHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      loginCred: {\r\n        ...prevState.loginCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  signupHandleChange = ev => {\r\n    const { name, value } = ev.target;\r\n    this.setState(prevState => ({\r\n      signupCred: {\r\n        ...prevState.signupCred,\r\n        [name]: value\r\n      }\r\n    }));\r\n  };\r\n\r\n  doLogin = async ev => {\r\n    ev.preventDefault();\r\n    const { email, password } = this.state.loginCred;\r\n    if (!email || !password) {\r\n      return this.setState({ msg: 'Please enter user/password' });\r\n    }\r\n    const userCreds = { email, password };\r\n    this.props.login(userCreds);\r\n    this.setState({ loginCred: { email: '', password: '' } });\r\n  };\r\n\r\n  doSignup = async ev => {\r\n    ev.preventDefault();\r\n    const { firstName, lastName, username, email, password } = this.state.signupCred;\r\n    if (!firstName || !lastName || !email || !password || !username) {\r\n      return this.setState({ msg: 'All inputs are required!' });\r\n    }\r\n    const signupCreds = { firstName, lastName, username, email, password };\r\n    this.props.signup(signupCreds);\r\n    this.setState({ signupCred: { firstName: '', lastName: '', username: '', email: '', password: '' } });\r\n    this.props.toggleLogin();\r\n  };\r\n\r\n  doLogout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  doStopPropagation = (ev) => {\r\n    ev.stopPropagation();\r\n  }\r\n\r\n  render() {\r\n    let signupSection = (\r\n      <form className=\"login-container-signup text-center\" onSubmit={this.doSignup}>\r\n        <p>Not a member yet? Sign up!</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"firstName\"\r\n          value={this.state.signupCred.firstName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"First Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"lastName\"\r\n          value={this.state.signupCred.lastName}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Last Name\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.signupCred.email}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          value={this.state.signupCred.username}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Username\"\r\n        />\r\n        <br />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          value={this.state.signupCred.password}\r\n          onChange={this.signupHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-signup-btn\">Signup</button>\r\n      </form>\r\n    );\r\n    let loginSection = (\r\n      <form className=\"login-container-login text-center\" onSubmit={this.doLogin}>\r\n        <p> Login: </p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"email\"\r\n          value={this.state.loginCred.email}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Email\"\r\n        />\r\n        <br />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={this.state.loginCred.password}\r\n          onChange={this.loginHandleChange}\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button className=\"login-container-login-btn\">Login</button>\r\n      </form>\r\n    );\r\n\r\n    const { loggedInUser } = this.props;\r\n\r\n    return (\r\n      <div className=\"login-container flex column align-center\"\r\n        style={this.props.style}\r\n        onClick={this.doStopPropagation}\r\n      >\r\n        <div className=\"login-container-logo\">\r\n        </div>\r\n        <h2>{this.state.msg}</h2>\r\n        <div className={\"login-container-form-container\"}>\r\n          {loggedInUser && (\r\n            <div>\r\n              <h2 className=\"login-container-loggedin-username\"> <p>Welcome!</p> {loggedInUser.username} </h2>\r\n              <div className=\"fill-width flex\">\r\n                <button className=\"login-container-form-container-logout\" onClick={this.doLogout}>Logout</button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {!this.props.loggedInUser && loginSection}\r\n          <hr />\r\n          {!this.props.loggedInUser && signupSection}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    users: state.user.users,\r\n    loggedInUser: state.user.loggedInUser,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  login,\r\n  logout,\r\n  signup,\r\n  getLoggedInUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","import axios from 'axios'\r\n\r\nimport SocketService from './SocketService';\r\n\r\nexport default {\r\n  getRandomId,\r\n  createUserIcon,\r\n  getRandomColor,\r\n  uploadImg,\r\n  getImagesFromUnsplash,\r\n  emitNotification\r\n}\r\n\r\nfunction getRandomId() {\r\n  let letters = '1234567890poiiytreqwasdfghjklmnbvcxxssersgyushquiz';\r\n  let id = '';\r\n  for (let i = 0; i < 10; i++) {\r\n    let ind = Math.floor(Math.random() * letters.length)\r\n    id += letters[ind];\r\n  }\r\n  return id;\r\n}\r\n\r\nfunction createUserIcon(firstName, lastName) {\r\n  let newIcon = firstName.charAt(0) + lastName.charAt(0)\r\n  return (newIcon)\r\n}\r\n\r\nfunction getRandomColor() {\r\n  var letters = '0123456789ABCDEF';\r\n  var color = '#';\r\n  for (var i = 0; i < 6; i++) {\r\n    color += letters[Math.floor(Math.random() * 16)];\r\n  }\r\n  return color;\r\n}\r\n\r\nfunction uploadImg(file) {\r\n  const CLOUD_NAME = 'dujlxvxxv'\r\n  const PRESET_NAME = 'xi62wuas'\r\n  const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\r\n\r\n  const formData = new FormData();\r\n  formData.append('file', file);\r\n  formData.append('upload_preset', PRESET_NAME);\r\n\r\n  return axios.post(UPLOAD_URL, formData)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.url\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction getImagesFromUnsplash(filterName) {\r\n  const client_id = '9a992bf0a58ef7c4735758c98ec044dcdb524c2178db25d55cd773d7436f15d1'\r\n  const URL = `https://api.unsplash.com/search/photos?per_page=20&query=${filterName}&client_id=${client_id}`\r\n  return axios.get(URL)\r\n    .then(res => res.data)\r\n    .then(res => {\r\n      return res.results\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\nfunction emitNotification(msg, type) {\r\n  const notification = {\r\n    message: msg,\r\n    type: type,\r\n    insert: \"top\",\r\n    container: \"bottom-right\",\r\n    animationIn: [\"animated\", \"zoomIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n    }\r\n  };\r\n  SocketService.emit('sendNotification', notification);\r\n}","import HttpService from './HttpService';\r\n\r\nexport default {\r\n  add,\r\n  query,\r\n  get,\r\n  put,\r\n  remove\r\n};\r\n\r\nfunction query() {\r\n  return HttpService.get('board');\r\n}\r\n\r\nfunction get(boardId, filterBy, sortBy, sortOrder) {\r\n  return HttpService.get(`board/${boardId}?${_createQueryString(filterBy)}&sortby=${sortBy}&sortorder=${sortOrder}`);\r\n}\r\n\r\nfunction _createQueryString(filterBy) {\r\n  return Object.keys(filterBy).map(filter => filter + '=' + filterBy[filter]).join('&');\r\n}\r\n\r\nfunction put(board) {\r\n  return HttpService.put(`board/${board._id}`, board);\r\n}\r\n\r\nfunction remove(boardId) {\r\n  return HttpService.delete(`board/${boardId}`);\r\n}\r\n\r\nfunction add(board) {\r\n  return HttpService.post('board', board);\r\n}","import BoardService from '../services/BoardService';\r\nimport SocketService from '../services/SocketService';\r\nimport utils from '../services/utils';\r\n\r\nexport function loadBoards() {\r\n  return async dispatch => {\r\n    try {\r\n      const boards = await BoardService.query();\r\n      dispatch(_setBoards(boards));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoards', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _setBoards(boards) {\r\n  return {\r\n    type: 'SET_BOARDS',\r\n    boards\r\n  };\r\n}\r\n\r\nexport function loadBoard(boardId, filterBy, sortBy, sortOrder) {\r\n  return async dispatch => {\r\n    try {\r\n      const board = await BoardService.get(boardId, filterBy, sortBy, sortOrder);\r\n      dispatch(_boardUpdate(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function setBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(_boardUpdate(board));\r\n    } catch (err) {\r\n      console.log('BoardActions: err in setBoard', err);\r\n    }\r\n  }\r\n}\r\n\r\nexport function updateBoard(board, msg, notificationType) {\r\n  return async dispatch => {\r\n    try {\r\n      board.history.unshift({ id: utils.getRandomId(), msg: msg, time: Date.now() })\r\n      dispatch(_boardUpdate(board));\r\n      await BoardService.put(board);\r\n      SocketService.emit('boardUpdate', board);\r\n      utils.emitNotification(msg, notificationType);\r\n    } catch (err) {\r\n      console.log('BoardActions: err in loadBoard', err);\r\n    }\r\n  };\r\n}\r\n\r\nfunction _boardUpdate(board) {\r\n  return {\r\n    type: 'UPDATE_BOARD',\r\n    board\r\n  }\r\n}\r\n\r\nexport function createBoard(board) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedBoard = await BoardService.add(board);\r\n      dispatch(_addBoard(addedBoard));\r\n      return addedBoard;\r\n    } catch (err) {\r\n      console.log('BoardActions: err in createBoard', err);\r\n    }\r\n  }\r\n\r\n  function _addBoard(addedBoard) {\r\n    return {\r\n      type: 'ADD_BOARD',\r\n      addedBoard\r\n    };\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\n\r\nimport BoardsList from '../cmps/BoardsList';\r\nimport Login from '../cmps/Login';\r\n\r\nimport utils from '../services/utils';\r\n\r\nimport { loadBoards, loadBoard, createBoard } from '../actions/BoardActions'\r\nimport { logout, getLoggedInUser } from '../actions/UserActions'\r\n\r\nclass Home extends Component {\r\n\r\n  state = {\r\n    toggleLogin: false,\r\n    board: {\r\n      teamMembers: [],\r\n      tasks: {},\r\n      columns: {},\r\n      columnOrder: [],\r\n      style: {},\r\n      boardBgImage: 'https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&q=85&fm=jpg&crop=entropy&cs=srgb&ixid=eyJhcHBfaWQiOjExMTc0M30',\r\n      history: [],\r\n      boardBgThumbnail: 'https://images.unsplash.com/photo-1511649475669-e288648b2339?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&ixid=eyJhcHBfaWQiOjExMTc0M30'\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadBoards();\r\n    this.props.getLoggedInUser();\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState((prevState) => ({ toggleLogin: !prevState.toggleLogin }))\r\n  }\r\n\r\n  // closeLogin = (ev) => {\r\n  //   ev.stopPropagation()\r\n  //   this.setState({ toggleLogin: false })\r\n  // }\r\n\r\n  createBoard = async () => {\r\n    let board = this.state.board;\r\n    board.createdBy = this.props.loggedInUser || { _id: 'guest', username: 'guest' };\r\n    this.createdBoardMessage(board);\r\n    const newBoard = await this.props.createBoard(board);\r\n    this.props.history.push(`/board/${newBoard._id}`);\r\n  }\r\n\r\n  duplicateBoard = async (board) => {\r\n    let duplicatedBoard = { ...board };\r\n    delete duplicatedBoard._id;\r\n    delete duplicatedBoard.boardBgThumbnailTitleStyle;\r\n    duplicatedBoard.history = [];\r\n    duplicatedBoard.teamMembers = [];\r\n    duplicatedBoard.title = '';\r\n    duplicatedBoard.isTemplate = false;\r\n    duplicatedBoard.createdBy = this.props.loggedInUser || { _id: 'guest', username: 'guest' };\r\n    for (const task in duplicatedBoard.tasks) {\r\n      duplicatedBoard.tasks[task].taskTeamMembers = [];\r\n      duplicatedBoard.tasks[task].createdAt = Date.now();\r\n    }\r\n    this.createdBoardMessage(duplicatedBoard);\r\n    const newBoard = await this.props.createBoard(duplicatedBoard);\r\n    this.props.history.push(`/board/${newBoard._id}`);\r\n  }\r\n\r\n  createdBoardMessage = (board) => {\r\n    const username = (this.props.loggedInUser) ? this.props.loggedInUser.username : 'Guest';\r\n    let msg = `The Board was created by ${username}`;\r\n    board.history.push({ id: utils.getRandomId(), msg: msg, time: Date.now() });\r\n  }\r\n\r\n  render() {\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <Button className=\"home-page-login-btn\" onClick={this.props.logout}>\r\n        <div>logout</div>\r\n      </Button>\r\n    } else {\r\n      button = <Button className=\"home-page-login-btn\" onClick={this.toggleLogin}>\r\n        <div>login</div>\r\n      </Button>\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-page\">\r\n        {(this.state.toggleLogin) && <div className=\"home-page screen\" onClick={this.toggleLogin}></div>}\r\n          <section className=\"home-page-header\">\r\n            <div className=\"home-page-login flex justify-end align-center\">\r\n              {(this.props.loggedInUser) &&\r\n                <p className=\"flex column\">\r\n                  <small>welcome!</small>\r\n                  {this.props.loggedInUser.username}\r\n                </p>\r\n              }\r\n              {button}\r\n            </div>\r\n            <CSSTransition\r\n              in={this.state.toggleLogin}\r\n              timeout={700}\r\n              classNames=\"modal\"\r\n              unmountOnExit>\r\n              <Login\r\n                className=\"home-page-login\"\r\n                toggleLogin={this.toggleLogin} />\r\n            </CSSTransition>\r\n            <div className=\"home-page-header-container flex\">\r\n              <div className=\"header-image flex align-center justify-center fill-width fill-height\">\r\n                <div className=\"login-get-started-container flex align-center justify-center align-center\">\r\n                  <div className=\"home-page-logo-get-started flex column align-center\">\r\n                    <div className=\"home-page-header-container-logo-img fill-width fill-height\"></div>\r\n                    <div className=\"text-center\">\r\n                      <h2>Manage your tasks in a fun and easy way</h2>\r\n                    </div>\r\n                    <div className=\"get-started-btn\">\r\n                      <Fab variant=\"extended\">\r\n                        <p className=\"uppercase\" onClick={this.createBoard}>\r\n                          get started\r\n                    </p>\r\n                      </Fab>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n\r\n          <section className=\"home-page-boards-list flex wrap colum justify-center\">\r\n            <div className=\"home-page-boards-list-img\"></div>\r\n            <p className=\"home-page-boards-list-start-new-board-right-text flex\">\r\n              We, in Trebello, believe that simplicity and style must go together,\r\n            that's why we made our brand simple and easy to use for everyone.<br /> <br />\r\n              Maximize your team workflow and take them one step ahead.</p>\r\n          </section>\r\n\r\n          <BoardsList boards={this.props.boards} user={this.props.loggedInUser} duplicateBoard={this.duplicateBoard} />\r\n\r\n          <section className=\"home-page-footer flex column align-center justify-center\">\r\n            <h2 className=\"uppercase\"> our team </h2>\r\n            <div className=\"home-pagge-footer-team-members-cards-container flex wrap justify-center\">\r\n\r\n              <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n                <div className=\"home-page-footer-team-member-card-member-img vlad\"></div>\r\n                <p>Vlad Batalin</p>\r\n                <small>Front-End development and Design</small>\r\n                <div className=\"flex\">\r\n                  <LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon>\r\n                  <FacebookIcon className=\"faceBookIcon\"></FacebookIcon>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n                <div className=\"home-page-footer-team-member-card-member-img margad\"></div>\r\n                <p>Margad Taikhir</p>\r\n                <small>Front-End development with Back-End support</small>\r\n                <div className=\"flex\">\r\n                  <LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon>\r\n                  <FacebookIcon className=\"faceBookIcon\"></FacebookIcon>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"home-page-footer-team-member-card flex column align-center justify-center\">\r\n                <div className=\"home-page-footer-team-member-card-member-img paolo\"></div>\r\n                <p>Paolo Groppi</p>\r\n                <small>Full-Stack development</small>\r\n                <div className=\"flex\">\r\n                  <a href=\"https://www.linkedin.com/in/paolo-groppi-6ba84117b\" target=\"blank\"><LinkedInIcon className=\"linkedInIcon\"></LinkedInIcon></a>\r\n                  <a href=\"https://www.facebook.com/karma.tova\" target=\"blank\"><FacebookIcon className=\"faceBookIcon\"></FacebookIcon></a>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </section>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    boards: state.boards.boards,\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  loadBoards,\r\n  loadBoard,\r\n  createBoard,\r\n  getLoggedInUser,\r\n  logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nexport default function LoadPage() {\r\n  return (\r\n    <div className=\"loading-page flex column align-center justify-center\">\r\n      <h2 className=\"uppercase\"> just a moment :)</h2>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class TopMenuOptions extends Component {\r\n\r\n    onDuplicateColumn = () => {\r\n\r\n        let column = this.props.column;\r\n        let board = this.props.board;\r\n        let newColumn = { ...this.props.column }\r\n        const newId = utils.getRandomId();\r\n        const idx = board.columnOrder.findIndex(columnId => columnId === column.id);\r\n\r\n        newColumn.id = newId;\r\n        board.columnOrder.splice(idx + 1, 0, newColumn.id);\r\n\r\n        newColumn.taskIds.forEach(taskId => {\r\n\r\n            const clonedTaskId = utils.getRandomId();\r\n            const taskIdIdx = column.taskIds.findIndex(taskIdx => taskIdx === taskId);\r\n\r\n            board.tasks[clonedTaskId] = { ...board.tasks[taskId], id: clonedTaskId }\r\n            newColumn.taskIds = [...newColumn.taskIds];\r\n            newColumn.taskIds.splice(taskIdIdx, 1, clonedTaskId);\r\n        });\r\n\r\n        board.columns[newId] = newColumn;\r\n        this.props.toggleTopMenuOptions(column.id);\r\n        const msg = `'${column.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"top-menu-options\">\r\n            <h2 className=\"text-center capitalize\">options menu</h2>\r\n            <div className=\"options-container flex column\">\r\n                <p className=\"capitalize\" onClick={this.onDuplicateColumn}>duplicate list</p>\r\n                <p className=\"capitalize\" onClick={() => this.props.onDelete(this.props.column.id)}>delete list</p>\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n}","import TaskPreview from './TaskPreview';\r\nimport VideoPreview from './VideoPreview';\r\nimport ImagePreview from './ImagePreview';\r\n\r\nexport default {\r\n    text: TaskPreview,\r\n    video: VideoPreview,\r\n    image: ImagePreview\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\nexport default class TaskPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.taskContainer = React.createRef();\r\n    }\r\n\r\n    // need to see why it doesn't re-render tasklist\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.task.type !== this.props.task.type) {\r\n            console.log('inside')\r\n            this.props.toggleRender();\r\n        }\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.taskContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.taskContainer}>\r\n                <div\r\n                    className={\"task-container\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    {task.url && <img title={task.id} alt=\"task\" src={task.url} />}\r\n\r\n                    <div className=\"task-container-labels flex wrap\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n\r\n                    <div className={\"bottom-container grid-container flex\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(task.description !== '') ?\r\n                            <div className=\"grid-item justify-self-center align-self-center\">\r\n                                <SubjectIcon />\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n\r\n                        {(task.todos.length > 0) ?\r\n                            <div className=\"grid-item align-center flex\">\r\n                                <div className=\"flex align-center\">\r\n                                    <CheckBoxIcon />\r\n                                    <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                                </div>\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        <div className=\"team-members-container grid-item\">\r\n                            <div className=\"flex justify-end\">\r\n                                {(task.taskTeamMembers.map(member => {\r\n                                    return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                }))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class VideoPreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.videoContainer = React.createRef();\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.videoContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.videoContainer}>\r\n                <div\r\n                    className={\"task-container without-padding flex column\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    {task.type === 'video' ?\r\n                        <iframe title={task.id} type='text/html' width=\"252\" height=\"142\" allowFullScreen=\"allowfullscreen\" src={task.url} security=\"restricted\"></iframe> :\r\n                        <img title={task.id} alt=\"task\" src={task.url} />\r\n                    }\r\n                    <div className=\"task-container-labels flex\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n                    {(task.description !== '') ?\r\n                        <div className=\"grid-item justify-self-center align-self-center\">\r\n                            <SubjectIcon />\r\n                        </div>\r\n                        : <div className=\"grid-item\"></div>\r\n                    }\r\n                    {(task.todos.length > 0) ?\r\n                        <div className=\"grid-item align-center flex\">\r\n                            <div className=\"flex\">\r\n                                <CheckBoxIcon />\r\n                                <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                            </div>\r\n                        </div>\r\n                        : <div className=\"grid-item\"></div>\r\n                    }\r\n                    <div className=\"team-members-container grid-item\">\r\n                        <div className=\"flex justify-end\">\r\n                            {(task.taskTeamMembers.map(member => {\r\n                                return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                            }))\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport utils from '../../services/utils'\r\n\r\n\r\nexport default class ImagePreview extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.imgContainer = React.createRef();\r\n    }\r\n\r\n    toggleMiniDetails = ev => {\r\n        ev.stopPropagation();\r\n        const miniTask = {\r\n            task: this.props.task,\r\n            boundingClientRect: this.imgContainer.current.getBoundingClientRect(),\r\n            previewType: this.props.task.type,\r\n            column: this.props.column,\r\n        };\r\n        this.props.toggleMiniDetails(miniTask);\r\n    }\r\n\r\n    render() {\r\n        const { task, provided, innerRef, isDragging, style, showEditBtn, onTaskId } = this.props;\r\n        return (\r\n            <section ref={this.imgContainer}>\r\n                <div\r\n                    className={\"task-container without-padding flex column align center\" + (isDragging ? \" isDragging\" : \"\")}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    ref={innerRef}\r\n                    style={style}\r\n                >\r\n                    <img title={task.id} alt=\"task\" src={task.url} />\r\n                    <div className=\"task-container-labels flex wrap\">\r\n                        {task.labels.map(label => {\r\n                            return <div key={label} className={label + ' small-label'}>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                    <p className=\"task-container-title\">{task.title}</p>\r\n                    {(showEditBtn && (onTaskId === task.id)) ?\r\n                        <CreateIcon className=\"task-container-open-menu\"\r\n                            onClick={e => this.toggleMiniDetails(e)} />\r\n                        : ''}\r\n                    <div className={\"bottom-container grid-container flex\" + (task.description === '' ? ' row-reverse' : '')}>\r\n                        {(task.description !== '') ?\r\n                            <div className=\"grid-item justify-self-center align-self-center\">\r\n                                <SubjectIcon />\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        {(task.todos.length > 0) ?\r\n                            <div className=\"grid-item align-center flex\">\r\n                                <div className=\"flex\">\r\n                                    <CheckBoxIcon />\r\n                                    <p>{task.todosDone + '/' + task.todos.length}</p>\r\n                                </div>\r\n                            </div>\r\n                            : <div className=\"grid-item\"></div>\r\n                        }\r\n                        <div className=\"team-members-container grid-item\">\r\n                            <div className=\"flex justify-end\">\r\n                                {(task.taskTeamMembers.map(member => {\r\n                                    return <div key={member._id} className=\"team-member-icon-wrapper flex align-center\" style={{ backgroundColor: '#dfe1e6' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p className=\"flex align-center\" style={{ color: '#172b4d' }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                }))\r\n                                }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicComponents from \"./mapDynamicComponents\"\r\n\r\nexport default class DynamicComponent extends Component {\r\n    state = {\r\n        componentType: 'text',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ componentType: this.props.task.type });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicComponents[this.state.componentType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                toggleRender={this.props.toggleRender}\r\n                column={this.props.column}\r\n                provided={this.props.provided}\r\n                innerRef={this.props.innerRef}\r\n                task={this.props.task}\r\n                isDragging={this.props.isDragging}\r\n                style={this.props.style}\r\n                onTaskId={this.props.onTaskId}\r\n                showEditBtn={this.props.showEditBtn}\r\n                toggleMiniDetails={this.props.toggleMiniDetails}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\nimport DynamicComponent from './dynamics/DynamicComponent';\r\n\r\nexport default class TasksList extends Component {\r\n\r\n    state = {\r\n        showAddForm: false,\r\n        currTaskId: '',\r\n        onTaskId: '',\r\n        showTaskDetails: false,\r\n    }\r\n\r\n    toggleTaskDetails = id => {\r\n        this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTaskId: id || prevState.currTaskId }));\r\n    }\r\n\r\n    canOpenTaskDetails = taskId => {\r\n        return (this.state.showTaskDetails && this.state.currTaskId === taskId)\r\n    }\r\n\r\n    showEditBtn = (id) => {\r\n        this.setState({ showEditBtn: true, onTaskId: id })\r\n    }\r\n\r\n    hideEditBtn = () => {\r\n        this.setState({ showEditBtn: false })\r\n    }\r\n\r\n    //is it re-rendering at all???\r\n    toggleRender = _ => {\r\n        console.log('tasklist');\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const { tasks, provided, innerRef, isDraggingOver } = this.props;\r\n\r\n        return (\r\n            <section\r\n                className={\"task-list\" + (isDraggingOver ? \" isDraggingOver\" : \"\")}\r\n                {...provided.droppableProps}\r\n                ref={innerRef}\r\n            >\r\n                {tasks.map((task, idx) => (\r\n                    <div key={task.id} className=\"task-list-container\">\r\n                        <Draggable draggableId={task.id} index={idx}>\r\n                            {(provided, snapshot) => (\r\n                                <NaturalDragAnimation\r\n                                    style={provided.draggableProps.style}\r\n                                    snapshot={snapshot}\r\n                                    rotationMultiplier={1.3}\r\n                                >\r\n                                    {style => (\r\n                                        <div onClick={_ => this.props.toggleTaskDetails({ id: task.id, column: this.props.column })}\r\n                                            onMouseEnter={() => this.showEditBtn(task.id)}\r\n                                            onMouseLeave={() => this.hideEditBtn()}\r\n                                        >\r\n                                            <DynamicComponent\r\n                                                toggleRender={this.toggleRender}\r\n                                                provided={provided}\r\n                                                innerRef={provided.innerRef}\r\n                                                task={task}\r\n                                                column={this.props.column}\r\n                                                isDragging={snapshot.isDragging}\r\n                                                style={style}\r\n                                                onTaskId={this.state.onTaskId}\r\n                                                showEditBtn={this.state.showEditBtn}\r\n                                                toggleMiniDetails={this.props.toggleMiniDetails}\r\n                                                user={this.props.user}\r\n                                            >\r\n                                            </DynamicComponent>\r\n                                        </div>\r\n                                    )}\r\n                                </NaturalDragAnimation>\r\n                            )}\r\n                        </Draggable>\r\n                    </div>\r\n                ))}\r\n                {provided.placeholder}\r\n            </section>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskForm extends Component {\r\n\r\n    state = {\r\n        task: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            importance: '',\r\n            description: '',\r\n            type: 'text',\r\n            labels: [],\r\n            todos: [],\r\n            taskTeamMembers: []\r\n        },\r\n        edit: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.task !== this.props.task) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.task) {\r\n            const task = this.props.task;\r\n            this.setState({\r\n                task: {\r\n                    id: task.id,\r\n                    title: task.title,\r\n                    createdAt: task.createdAt,\r\n                    dueDate: task.dueDate,\r\n                    importance: task.importance,\r\n                    description: this.props.description,\r\n                    type: task.type,\r\n                    labels: task.labels,\r\n                    todos: task.todos,\r\n                    taskTeamMembers: task.taskTeamMembers\r\n                },\r\n                edit: true\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        const fieldName = ev.target.name;\r\n        const value = ev.target.value;\r\n        this.setState({ task: { ...this.state.task, [fieldName]: value } })\r\n    }\r\n\r\n    save = (ev) => {\r\n        ev.preventDefault();\r\n        this.checkIfUrlAndSave(this.state.task.title);\r\n    }\r\n\r\n    checkIfUrlAndSave = (url) => {\r\n        const youtubeREGEX = /^(?:https?:\\/\\/)?(?:m\\.|www\\.)?(?:youtu\\.be\\/|youtube\\.com\\/(?:embed\\/|v\\/|watch\\?v=|watch\\?.+&v=))((\\w|-){11})(?:\\S+)?$/;\r\n        const imgREGEX = /.(jpg|jpeg|png|gif)\\/?$/;\r\n        if (url.match(youtubeREGEX)) {\r\n            const newUrl = url.replace('watch?v=', 'embed/');\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'video', url: newUrl } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        } else if (url.match(imgREGEX)) {\r\n            return this.setState(prevState => ({ task: { ...prevState.task, title: '', type: 'image', url } }), _ => {\r\n                this.saveTask();\r\n            });\r\n        }\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [this.state.task.id]: this.state.task\r\n            }\r\n        };\r\n        const column = this.props.column;\r\n        const id = this.state.task.id;\r\n        if (!column.taskIds.includes(id)) column.taskIds.push(id);\r\n        const msg = (!this.state.edit) ?\r\n            `The task '${this.state.task.title}' was added by ${this.props.user}` :\r\n            `${this.props.user} edited the task '${this.state.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.closeUpdateForm();\r\n        if (this.props.toggleUpdateForm) this.props.toggleUpdateForm();\r\n        if (this.props.toggleTaskDetails) this.props.toggleTaskDetails();\r\n    }\r\n\r\n    textAreaAdjust = ev => {\r\n        ev.target.style.height = \"1px\"\r\n        ev.target.style.height = (25 + ev.target.scrollHeight) + \"px\";\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"task-form\" >\r\n            <form onSubmit={this.save} onClick={ev => ev.stopPropagation()}>\r\n                <div className=\"flex column\" >\r\n\r\n                    <textarea type=\"text\"\r\n                        onKeyUp={this.textAreaAdjust}\r\n                        placeholder=\"Enter a title for this card...\"\r\n                        name=\"title\"\r\n                        ref={(input) => { this.nameInput = input; }}\r\n                        onChange={this.inputChange} value={this.state.task.title} />\r\n                    <div className=\"save-btn-container flex align-center\">\r\n                        <button className=\"task-form-save-btn save capitalize\">add card</button>\r\n                        <CloseIcon className=\"task-form-back-btn\" onClick={(ev) => { ev.stopPropagation(); this.props.closeUpdateForm() }} />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\r\nimport NaturalDragAnimation from 'natural-drag-animation-rbdnd';\r\n\r\n// import AddIcon from '@material-ui/icons/Add';\r\n\r\nimport TopMenuOptions from './TopMenuOptions'\r\nimport TasksList from './TasksList';\r\nimport TaskForm from '../cmps/TaskForm'\r\n\r\nexport default class BoardColumns extends Component {\r\n    state = {\r\n        timer: null,\r\n        title: ''\r\n    }\r\n\r\n    onDelete = (id) => {\r\n        const board = { ...this.props.board };\r\n        const columnOrder = board.columnOrder;\r\n        const column = board.columns[id];\r\n        for (const taskId of column.taskIds) {\r\n            for (const taskKey in board.tasks) {\r\n                if (taskId === taskKey) {\r\n                    delete board.tasks[taskKey];\r\n                }\r\n            }\r\n        }\r\n        delete board.columns[id];\r\n        const idx = columnOrder.findIndex(column => column === id);\r\n        columnOrder.splice(idx, 1);\r\n        const msg = `'${column.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    onDragEnd = result => {\r\n        const { destination, source, draggableId, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        };\r\n\r\n        if (destination.droppableId === source.droppableId &&\r\n            destination.index === source.index) {\r\n            return;\r\n        };\r\n\r\n        if (type === 'column') {\r\n            const newColumnOrder = this.props.board.columnOrder.slice();\r\n            newColumnOrder.splice(source.index, 1);\r\n            newColumnOrder.splice(destination.index, 0, draggableId);\r\n            const columnTitle = this.props.board.columns[draggableId].title;\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columnOrder: newColumnOrder\r\n            }\r\n            const msg = `'${columnTitle}' was moved by ${this.props.user}`;\r\n            const notificationType = 'success';\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const start = this.props.board.columns[source.droppableId];\r\n        const finish = this.props.board.columns[destination.droppableId];\r\n\r\n        if (start === finish) {\r\n            const newTaskIds = start.taskIds.slice();\r\n            newTaskIds.splice(source.index, 1);\r\n            newTaskIds.splice(destination.index, 0, draggableId);\r\n            const newColumn = {\r\n                ...start,\r\n                taskIds: newTaskIds\r\n            };\r\n            const newBoard = {\r\n                ...this.props.board,\r\n                columns: {\r\n                    ...this.props.board.columns,\r\n                    [newColumn.id]: newColumn\r\n                }\r\n            };\r\n            const taskTitle = this.props.board.tasks[draggableId].title;\r\n            const msg = `${this.props.user} changed the position of the task '${taskTitle}'`;\r\n            const notificationType = 'success';\r\n            return this.props.updateBoard(newBoard, msg, notificationType);\r\n        };\r\n\r\n        const startTaskIds = start.taskIds.slice();\r\n        startTaskIds.splice(source.index, 1);\r\n        const newStart = {\r\n            ...start,\r\n            taskIds: startTaskIds\r\n        };\r\n\r\n        const finishTaskIds = finish.taskIds.slice();\r\n        finishTaskIds.splice(destination.index, 0, draggableId);\r\n        const newFinish = {\r\n            ...finish,\r\n            taskIds: finishTaskIds\r\n        };\r\n\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [newStart.id]: newStart,\r\n                [newFinish.id]: newFinish\r\n            }\r\n        };\r\n        const taskTitle = this.props.board.tasks[draggableId].title;\r\n        const msg = `${this.props.user} moved the task '${taskTitle}' from '${newStart.title}' to '${newFinish.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    setColumnName = (columnId) => {\r\n        const columnTitle = this.props.board.columns[columnId].title;\r\n        this.setState({ title: columnTitle });\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        this.setState({ title: ev.target.innerText });\r\n    }\r\n\r\n    saveColumnName = (columnId, title) => {\r\n        const columnTitle = this.props.board.columns[columnId].title;\r\n        if (columnTitle === title) return;\r\n\r\n        const updatedBoard = { ...this.props.board };\r\n        updatedBoard.columns[columnId].title = title;\r\n\r\n        const msg = `${this.props.user} changed the name of '${columnTitle}' to '${title}'`;\r\n        const notificationType = 'success';\r\n\r\n        this.props.updateBoard(updatedBoard, msg, notificationType);\r\n    }\r\n\r\n    addCardText(column) {\r\n        return (column.taskIds.length === 0) ? 'Add a card' : 'Add another card';\r\n    }\r\n\r\n    render() {\r\n        const { currColumnId, showTopMenuOptions, showAddForm } = this.props;\r\n        return (\r\n            <DragDropContext onDragEnd={this.onDragEnd}>\r\n                <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                    {provided => (\r\n                        <div\r\n                            className=\"board-columns flex\"\r\n                            {...provided.droppableProps}\r\n                            ref={provided.innerRef}>\r\n                            {this.props.board.columnOrder.map((columnKey, idx) => {\r\n\r\n                                const column = this.props.board.columns[columnKey];\r\n                                const tasks = column.taskIds.map(currId => this.props.board.tasks[currId]);\r\n\r\n                                return (\r\n                                    <Draggable draggableId={columnKey} key={column.id} index={idx}>\r\n\r\n                                        {(provided, snapshot) => (\r\n                                            <NaturalDragAnimation\r\n                                                style={provided.draggableProps.style}\r\n                                                snapshot={snapshot}\r\n                                                rotationMultiplier={1.3}\r\n                                            >\r\n                                                {style => (\r\n\r\n                                                    <div\r\n                                                        className=\"board-columns-item\"\r\n                                                        {...provided.draggableProps}\r\n                                                        ref={provided.innerRef}\r\n                                                        style={style}\r\n                                                    >\r\n                                                        <div\r\n                                                            className=\"board-columns-item-header flex align-center space-between\"\r\n                                                            {...provided.dragHandleProps}\r\n                                                        >\r\n                                                            <div className=\"board-columns-item-header-h2-wrapper\">\r\n                                                                <h2\r\n                                                                    contentEditable='true'\r\n                                                                    spellCheck=\"false\"\r\n                                                                    onFocus={() => this.setColumnName(column.id)}\r\n                                                                    onInput={(ev) => this.emitChange(ev)}\r\n                                                                    onBlur={() => this.saveColumnName(column.id, this.state.title)}\r\n                                                                    suppressContentEditableWarning={true}\r\n                                                                >\r\n                                                                    {column.title}\r\n                                                                </h2>\r\n                                                            </div>\r\n\r\n\r\n\r\n                                                            <div className=\"board-columns-item-header-menu-btn-icon\"\r\n                                                                onClick={(ev) => { ev.stopPropagation(); this.props.openEditColumn(column.id) }}> ... </div>\r\n                                                        </div>\r\n\r\n\r\n\r\n                                                        {showTopMenuOptions && (currColumnId === column.id) ?\r\n                                                            <TopMenuOptions\r\n                                                                onDelete={this.onDelete}\r\n                                                                column={column}\r\n                                                                board={this.props.board}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                                toggleTopMenuOptions={this.props.closeEditColumn}\r\n                                                                user={this.props.user}\r\n                                                            />\r\n                                                            : ''}\r\n                                                        <Droppable droppableId={column.id} type=\"task\">\r\n                                                            {(provided, snapshot) => {\r\n                                                                return <TasksList\r\n                                                                reRender={this.reRender}\r\n                                                                    board={this.props.board}\r\n                                                                    innerRef={provided.innerRef}\r\n                                                                    provided={provided}\r\n                                                                    tasks={tasks}\r\n                                                                    isDraggingOver={snapshot.isDraggingOver}\r\n                                                                    column={column}\r\n                                                                    toggleTaskDetails={this.props.toggleTaskDetails}\r\n                                                                    updateBoard={this.props.updateBoard}\r\n                                                                    toggleMiniDetails={this.props.toggleMiniDetails}\r\n                                                                    user={this.props.user}\r\n                                                                >\r\n                                                                </TasksList>\r\n                                                            }}\r\n                                                        </Droppable>\r\n                                                        {(!showAddForm || currColumnId !== column.id) &&\r\n                                                            <div className=\"task-list-footer flex align-center\">\r\n                                                                <div className=\"task-list-footer-add-task fill-width\"\r\n                                                                    onClick={(ev) => { ev.stopPropagation(); this.props.openAddForm(column.id) }}>\r\n                                                                    <span className=\"add-icon\">+</span>{this.addCardText(column)}</div>\r\n                                                            </div>\r\n                                                        }\r\n                                                        {showAddForm && (currColumnId === column.id) ?\r\n                                                            <TaskForm\r\n                                                                user={this.props.user}\r\n                                                                board={this.props.board}\r\n                                                                column={column}\r\n                                                                closeUpdateForm={this.props.closeAddForm}\r\n                                                                updateBoard={this.props.updateBoard}\r\n                                                            />\r\n                                                            : ''\r\n                                                        }\r\n                                                    </div>\r\n                                                )}\r\n                                            </NaturalDragAnimation>\r\n                                        )}\r\n                                    </Draggable>\r\n                                )\r\n                            })}\r\n                            {provided.placeholder}\r\n                        </div >)}\r\n                </Droppable>\r\n            </DragDropContext>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nexport default class BoardHistory extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"boardhistory-container column\">\r\n                <div className=\"flex column\">\r\n                    <div className=\"uppercase text-center\">\r\n                        <h2>board history :</h2>\r\n                    </div>\r\n                    <hr />\r\n                </div>\r\n                <ul className=\"clean-list\">\r\n                    {this.props.history.map(item => (\r\n                        <li key={item.id}><div className=\"msg\">{item.msg}<br />{moment(item.time).calendar()}</div><hr /></li>\r\n\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class BoardTeamMembers extends Component {\r\n    state = {\r\n        currentBoardMembers: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setState({ currentBoardMembers: this.props.board.teamMembers });\r\n    }\r\n\r\n    updateTeamMembers = (user) => {\r\n        const board = this.props.board;\r\n        const teamMembers = board.teamMembers;\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (teamMembers.find(teamMember => teamMember._id === user._id)) {\r\n            const idx = teamMembers.findIndex(teamMember => teamMember._id === user._id);\r\n            teamMembers.splice(idx, 1);\r\n            msg = `${user.username} was removed from this board`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            teamMembers.push(user);\r\n            msg = `${user.username} was added to this board`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ currentBoardMembers: teamMembers });\r\n        this.props.updateBoard(board, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        const currentBoardMembers = this.state.currentBoardMembers;\r\n        const users = this.props.users.filter(user => !currentBoardMembers.find(boardMember => user._id === boardMember._id));\r\n        return (\r\n            <div className=\"board-team-members-container text-center column\"\r\n               onClick={(ev) => this.onStopPropagation(ev)}>\r\n\r\n                <div className=\"members-container-colors-container flex column\">\r\n                    <div className=\"pointer uppercase\"><h2>board members :</h2></div>\r\n                    <hr />\r\n                    {this.state.currentBoardMembers.map(teamMember => {\r\n                        return (\r\n                            <div key={teamMember._id} className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateTeamMembers(teamMember)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(teamMember.firstName, teamMember.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{teamMember.firstName} {teamMember.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"add-team-members flex column\">\r\n                    <p className=\"pointer uppercase\">add / remove users</p>\r\n                    {users.map(user => {\r\n                        return (\r\n                            <div key={user._id} className=\"team-member flex align-center\"\r\n                                onClick={() => this.updateTeamMembers(user)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\"\r\n                                    style={{ backgroundColor: '#dfe1e6' }}>\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p className=\"capitalize\" style={{ color: '#172b4d' }}>\r\n                                            {utils.createUserIcon(user.firstName, user.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"capitalize\">{user.firstName} {user.lastName}</span>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class ColumnAddForm extends Component {\r\n\r\n    state = {\r\n        column: {\r\n            id: utils.getRandomId(),\r\n            title: '',\r\n            taskIds: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.nameInput.focus();\r\n        this.setFormDataForEdit();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.column !== this.props.column) {\r\n            this.setFormDataForEdit();\r\n        }\r\n    }\r\n\r\n    setFormDataForEdit() {\r\n        if (this.props.column) {\r\n            const column = this.props.column;\r\n            this.setState({\r\n                column: {\r\n                    id: column.id,\r\n                    title: column.title,\r\n                    taskIds: column.taskIds\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState({ column: { ...this.state.column, [fieldName]: value } })\r\n    }\r\n\r\n    saveColumn = (ev) => {\r\n        ev.preventDefault();\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [this.state.column.id]: this.state.column\r\n            }\r\n        };\r\n        const id = this.state.column.id;\r\n        const columnOrder = newBoard.columnOrder;\r\n        if (!columnOrder.includes(id)) columnOrder.push(id);\r\n        const msg = `'${this.state.column.title}' was added by ` + this.props.user;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleAddForm();\r\n    }\r\n\r\n    render() {\r\n        return <form className=\"add-column-form-container flex column space-between\" onSubmit={this.saveColumn}>\r\n            <input\r\n                ref={(input) => { this.nameInput = input; }}\r\n                type='text'\r\n                placeholder='Enter list title...'\r\n                name='title'\r\n                onChange={this.inputChange}\r\n                value={this.state.column.title} />\r\n            <div className=\"save-btn-container flex\">\r\n                <button className=\"add-column-save-btn capitalize\"\r\n                    variant=\"contained\">add list</button>\r\n\r\n                <CloseIcon className=\"add-column-back-to-board flex align-center\"\r\n                    onClick={this.props.toggleAddForm} />\r\n\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Filter extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            title: '',\r\n            teamMembers: ''\r\n        }\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [fieldName]: value } }), () => this.props.onFilter(this.state.filterBy));\r\n    }\r\n\r\n    render() {\r\n        const teamMembers = this.props.teamMembers;\r\n        return <div className=\"board-page-nav-bar-filters-item flex\">\r\n\r\n            <input type=\"text\" placeholder=\"Search card by name\"\r\n                value={this.state.filterBy.title}\r\n                onChange={this.inputChange} name=\"title\">\r\n            </input>\r\n\r\n            <div style={{ background: (this.props.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n            <select name=\"teamMembers\" style={{\r\n                color: (this.props.isDarkBackground) ? 'white' : 'black',\r\n                background: (this.props.isDarkBackground) ? '#0000006b' : '#ffffff8e'\r\n            }} onChange={this.inputChange}>\r\n                <option value=''>All Team Members</option>\r\n                {teamMembers.map(teamMember => (\r\n                    <option className=\"capitalize\" key={teamMember._id} value={`${teamMember.username}`}>{teamMember.firstName} {teamMember.lastName}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    }\r\n\r\n}","import React, { Component } from 'react'\r\n\r\nexport default class Sort extends Component {\r\n\r\n    state = {\r\n        sortBy: '',\r\n        sortOrder: 'asc'\r\n    }\r\n\r\n    inputChange = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let value = ev.target.value;\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [fieldName]: value } }));\r\n    }\r\n\r\n    onSortBy = (ev) => {\r\n        let fieldName = ev.target.name;\r\n        let sortOrder = (this.state.sortOrder === 'asc') ? 'desc' : 'asc';\r\n        this.setState({ sortBy: fieldName, sortOrder: sortOrder }, () => this.props.onSort(this.state.sortBy, this.state.sortOrder));\r\n    }\r\n\r\n    toggleButtonName = () => {\r\n        return (this.state.sortOrder === 'asc') ? 'Newest Cards' : 'Oldest Cards';\r\n    }\r\n\r\n    render() {\r\n        return <div  className=\"board-page-nav-bar-filters-item fill-height\">\r\n            <button className={`nav-btn fill-height\r\n            ${(this.props.isDarkBackground) ? 'dark' : 'light'}`}\r\n                onClick={this.onSortBy}\r\n                name='createdAt'>{this.toggleButtonName()}</button>\r\n\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\n\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nimport utils from '../services/utils';\r\n\r\nimport office from '../unsplashdefaultdata/officequery';\r\n\r\nexport default class SplashMenu extends Component {\r\n\r\n    state = {\r\n        splashImagesUrls: office,\r\n        filterByName: ''\r\n    }\r\n\r\n    inputChange = ev => {\r\n        this.setState({ filterByName: ev.target.value });\r\n    }\r\n\r\n    onSave = async () => {\r\n        try {\r\n            const splashImages = await utils.getImagesFromUnsplash(this.state.filterByName)\r\n            let splashImagesUrls = [];\r\n            splashImages.forEach(image => {\r\n                const UrlIndx = splashImagesUrls.findIndex(currUrl => currUrl === image.urls);\r\n                if (UrlIndx >= 0) {\r\n                    splashImagesUrls.splice(UrlIndx, 1)\r\n                } else {\r\n                    splashImagesUrls.push(image.urls);\r\n                }\r\n            })\r\n            this.setState({ splashImagesUrls });\r\n        } catch (err) {\r\n            // console.err(401).send({ error: err });\r\n        }\r\n    }\r\n\r\n    setBoardBackground = (imageUrl) => {\r\n        const newBoard = { ...this.props.board }\r\n        newBoard.boardBgImage = imageUrl.full;\r\n        newBoard.boardBgThumbnail = imageUrl.small;\r\n        const msg = `${this.props.user} changed background image`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    stopPropagation = (ev) => {\r\n        ev.stopPropagation()\r\n    }\r\n\r\n    render() {\r\n        return <div className=\"splash-menu flex column align-center translateLeft\"\r\n            onClick={(ev) => this.stopPropagation(ev)}>\r\n            <div className=\"flex column fill-width filter-container\">\r\n                <div className=\"splash-menu-search-bar fill-width flex justify-center\">\r\n                    <input\r\n                        type='text'\r\n                        placeholder='Search by name...'\r\n                        onChange={this.inputChange}\r\n                    />\r\n                    <button className=\"splash-menu-search-bar-save-btn\" onClick={this.onSave}>\r\n                        <SearchIcon />\r\n                    </button>\r\n                </div>\r\n                <button className=\"splash-menu-search-bar-save-btn upload-btn capitalize\">\r\n                    <input style={{ display: \"none\" }} type=\"file\" id=\"upload-img\" onChange={this.props.onAddImg}></input>\r\n                    <label htmlFor=\"upload-img\">upload image</label>\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"splash-images-container-wrapper\">\r\n                <div className=\"splash-images-container flex wrap fill-width\" >\r\n                    {this.state.splashImagesUrls.map(imageUrl => {\r\n                        return <div key={imageUrl.small} className=\"splash-images-container-item flex wrap\">\r\n                            <img src={imageUrl.small} alt=\"oops.. didn't found it\" onClick={() => this.setBoardBackground(imageUrl)}></img>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DatePicker from 'react-datepicker';\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nexport default class DueDate extends React.Component {\r\n    state = {\r\n        dueDate: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setDate();\r\n    }\r\n\r\n    setDate = _ => {\r\n        this.setState({ dueDate: this.props.task.dueDate ? new Date(this.props.task.dueDate) : new Date() })\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     this.saveTask();\r\n    // }\r\n\r\n    handleChange = date => {\r\n        this.setState({ dueDate: date });\r\n        this.saveTask();\r\n    }\r\n\r\n    saveTask = _ => {\r\n        const newTask = { ...this.props.task, dueDate: this.state.dueDate.getTime() };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the due date for task '${this.props.task.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"duedate-edit flex column\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}>\r\n                <div className=\"close-btn-container\">\r\n                    <CloseIcon className=\"duedate-edit-close-btn\" onClick={this.props.onToggle} />\r\n                </div>\r\n\r\n                <div className=\"flex column align-center justify-center datepicker-container\">\r\n                    <DatePicker\r\n                        selected={this.state.dueDate}\r\n                        onChange={this.handleChange}\r\n                        showTimeSelect\r\n                        timeFormat=\"HH:mm\"\r\n                        timeIntervals={15}\r\n                        timeCaption=\"Time\"\r\n                        dateFormat=\"MMMM d, yyyy h:mm aa\"\r\n                        popperModifiers={{\r\n                            flip: {behavior: ['bottom']},\r\n                            preventOverflow: { enabled: false }\r\n                        }}\r\n                    />\r\n                    <button className=\"add-duedate-btn capitalize\" onClick={this.saveTask}>add</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class Labels extends Component {\r\n    state = {\r\n        choosenLabels: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenLabels: this.props.task.labels })\r\n    }\r\n\r\n    updateChoosenLabels = (ev) => {\r\n        const label = ev.target.classList[0];\r\n        const choosenLabels = this.state.choosenLabels;\r\n        const labelIdx = choosenLabels.findIndex(currLabel => currLabel === label);\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (labelIdx >= 0) {\r\n            choosenLabels.splice(labelIdx, 1)\r\n            msg = `A label was removed from the task '${this.props.task.title}'`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            choosenLabels.push(label);\r\n            msg = `A label was added to the task '${this.props.task.title}'`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ choosenLabels },() => this.onSave(msg, notificationType));\r\n    }\r\n\r\n    onSave = (msg, notificationType) => {\r\n        const newTask = { ...this.props.task, labels: this.state.choosenLabels };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.miniTask) {\r\n            updateStyle = {\r\n                left: 12 + 'px',\r\n                top: 36 + 'px',\r\n            }\r\n\r\n        }\r\n\r\n        return (\r\n            <div className=\"labels-container text-center\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}\r\n            >\r\n                <CloseIcon className=\"labels-container-close-btn\" onClick={this.props.toggleChooseLabels} />\r\n                <p className=\"uppercase\">choose labels</p>\r\n                <hr />\r\n                <div className=\"labels-container-colors-container flex column align-center \">\r\n                    <div className=\"label-color-1 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-2 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-3 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-4 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-5 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                    <div className=\"label-color-6 large-label\" onClick={(ev) => this.updateChoosenLabels(ev)}></div>\r\n                </div>\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class Members extends Component {\r\n    state = {\r\n        choosenMembers: [],\r\n        availableMembers: []\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ choosenMembers: this.props.task.taskTeamMembers }, this.setAvailableMembers);\r\n    }\r\n\r\n    updateChoosenMembers = (teamMember) => {\r\n        const choosenMembers = this.state.choosenMembers;\r\n        const memberIdx = choosenMembers.findIndex(currMember => currMember._id === teamMember._id);\r\n        let msg = '';\r\n        let notificationType = '';\r\n        if (memberIdx >= 0) {\r\n            choosenMembers.splice(memberIdx, 1);\r\n            msg = `${teamMember.username} was released from the task '${this.props.task.title}'`;\r\n            notificationType = 'danger';\r\n        } else {\r\n            choosenMembers.push(teamMember);\r\n            msg = `${teamMember.username} was asigned to the task '${this.props.task.title}'`;\r\n            notificationType = 'success';\r\n        }\r\n        this.setState({ choosenMembers }, this.setAvailableMembers(msg, notificationType));\r\n    }\r\n\r\n    setAvailableMembers = (msg, notificationType) => {\r\n        const availableMembers = this.props.board.teamMembers.filter(currMember => !this.state.choosenMembers.find(taskMember => taskMember._id === currMember._id));\r\n        this.setState({ availableMembers }, this.onSave(msg, notificationType));\r\n    }\r\n\r\n    onSave = (msg, notificationType) => {\r\n        const newTask = { ...this.props.task, taskTeamMembers: this.state.choosenMembers };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        let updateStyle = null;\r\n        if (this.props.pos) {\r\n            updateStyle = {\r\n                left: 10 + 'px',\r\n                top: 72 + 'px',\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"members-container text-center column\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n                style={{ ...updateStyle }}>\r\n                <CloseIcon className=\"members-container-close-btn\" onClick={this.props.toggleChooseMembers} />\r\n                <p className=\"uppercase\">assigned members</p>\r\n                <hr />\r\n\r\n                <div className=\"members-container-asign-members-wrapper flex\">\r\n                    <div className=\"members-container-asign-members flex column fill-width\">\r\n\r\n                        {this.props.task.taskTeamMembers.map(member => {\r\n                            return <div key={member._id} className=\"team-member flex\"\r\n                                onClick={() => this.updateChoosenMembers(member)}>\r\n                                <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                    <div className=\"team-member-icon\">\r\n                                        <p>\r\n                                            {utils.createUserIcon(member.firstName,\r\n                                                member.lastName)}\r\n                                        </p>\r\n                                    </div>\r\n                                </div>\r\n                                <p>{member.firstName} {member.lastName}</p>\r\n                            </div>\r\n                        })\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"add-team-members-wrapper flex column\">\r\n                    <p className=\"uppercase\"> add a team member </p>\r\n                    <div className=\"add-team-members flex column\">\r\n                        {this.state.availableMembers.map(teamMember => {\r\n                            return (\r\n                                <div key={teamMember._id}\r\n                                    className=\"team-member flex align-center\"\r\n                                    onClick={() => this.updateChoosenMembers(teamMember)}>\r\n                                    <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                                        <div className=\"team-member-icon\">\r\n                                            <p>\r\n                                                {utils.createUserIcon(teamMember.firstName,\r\n                                                    teamMember.lastName)}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                    <p>{teamMember.firstName} {teamMember.lastName}</p>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div >\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport utils from '../services/utils'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport default class Todo extends Component {\r\n    state = {\r\n        todos: [],\r\n        text: '',\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.setNewState();\r\n    }\r\n\r\n    setNewState = () => {\r\n        this.setState({ todos: this.props.task.todos })\r\n    }\r\n\r\n    updateTodo = (ev) => {\r\n        this.setState({ text: ev.target.value })\r\n    }\r\n\r\n\r\n    onSaveTodo = async () => {\r\n        const todo = {\r\n            text: this.state.text,\r\n            isDone: false,\r\n            id: utils.getRandomId()\r\n        }\r\n\r\n        const todos = this.state.todos;\r\n        todos.push(todo);\r\n        this.setState({ todos });\r\n        const newTask = { ...this.props.task, todos: this.state.todos };\r\n        const newBoard = { ...this.props.board, tasks: { ...this.props.board.tasks, [newTask.id]: newTask } }\r\n        const taskTitle = this.props.task.title;\r\n        const msg = `${this.props.user} added a new todo to the task '${taskTitle}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.updateProgressBar();\r\n    }\r\n\r\n    onStopPropagation = (ev) => {\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"check-list-item-container text-center\"\r\n                onClick={(ev) => this.onStopPropagation(ev)}\r\n            >\r\n                <div className=\"checklist-closebtn-container\">\r\n                    <CloseIcon className=\"check-list-item-container-close-btn pointer\" onClick={this.props.toggleTodos} />\r\n                </div>\r\n\r\n                <div className=\"input-container flex column justify-center align-center\">\r\n                    <input className=\"text-center\" type=\"text\" placeholder=\"add new todo\"\r\n                        value={this.state.text}\r\n                        onChange={this.updateTodo} name=\"text\">\r\n                    </input>\r\n                    <button className=\"save-todo-btn capitalize\" onClick={this.onSaveTodo}>add</button>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport moment from 'moment';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n//icons :\r\n\r\nimport NotesIcon from '@material-ui/icons/Notes';\r\nimport DeleteOutlineIcon from '@material-ui/icons/DeleteOutline';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PersonAddOutlinedIcon from '@material-ui/icons/PersonAddOutlined';\r\nimport LabelOutlinedIcon from '@material-ui/icons/LabelOutlined';\r\nimport AssignmentTurnedInOutlinedIcon from '@material-ui/icons/AssignmentTurnedInOutlined';\r\nimport EventOutlinedIcon from '@material-ui/icons/EventOutlined';\r\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\r\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\nimport ImageOutlinedIcon from '@material-ui/icons/ImageOutlined';\r\n\r\nimport DueDate from './DueDate';\r\nimport Labels from './Labels';\r\nimport Members from './Members';\r\nimport Todos from './Todos';\r\n\r\nimport utils from '../services/utils'\r\n\r\nexport default class TaskDetails extends Component {\r\n    state = {\r\n        description: '',\r\n        teamMembers: [],\r\n        choosenMembers: [],\r\n        choosenlabels: [],\r\n        showActivity: false,\r\n        showEditDescriptionForm: false,\r\n        toggleChooseLabels: false,\r\n        toggleChooseMembers: false,\r\n        toggleTodos: false,\r\n        onToggleDueDate: false,\r\n        toggleDeleteTodo: false,\r\n        progressWidth: 0,\r\n        currTodoId: '',\r\n        taskTitle: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        const currTask = this.props.board.tasks[this.props.taskId]\r\n        this.setState({ description: currTask.description }, this.updateProgressBar);\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ description: targetValue });\r\n    }\r\n\r\n    openUpdateDescriptionForm = () => {\r\n        this.setState(prevState => ({ showEditDescriptionForm: true }))\r\n    }\r\n\r\n    onToggleDueDate = ev => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n\r\n    closeUpdateDescriptionForm = () => {\r\n        this.setState({ showEditDescriptionForm: false })\r\n    }\r\n\r\n    onStopPropagationAndCloseOptions = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState({\r\n            toggleChooseLabels: false,\r\n            toggleChooseMembers: false\r\n        })\r\n    }\r\n\r\n    toggleChooseLabels = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseLabels: !prevState.toggleChooseLabels }))\r\n    }\r\n\r\n    onSaveDescription = (ev, task) => {\r\n        ev.stopPropagation();\r\n        const newTask = { ...task, description: this.state.description };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The description of '${task.title}' was changed by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.closeUpdateDescriptionForm();\r\n    }\r\n\r\n    toggleChooseMembers = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleChooseMembers: !prevState.toggleChooseMembers }))\r\n    }\r\n\r\n    toggleTodos = (ev) => {\r\n        ev.stopPropagation();\r\n        this.setState(prevState => ({ toggleTodos: !prevState.toggleTodos }))\r\n    }\r\n\r\n    onDuplicateTask = (column, task) => {\r\n        const newTask = { ...task, id: utils.getRandomId(), labels: [...task.labels], todos: [...task.todos], taskTeamMembers: [...task.taskTeamMembers]};\r\n        column.taskIds.push(newTask.id);\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n    onDeleteTask = (column, task) => {\r\n        const board = { ...this.props.board };\r\n        const taskIds = column.taskIds;\r\n        const idx = taskIds.findIndex(taskId => taskId === task.id);\r\n        taskIds.splice(idx, 1);\r\n        delete board.tasks[task.id];\r\n        const msg = `'${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n    toggleTodoDone = async (todo) => {\r\n        todo.isDone = !todo.isDone;\r\n        let newTask = { ...this.props.board.tasks[this.props.taskId] };\r\n        const todos = newTask.todos;\r\n        const idx = todos.findIndex(currTodo => (currTodo.id === todo.id));\r\n        todos[idx].isDone = todo.isDone;\r\n        let doneTodosCounter = newTask.todos.filter(todo => (todo.isDone)).length;\r\n        newTask.todosDone = doneTodosCounter;\r\n        let msg = '';\r\n        let notificationType = '';\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        if (todo.isDone) {\r\n            msg = `The subtask '${todo.text}' in '${newTask.title}' was completed by ${this.props.user}`;\r\n            notificationType = 'success';\r\n        } else {\r\n            msg = `The subtask '${todo.text}' in '${newTask.title}' was remarked as uncompleted by ${this.props.user}`;\r\n            notificationType = 'danger';\r\n        }\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.updateProgressBar()\r\n    }\r\n\r\n    updateProgressBar = () => {\r\n        let start = this.state.progressWidth;\r\n        let task = this.props.board.tasks[this.props.taskId];\r\n        let doneTodosCounter = task.todos.filter(todo => (todo.isDone)).length;\r\n        task.todosDone = doneTodosCounter;\r\n\r\n        let interval;\r\n        let progressWidth = Math.round((doneTodosCounter / task.todos.length) * 100);\r\n        if (!progressWidth && !start) return;\r\n        if (start < progressWidth) {\r\n            interval = setInterval(() => {\r\n                if (start >= progressWidth) {\r\n                    clearInterval(interval);\r\n                } else {\r\n                    start++;\r\n                    this.setState({ progressWidth: start })\r\n                }\r\n            }, 10);\r\n        } else {\r\n            interval = setInterval(() => {\r\n                if (start <= progressWidth) {\r\n                    clearInterval(interval);\r\n                } else {\r\n                    start--;\r\n                    this.setState({ progressWidth: start })\r\n                }\r\n            }, 10);\r\n        }\r\n    }\r\n\r\n    deleteTodo = (todoId) => {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        let todos = task.todos;\r\n        const idx = todos.findIndex(currTodo => (currTodo.id === todoId));\r\n        const deletedTodo = todos[idx];\r\n        todos.splice(idx, 1);\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [task.id]: task\r\n            }\r\n        }\r\n        const msg = `The subtask '${deletedTodo.text}' in '${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.updateProgressBar();\r\n        this.hideDeleteTodoButton(todoId);\r\n    }\r\n\r\n    showDeleteTodoButton = (todoId) => {\r\n        this.setState({ toggleDeleteTodo: true, currTodoId: todoId });\r\n    }\r\n\r\n    hideDeleteTodoButton = (todoId) => {\r\n        this.setState({ toggleDeleteTodo: false, currTodoId: todoId });\r\n    }\r\n\r\n    setTaskName = (taskId) => {\r\n        const taskTitle = this.props.board.tasks[taskId].title;\r\n        this.setState({ taskTitle: taskTitle });\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        this.setState({ taskTitle: ev.target.innerText });\r\n    }\r\n\r\n    changeDescription = (ev) => {\r\n        this.setState({ description: ev.target.value });\r\n    }\r\n\r\n    saveTaskName = (taskId, title) => {\r\n        const taskTitle = this.props.board.tasks[taskId].title;\r\n        if (taskTitle === title) return;\r\n\r\n        const updatedBoard = { ...this.props.board };\r\n        updatedBoard.tasks[taskId].title = title;\r\n\r\n        const msg = `${this.props.user} changed the title of the task '${taskTitle}' to '${title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(updatedBoard, msg, notificationType);\r\n    }\r\n\r\n\r\n\r\n    uploadImage = async (ev) => {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        const newColumn = { ...this.props.column }\r\n        newColumn.taskIds = this.props.column.taskIds.slice();\r\n        const file = ev.target.files[0];\r\n        const imageUrl = await utils.uploadImg(file)\r\n        const newTask = { ...task }\r\n        newTask.type = 'image';\r\n        newTask.url = imageUrl;\r\n        newTask.taskTeamMembers = [...task.taskTeamMembers];\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            columns: {\r\n                ...this.props.board.columns,\r\n                [newColumn.id]: newColumn\r\n            },\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n\r\n        const msg = `${this.props.user} changed task ${this.props.board.tasks[this.props.taskId]}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.toggleTaskDetails();\r\n    }\r\n\r\n\r\n    render() {\r\n        const task = this.props.board.tasks[this.props.taskId];\r\n        const { column } = this.props;\r\n        return (\r\n            <div className=\"screen flex align-center justify-center\" onClick={() => this.props.toggleTaskDetails()}>\r\n                <div className=\"task-details-container-wrapper flex\" onClick={(ev) => this.onStopPropagationAndCloseOptions(ev)}>\r\n                    <div className=\"task-details-container flex\">\r\n                        <CloseIcon className=\"add-column-back-to-board   flex align-center\"\r\n                            onClick={() => this.props.toggleTaskDetails()} />\r\n                        <div className=\"task-details-container-main full\">\r\n                            <header className=\"task-details-container-header\">\r\n                                <DescriptionOutlinedIcon style={{\r\n                                    color: '#42526e', position: 'absolute',\r\n                                    top: '10px',\r\n                                    left: '12px'\r\n                                }} />\r\n                                <h2\r\n                                    contentEditable='true'\r\n                                    spellCheck=\"false\"\r\n                                    onFocus={() => this.setTaskName(task.id)}\r\n                                    onInput={(ev) => this.emitChange(ev)}\r\n                                    onBlur={() => this.saveTaskName(task.id, this.state.taskTitle)}\r\n                                    suppressContentEditableWarning={true}\r\n                                >{task.title}</h2>\r\n                                <div className=\"task-details-container-in-list flex\">\r\n                                    <p>in list <span>{column.title}</span></p>\r\n                                </div>\r\n                            </header>\r\n\r\n                            <div className=\"chosen-labels-container\">\r\n                                {this.state.toggleChooseLabels ?\r\n                                    <Labels\r\n                                        toggleChooseLabels={this.toggleChooseLabels}\r\n                                        board={this.props.board}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                    /> : ''\r\n                                }\r\n                                {task.labels.length !== 0 && <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '.04em',\r\n                                }}>Labels</h3>}\r\n                                <div className=\"labels-choosen-container flex\">\r\n                                    {\r\n                                        task.labels.map(label => {\r\n                                            return <div key={label} className={label + ' medium-label'}>\r\n                                            </div>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"task-details-container-members-container\">\r\n                                {this.state.toggleChooseMembers ?\r\n                                    <Members\r\n                                        toggleChooseMembers={this.toggleChooseMembers}\r\n                                        board={this.props.board}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                        users={this.props.users}\r\n                                    /> : ''\r\n                                }\r\n                                {task.taskTeamMembers.length !== 0 && <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '.04em'\r\n                                }}>members</h3>}\r\n                                <div className=\"flex\">\r\n                                    {\r\n                                        task.taskTeamMembers.map(member => {\r\n                                            return <Avatar key={member._id} style={{\r\n                                                backgroundColor: '#dfe1e6',\r\n                                                height: 28,\r\n                                                width: 28,\r\n                                                fontSize: '0.85rem',\r\n                                                margin: '4px 4px 4px 0',\r\n                                                color: '#172b4d',\r\n                                                fontWeight: 600,\r\n                                                textAlign: 'center'\r\n                                            }}>\r\n                                                {utils.createUserIcon(member.firstName,\r\n                                                    member.lastName)}\r\n                                            </Avatar>\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"task-details-container-check-list-container\">\r\n                                {this.state.toggleTodos ?\r\n                                    <Todos\r\n                                        toggleTodos={this.toggleTodos}\r\n                                        board={this.props.board}\r\n                                        user={this.props.user}\r\n                                        task={task}\r\n                                        updateBoard={this.props.updateBoard}\r\n                                        updateProgressBar={this.updateProgressBar}\r\n                                    /> : ''\r\n                                }\r\n                                <AssignmentTurnedInOutlinedIcon\r\n                                    style={{\r\n                                        color: '#42526e',\r\n                                        position: 'relative',\r\n                                        top: '35px',\r\n                                        right: '44px',\r\n                                    }}\r\n                                />\r\n                                <h2>Checklist</h2>\r\n\r\n                                {task.todos ?\r\n                                    <div className=\"check-list-container flex column\">\r\n                                        {task.todos.map(todo => {\r\n                                            return <div key={todo.id} className=\"todo-item flex align-center space-between\" onMouseEnter={() => this.showDeleteTodoButton(todo.id)}\r\n                                                onMouseLeave={() => this.hideDeleteTodoButton(todo.id)}>\r\n                                                <div className=\"flex align-center\">\r\n                                                    <input type=\"checkbox\" onChange={() => this.toggleTodoDone(todo)} checked={todo.isDone ? 'checked' : ''}>\r\n                                                    </input>\r\n                                                    <p className={todo.isDone ? \"text-decoration\" : \"\"}>\r\n                                                        {todo.text}\r\n                                                    </p>\r\n                                                </div>\r\n                                                <DeleteOutlineIcon\r\n                                                    onClick={() => this.deleteTodo(todo.id)}\r\n                                                    className=\"pointer delete-btn\"\r\n                                                    style={{ display: this.state.toggleDeleteTodo && this.state.currTodoId === todo.id ? 'block' : 'none' }}\r\n                                                />\r\n                                            </div>\r\n                                        })\r\n                                        }\r\n                                        <div className=\"check-list-progress\">\r\n                                            <div className=\"progress fill-height flex align-center\" style={{ width: this.state.progressWidth + \"%\" }} >\r\n                                                <small className=\"fill-width text-center\">{this.state.progressWidth + \"%\"}</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                            <div className=\"task-details-container-duedate-container\">\r\n                                <EventOutlinedIcon style={{\r\n                                    color: '#42526e', position: 'relative',\r\n                                    top: '35px',\r\n                                    right: '44px'\r\n                                }} />\r\n                                <h2>Due Date</h2>\r\n                                {(task.dueDate) ?\r\n                                    <p>{moment(task.dueDate).format(\"MMMM Do YYYY, hh:mm a\")}</p> :\r\n                                    <p>This task doesn't have a due date yet</p>\r\n                                }\r\n                                {this.state.onToggleDueDate ? <DueDate\r\n                                    task={task}\r\n                                    onToggle={this.onToggleDueDate}\r\n                                    board={this.props.board}\r\n                                    updateBoard={this.props.updateBoard}\r\n                                    updateProgressBar={this.updateProgressBar}\r\n\r\n                                    user={this.props.user}\r\n                                /> : ''}\r\n                            </div>\r\n\r\n                            <div className=\"task-details-container-description\">\r\n                                <NotesIcon style={{\r\n                                    color: '#42526e', position: 'relative',\r\n                                    top: '35px',\r\n                                    right: '44px'\r\n                                }} />\r\n                                <h2>Description</h2>\r\n                                <textarea className=\"fill-width\"\r\n                                    name=\"description\"\r\n                                    cols=\"40\"\r\n                                    onChange={this.changeDescription}\r\n                                    onClick={this.openUpdateDescriptionForm}\r\n                                    value={this.state.description}\r\n                                    spellCheck=\"false\"\r\n                                    placeholder=\"Add a more detailed description...\">\r\n                                </textarea>\r\n                                {this.state.showEditDescriptionForm ?\r\n                                    <div className=\"flex align-center\">\r\n                                        <button className=\"task-form-save-btn uppercase\" onClick={(ev) => this.onSaveDescription(ev, task)}>save</button>\r\n                                        <CloseIcon className=\"task-form-back-btn\" onClick={this.closeUpdateDescriptionForm} />\r\n                                    </div> : ''\r\n                                }\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"task-details-container-overall-options\">\r\n                            <div className=\"task-details-container-add-to-card-options container\">\r\n                                <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '0.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '0.04em'\r\n                                }}>add to card</h3>\r\n                                <div className=\"task-details-container-add-to-card-options flex column\">\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleChooseLabels(ev)}>\r\n                                        <LabelOutlinedIcon />\r\n                                        <p className=\"capitalize\" >labels</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleChooseMembers(ev)} >\r\n                                        <PersonAddOutlinedIcon />\r\n                                        <p className=\"capitalize\">members</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.toggleTodos(ev)} >\r\n                                        <AssignmentTurnedInOutlinedIcon />\r\n                                        <p className=\"capitalize\">check list</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\" onClick={ev => this.onToggleDueDate(ev)}>\r\n                                        <EventOutlinedIcon />\r\n                                        <p className=\"capitalize\">due date</p>\r\n                                    </div>\r\n                                    <div className=\"task-details-container-add-to-card-options-btn flex align-center\">\r\n                                        <ImageOutlinedIcon />\r\n                                        <input style={{ display: \"none\" }} type=\"file\" id=\"upload-img-2\" onChange={ev => this.uploadImage(ev)}></input>\r\n                                        <label htmlFor=\"upload-img-2\"><p className=\"capitalize\">\r\n                                            upload image\r\n                                            </p></label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"task-details-container-actions-options container\">\r\n                                <h3 className=\"uppercase\" style={{\r\n                                    fontSize: '0.75rem',\r\n                                    fontWeight: 500,\r\n                                    letterSpacing: '0.04em'\r\n                                }}>actions</h3>\r\n                                <div className=\"task-details-container-actions-options-btn flex align-center\" onClick={() => this.onDuplicateTask(column, task)}>\r\n                                    <FileCopyOutlinedIcon />\r\n                                    <p className=\"capitalize\">duplicate</p>\r\n                                </div>\r\n                                <div className=\"task-details-container-actions-options-btn flex align-center\" onClick={() => this.onDeleteTask(column, task)}>\r\n                                    <DeleteOutlineOutlinedIcon />\r\n                                    <p className=\"capitalize\">delete</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nexport default class MiniDetailsButton extends Component {\r\n\r\n    render() {\r\n        const { text, onClick } = this.props;\r\n        return <div className=\"mini-details-editor-button\"\r\n            onClick={onClick}>\r\n            <p>{text}</p>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsButton from './MiniDetailsButton';\r\nimport Labels from './Labels';\r\nimport DueDate from './DueDate';\r\nimport Members from './Members';\r\n\r\nimport utils from '../services/utils';\r\n\r\nexport default class MiniDetailsEditor extends Component {\r\n    state = {\r\n        onToggleLabels: false,\r\n        onToggleDueDate: false,\r\n        onToggleMembers: false\r\n    }\r\n\r\n    onToggleLabels = _ => {\r\n        this.setState(prevState => ({ onToggleLabels: !prevState.onToggleLabels }));\r\n    }\r\n\r\n    onToggleDueDate = _ => {\r\n        this.setState(prevState => ({ onToggleDueDate: !prevState.onToggleDueDate }));\r\n    }\r\n\r\n    onToggleMembers = _ => {\r\n        this.setState(prevState => ({ onToggleMembers: !prevState.onToggleMembers }));\r\n    }\r\n\r\n    onDuplicateTask = _ => {\r\n        const { task } = this.props.miniTask\r\n        const newTask = { ...task, id: utils.getRandomId(), labels: [...task.labels], todos: [...task.todos], taskTeamMembers: [...task.taskTeamMembers]};\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        newBoard.columns[this.props.miniTask.column.id].taskIds.push(newTask.id);\r\n        const msg = `The task '${task.title}' was duplicated by ${this.props.user}`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    onDelete = _ => {\r\n        const { miniTask } = this.props;\r\n        const board = { ...this.props.board };\r\n        const column = this.props.miniTask.column;\r\n        const taskIds = column.taskIds;\r\n        const task = board.tasks[miniTask.task.id];\r\n        const idx = taskIds.findIndex(taskId => taskId === miniTask.task.id);\r\n        taskIds.splice(idx, 1);\r\n        delete board.tasks[miniTask.task.id];\r\n        const msg = `'${task.title}' was deleted by ${this.props.user}`;\r\n        const notificationType = 'danger'; \r\n        this.props.updateBoard(board, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { miniTask } = this.props;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        let top = boundingClientRect.top;\r\n\r\n        if(top + 180 > window.innerHeight){\r\n            top = window.innerHeight - 180;\r\n        }\r\n\r\n        return <div\r\n            className=\"mini-details-editor\"\r\n            style={{\r\n                left: (boundingClientRect.left + 265) + 'px',\r\n                top: (top + 1) + 'px'\r\n            }}\r\n        >\r\n            <MiniDetailsButton text=\"🖊️ Edit Labels\" onClick={this.onToggleLabels} />\r\n            {this.state.onToggleLabels ? <Labels\r\n                miniTask={miniTask}\r\n                task={miniTask.task}\r\n                toggleChooseLabels={this.onToggleLabels}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard} /> : ''}\r\n            <MiniDetailsButton text=\"🎭 Change Members\" onClick={this.onToggleMembers} />\r\n            {this.state.onToggleMembers ? <Members\r\n                pos={true}\r\n                task={miniTask.task}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleChooseMembers={this.onToggleMembers}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"📅 Change Due Date\" onClick={this.onToggleDueDate} />\r\n            {this.state.onToggleDueDate ? <DueDate\r\n                task={miniTask.task}\r\n                onToggle={this.onToggleDueDate}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n            /> : ''}\r\n            <MiniDetailsButton text=\"⎘ Duplicate Task\" onClick={this.onDuplicateTask} />\r\n            <MiniDetailsButton text=\"🗑️ Delete Task\" onClick={this.onDelete} />\r\n        </div>\r\n    }\r\n}","import React from 'react';\r\n\r\n\r\nexport default function ScreenFilter(props) {\r\n    return (\r\n        <div className=\"screen-filter\" onClick={_ => props.onToggle()}></div>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniTextDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} changed the title of the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 248 ? window.innerHeight - top - 50 : 248;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n        \r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + 10) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n            />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniImageDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n        this.imgContainer = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n        imgHeight: 220\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n        this.setState({ imgHeight: this.imgContainer.current.getBoundingClientRect().height });\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 252 ? window.innerHeight - top - 50 : 252;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                <img ref={this.imgContainer} title={task.id} alt=\"task\" src={task.url} />\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    style={{\r\n                        height: height - this.state.imgHeight + 'px',\r\n                        position: 'relative',\r\n                    }}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + (task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import MiniTextDetails from './MiniTextDetails';\r\nimport MiniImageDetails from './MiniImageDetails';\r\nimport MiniVideoDetails from './MiniVideoDetails';\r\n\r\nexport default {\r\n    text: MiniTextDetails,\r\n    video: MiniVideoDetails,\r\n    image: MiniImageDetails\r\n}","import React, { Component } from 'react';\r\n\r\nimport MiniDetailsEditor from '../MiniDetailsEditor';\r\nimport ScreenFilter from '../ScreenFilter';\r\n\r\nexport default class MiniVideoDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.textArea = React.createRef();\r\n    }\r\n\r\n    state = {\r\n        title: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.textArea.current.focus();\r\n    }\r\n\r\n    handleFocus = ev => {\r\n        ev.target.select();\r\n    }\r\n\r\n    emitChange = (ev) => {\r\n        const targetValue = ev.target.value;\r\n        this.setState({ title: targetValue });\r\n    }\r\n\r\n    onSave = _ => {\r\n        const newTask = { ...this.props.miniTask.task, title: this.state.title ? this.state.title : this.props.miniTask.task.title };\r\n        const newBoard = {\r\n            ...this.props.board,\r\n            tasks: {\r\n                ...this.props.board.tasks,\r\n                [newTask.id]: newTask\r\n            }\r\n        }\r\n        const msg = `${this.props.user} updated the task '${this.props.miniTask.task.title}' to '${this.state.title}'`;\r\n        const notificationType = 'success';\r\n        this.props.updateBoard(newBoard, msg, notificationType);\r\n        this.props.onToggle();\r\n    }\r\n\r\n    render() {\r\n        const { task } = this.props.miniTask;\r\n        const { boundingClientRect } = this.props.miniTask;\r\n        const videoDimensions = { height: 140, width: 246 };\r\n        const labelLen = task.labels.length;\r\n        let height = boundingClientRect.height;\r\n        let top = boundingClientRect.top;\r\n\r\n        if (height + top > window.innerHeight) {\r\n            height = (window.innerHeight - top - 50) > 248 ? window.innerHeight - top - 50 : 248;\r\n        }\r\n        if (boundingClientRect.top > (window.innerHeight - (window.innerHeight / 4))) {\r\n            top = window.innerHeight - height - 50;\r\n        }\r\n        return <div className=\"mini-details-container\">\r\n            <div\r\n                className=\"mini-details\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: top + 'px',\r\n                    height: height + 'px'\r\n                }}\r\n            >\r\n                {task.type === 'video' ?\r\n                    <iframe title={task.id}\r\n                        type='text/html' width={videoDimensions.width}\r\n                        height={videoDimensions.height}\r\n                        src={task.url}\r\n                        allowFullScreen=\"allowfullscreen\"></iframe>\r\n                    : <img ref={this.imgContainer} title={task.id} alt=\"task\" src={task.url} />\r\n                }\r\n                <div className=\"task-container-labels flex\">\r\n                    {task.labels.map(label => {\r\n                        return <div key={label} className={label + ' small-label'}>\r\n                        </div>\r\n                    })\r\n                    }\r\n                </div>\r\n                <textarea\r\n                    name=\"title\"\r\n                    className={\"text-area\" + (labelLen > 0 ? ' preview-label' : '')}\r\n                    style={{\r\n                        height: height - videoDimensions.height,\r\n                        position: 'relative',\r\n                        bottom: 14 + 'px'\r\n                    }}\r\n                    defaultValue={task.title}\r\n                    ref={this.textArea}\r\n                    onFocus={this.handleFocus}\r\n                    onInput={this.emitChange}\r\n                    placeholder=\"Add a card title...\"\r\n                >\r\n                </textarea>\r\n            </div>\r\n            <button\r\n                className=\"mini-details-save-btn\"\r\n                style={{\r\n                    left: boundingClientRect.left + 'px',\r\n                    top: (top + height + (task.title ? 10 : 32)) + 'px'\r\n                }}\r\n                onClick={this.onSave}\r\n            >SAVE</button>\r\n            <MiniDetailsEditor\r\n                user={this.props.user}\r\n                miniTask={this.props.miniTask}\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle} />\r\n            <ScreenFilter onToggle={this.props.onToggle} />\r\n        </div >\r\n    }\r\n}","import React, { Component } from 'react';\r\n\r\nimport mapDynamicMiniComponents from \"./mapDynamicMiniComponents\"\r\n\r\nexport default class DynamicMiniComponent extends Component {\r\n    state = {\r\n        previewType: 'text'\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ previewType: this.props.miniTask.previewType });\r\n    }\r\n\r\n    getComponent() {\r\n        return mapDynamicMiniComponents[this.state.previewType];\r\n    }\r\n\r\n    render() {\r\n        const Cmp = this.getComponent();\r\n        return <React.Fragment>\r\n            <Cmp\r\n                miniTask={this.props.miniTask}\r\n                updateBoard={this.props.updateBoard}\r\n                onToggle={this.props.onToggle}\r\n                board={this.props.board}\r\n                user={this.props.user}\r\n            >\r\n            </Cmp>\r\n        </React.Fragment>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { store } from 'react-notifications-component';\r\nimport FastAverageColor from 'fast-average-color';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport LoadPage from '../cmps/LoadPage';\r\nimport BoardColumns from '../cmps/BoardColumns';\r\nimport BoardHistory from '../cmps/BoardHistory';\r\nimport BoardTeamMembers from '../cmps/BoardTeamMembers';\r\nimport ColumnAddForm from '../cmps/ColumnAddForm';\r\nimport Login from '../cmps/Login';\r\nimport Filter from '../cmps/Filter';\r\nimport Sort from '../cmps/Sort';\r\nimport SplashMenu from '../cmps/SplashMenu';\r\nimport TaskDetails from '../cmps/TaskDetails';\r\nimport DynamicMiniComponent from '../cmps/dynamics/DynamicMiniComponent';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport GroupAddOutlinedIcon from '@material-ui/icons/GroupAddOutlined';\r\nimport ImageSearchOutlinedIcon from '@material-ui/icons/ImageSearchOutlined';\r\nimport HistoryOutlinedIcon from '@material-ui/icons/HistoryOutlined';\r\n\r\nimport utils from '../services/utils';\r\nimport SocketService from '../services/SocketService';\r\n\r\nimport { loadBoard, updateBoard, setBoard } from '../actions/BoardActions';\r\nimport { logout, getLoggedInUser, getUsers } from '../actions/UserActions';\r\n\r\n// import { filterBoard } from '../selectors/BoardSelector';\r\n\r\nclass Board extends Component {\r\n  state = {\r\n    showColAddForm: true,\r\n    showTaskDetails: false,\r\n    showMiniTaskDetails: false,\r\n    toggleLogin: false,\r\n    toggleSplashMenu: false,\r\n    showHistory: false,\r\n    toggleBoardTeamMembers: false,\r\n    miniTaskDetails: {},\r\n    filterBy: {\r\n      title: '',\r\n      teamMembers: ''\r\n    },\r\n    sortBy: '',\r\n    sortOrder: '',\r\n    showTopMenuOptions: true,\r\n    showAddForm: false,\r\n    currColumnId: '',\r\n    isBoardLoaded: false,\r\n    isDarkBackground: null,\r\n    filterIconMod: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    const boardId = this.props.match.params.id;\r\n\r\n    this.props.getUsers();\r\n    this.props.getLoggedInUser();\r\n    this.loadBoard();\r\n    this.resize();\r\n    window.addEventListener('resize', this.resize);\r\n\r\n    SocketService.setup();\r\n    SocketService.emit('boardId', boardId);\r\n    SocketService.on('updateBoard', (board) => this.props.setBoard(board));\r\n    SocketService.on('getNotification', (notification) => store.addNotification(notification));\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const boardId = this.props.match.params.id;\r\n    if (this.state.isBoardLoaded) {\r\n      if (prevProps.board.boardBgImage !== this.props.board.boardBgImage) {\r\n        this.isDarkBackground();\r\n      };\r\n      return;\r\n    } else if (boardId === this.props.board._id) {\r\n      this.setState({ isBoardLoaded: true });\r\n      this.isDarkBackground();\r\n    };\r\n\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.resize);\r\n    SocketService.off('updateBoard');\r\n    SocketService.off('getNotification');\r\n    SocketService.terminate();\r\n  }\r\n\r\n  loadBoard = () => {\r\n    const boardId = this.props.match.params.id;\r\n    const filterBy = this.state.filterBy;\r\n    const sortBy = this.state.sortBy;\r\n    const sortOrder = this.state.sortOrder;\r\n    this.props.loadBoard(boardId, filterBy, sortBy, sortOrder);\r\n  }\r\n\r\n  toggleAddColumn = () => {\r\n    this.setState((prevState) => ({\r\n      showColAddForm: !prevState.showColAddForm,\r\n    }))\r\n  }\r\n\r\n  goBack = () => {\r\n    this.props.history.push('/');\r\n  }\r\n\r\n  toggleLogin = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState((prevState) => ({\r\n      toggleLogin: !prevState.toggleLogin,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleSplashMenu: false\r\n    }))\r\n  }\r\n\r\n  closeAllTabs = (ev) => {\r\n    ev.stopPropagation()\r\n    this.setState({\r\n      toggleLogin: false,\r\n      toggleSplashMenu: false,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      showTopMenuOptions: false,\r\n      showAddForm: false,\r\n    });\r\n  }\r\n\r\n  toggleTaskDetails = (currTask) => {\r\n    if (currTask === undefined) {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails }));\r\n    } else if (this.state.showTaskDetails && currTask.id !== this.state.currTask.id) {\r\n      this.setState({ currTask });\r\n    } else {\r\n      this.setState(prevState => ({ showTaskDetails: !prevState.showTaskDetails, currTask }));\r\n    }\r\n  }\r\n\r\n  onAddImg = (ev) => {\r\n    const file = ev.target.files[0];\r\n    utils.uploadImg(file).then(res => {\r\n      const newBoard = { ...this.props.board }\r\n      newBoard.boardBgImage = res\r\n      newBoard.boardBgThumbnail = res\r\n      const msg = `${this.props.user} changed background image`;\r\n      const notificationType = 'success';\r\n      this.props.updateBoard(newBoard, msg, notificationType);\r\n    })\r\n  }\r\n\r\n  onFilter = (filterBy) => {\r\n    this.setState(prevState => ({ filterBy: { ...prevState.filterBy, ...filterBy } }), this.loadBoard);\r\n    // this.props.updateFilter(filterBy);\r\n  }\r\n\r\n  onSort = (sortBy, sortOrder) => {\r\n    this.setState({ sortBy, sortOrder }, this.loadBoard);\r\n  }\r\n\r\n  toggleMiniDetails = miniTask => {\r\n    if (miniTask) {\r\n      return this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails, miniTaskDetails: miniTask }));\r\n    }\r\n    this.setState(prevState => ({ showMiniTaskDetails: !prevState.showMiniTaskDetails }));\r\n  }\r\n\r\n  toggleSplashMenu = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleSplashMenu: !prevState.toggleSplashMenu,\r\n      showHistory: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardHistory = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      showHistory: !prevState.showHistory,\r\n      toggleSplashMenu: false,\r\n      toggleBoardTeamMembers: false,\r\n      toggleLogin: false\r\n    }));\r\n  }\r\n\r\n  toggleBoardTeamMembers = (ev) => {\r\n    ev.stopPropagation();\r\n    this.setState(prevState => ({\r\n      toggleBoardTeamMembers: !prevState.toggleBoardTeamMembers,\r\n      showHistory: false,\r\n      toggleSplashMenu: false,\r\n      toggleLogin: false\r\n    }))\r\n  }\r\n\r\n  openAddForm = colId => {\r\n    this.setState({ showAddForm: true, currColumnId: colId }, this.closeEditColumn);\r\n  }\r\n\r\n  closeAddForm = _ => {\r\n    this.setState({ showAddForm: false });\r\n  }\r\n\r\n  openEditColumn = (colId) => {\r\n    this.setState({ showTopMenuOptions: true, currColumnId: colId }, this.closeAddForm());\r\n  }\r\n\r\n  closeEditColumn = _ => {\r\n    this.setState({ showTopMenuOptions: false });\r\n  }\r\n\r\n  isDarkBackground = async (img) => {\r\n    const fac = new FastAverageColor();\r\n    let backgroundImage = new Image();\r\n    backgroundImage.crossOrigin = 'anonymous';\r\n    backgroundImage.src = img || this.props.board.boardBgImage;\r\n    try {\r\n      const color = await fac.getColorAsync(backgroundImage, { algorithm: 'dominant' });\r\n      (color.isDark) ? this.setState({ isDarkBackground: true }) : this.setState({ isDarkBackground: false });\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  resize = _ => {\r\n    if (window.innerWidth < 900) {\r\n      this.setState({ filterIconMod: true });\r\n    } else {\r\n      this.setState({ filterIconMod: false })\r\n    };\r\n  }\r\n\r\n  render() {\r\n    if (!this.state.isBoardLoaded) return <LoadPage />\r\n    // const { teamMembers } = { ...this.props.board }\r\n    let button;\r\n    if (this.props.loggedInUser) {\r\n      button = <button className=\"board-page-nav-bar nav-btn\"\r\n        onClick={this.props.logout}>\r\n        logout\r\n      </button>\r\n    } else {\r\n      button = <button className=\"board-page-nav-bar nav-btn\"\r\n        onClick={ev => this.toggleLogin(ev)}>\r\n        login\r\n      </button>\r\n    }\r\n    return (\r\n      <div className=\"screen\" onClick={this.closeAllTabs}>\r\n        <div className=\"board-page fill-height flex column\" style={{ backgroundImage: 'url(' + this.props.board.boardBgImage + ')', backgroundAttachment: 'fixed' }}>\r\n\r\n          <div className=\"board-page-nav-bar flex align-center space-between\">\r\n            <div className=\"board-page-nav-bar-logo\" onClick={this.goBack}> </div>\r\n            <div className=\"flex align-center\">\r\n              {this.props.loggedInUser &&\r\n                <div className=\"flex\">\r\n                  <div className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: 'rgba(223, 225, 230, 0.8)', color: '#172b4d' }} >\r\n                    <div className=\"team-member-icon\">\r\n                      <p>\r\n                        {utils.createUserIcon(this.props.loggedInUser.firstName,\r\n                          this.props.loggedInUser.lastName)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"logged-in-user flex column\">\r\n                    <small>Logged as:</small>\r\n                    <p> {this.props.loggedInUser.username}</p>\r\n                  </div>\r\n                </div>\r\n              }\r\n\r\n              {button}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"board-page-nav-bar-filters flex align-center space-between\">\r\n            <div className={`flex align-center`}>\r\n              <button\r\n                className={`board-page-nav-bar-filters nav-btn flex \r\n                          ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                onClick={this.goBack} >\r\n                <HomeIcon />\r\n              </button>\r\n\r\n              {/* {this.props.board.teamMembers.length > 0 &&\r\n                <div className=\"board-page-nav-bar-filters team-members-container flex\">\r\n                  {\r\n                    teamMembers.map(member => {\r\n                      return <div key={member.username} className=\"team-member-icon-wrapper flex align-center justify-center\" style={{ backgroundColor: '#dfe1e6', color: '#172b4d' }} >\r\n                        <p className=\"team-member-icon\">\r\n                          {utils.createUserIcon(member.firstName,\r\n                            member.lastName)}\r\n                        </p>\r\n                      </div>\r\n                    })\r\n                  }\r\n                </div>\r\n              } */}\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <Filter onFilter={this.onFilter}\r\n                teamMembers={this.props.board.teamMembers}\r\n                isDarkBackground={this.state.isDarkBackground} />\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <Sort onSort={this.onSort} isDarkBackground={this.state.isDarkBackground} />\r\n            </div>\r\n\r\n            <div className=\"board-page-nav-bar-filters-item flex align-center\">\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button\r\n                  className={`nav-btn fill-height capitalize\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={this.toggleBoardTeamMembers}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <GroupAddOutlinedIcon style={{ marginRight: 5 }} />\r\n                    add members\r\n                    </Typography> : <GroupAddOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <div className=\"board-page-nav-bar-filters-item fill-height\">\r\n                <button\r\n                  className={`nav-btn fill-height capitalize\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={(ev) => this.toggleSplashMenu(ev)}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <ImageSearchOutlinedIcon style={{ marginRight: 5 }} />\r\n                    change background\r\n                  </Typography> : <ImageSearchOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n\r\n              <div style={{ background: (this.state.isDarkBackground) ? 'white' : 'black' }} className=\"board-page-nav-bar-filters-divider\"></div>\r\n\r\n              <div className=\"board-page-nav-bar-filters-item flex fill-height\">\r\n                <button\r\n                  className={`board-page-nav-bar-filters nav-btn capitalize \r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                  onClick={this.toggleBoardHistory}>\r\n                  {!this.state.filterIconMod ? <Typography component=\"p\" className=\"flex align-center p-reset\">\r\n                    <HistoryOutlinedIcon style={{ marginRight: 5 }} />\r\n                    show history\r\n                  </Typography> : <HistoryOutlinedIcon />}\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <CSSTransition\r\n            in={this.state.toggleSplashMenu}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <SplashMenu\r\n              // toggleSplashMenu={this.state.toggleSplashMenu}\r\n              board={this.props.board}\r\n              updateBoard={this.props.updateBoard}\r\n              closeAllTabs={this.closeAllTabs}\r\n              onAddImg={this.onAddImg}\r\n              showUploadBgImg={this.state.closeAllTabs}\r\n              isDarkBackground={this.isDarkBackground}\r\n              user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n            />\r\n          </CSSTransition>\r\n\r\n          <div className=\"board-page-columns-container\">\r\n            <div className=\"flex align-start fill-height\">\r\n              <CSSTransition\r\n                in={this.state.toggleLogin}\r\n                timeout={700}\r\n                classNames=\"modal\"\r\n                unmountOnExit\r\n              >\r\n                <Login\r\n                  variant=\"outlined\"\r\n                  className=\"home-page-login\"\r\n                  toggleLogin={this.toggleLogin}\r\n                  toggleState={this.state.toggleLogin} />\r\n              </CSSTransition>\r\n              <BoardColumns\r\n                board={this.props.board}\r\n                updateBoard={this.props.updateBoard}\r\n                toggleTaskDetails={this.toggleTaskDetails}\r\n                toggleMiniDetails={this.toggleMiniDetails}\r\n                user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n                currColumnId={this.state.currColumnId}\r\n                openAddForm={this.openAddForm}\r\n                closeAddForm={this.closeAddForm}\r\n                openEditColumn={this.openEditColumn}\r\n                closeEditColumn={this.closeEditColumn}\r\n                showTopMenuOptions={this.state.showTopMenuOptions}\r\n                showAddForm={this.state.showAddForm}\r\n              />\r\n              <div className=\"flex column align-center\">\r\n                {this.state.showColAddForm ?\r\n                  <button className={`board-page-add-another-column-btn\r\n                  ${(this.state.isDarkBackground) ? 'dark' : 'light'}`}\r\n                    onClick={this.toggleAddColumn}>\r\n                    <span className=\"add-icon\">+</span>Add another list</button> : ''}\r\n                {!this.state.showColAddForm && <ColumnAddForm board={this.props.board} updateBoard={this.props.updateBoard}\r\n                  toggleAddForm={this.toggleAddColumn} user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {this.state.showTaskDetails && <TaskDetails\r\n            taskId={this.state.currTask.id}\r\n            board={this.props.board}\r\n            column={this.state.currTask.column}\r\n            updateBoard={this.props.updateBoard}\r\n            toggleTaskDetails={this.toggleTaskDetails}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'} />}\r\n          {this.state.showMiniTaskDetails && <DynamicMiniComponent\r\n            miniTask={this.state.miniTaskDetails}\r\n            updateBoard={this.props.updateBoard}\r\n            onToggle={this.toggleMiniDetails}\r\n            board={this.props.board}\r\n            user={this.props.loggedInUser ? this.props.loggedInUser.username : 'Guest'}\r\n          />}\r\n          <CSSTransition\r\n            in={this.state.showHistory}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <BoardHistory variant=\"outlined\"\r\n              className=\"home-page-login\" history={this.props.board.history} />\r\n          </CSSTransition>\r\n          <CSSTransition\r\n            in={this.state.toggleBoardTeamMembers}\r\n            timeout={700}\r\n            classNames=\"modal\"\r\n            unmountOnExit\r\n          >\r\n            <BoardTeamMembers board={this.props.board}\r\n              users={this.props.users}\r\n              updateBoard={this.props.updateBoard} />\r\n          </CSSTransition>\r\n        </div>\r\n\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    board: state.boards.board,\r\n    loggedInUser: state.user.loggedInUser,\r\n    users: state.user.users\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  loadBoard,\r\n  updateBoard,\r\n  logout,\r\n  getLoggedInUser,\r\n  setBoard,\r\n  getUsers,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Board);","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport history from './history';\r\nimport '../src/styles/global.scss'\r\n\r\nimport Home from './pages/Home.js';\r\nimport Board from './pages/Board.js';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router history={history}>\r\n        <Switch>\r\n          <Route path=\"/\" component={Home} exact />\r\n          <Route path=\"/board/:id\" component={Board} exact />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initialState = {\r\n  boards: [],\r\n  board: {},\r\n  filterBy: {title: '', teamMembers: ''}\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_BOARDS':\r\n      return { ...state, boards: action.boards };\r\n    case 'UPDATE_BOARD':\r\n      return { ...state, board: action.board };\r\n    case 'ADD_BOARD':\r\n      return { ...state, boards: [...state.boards, action.addedBoard] };\r\n    case 'UPDATE_FILTER':\r\n      return { ...state, filterBy: action.filterBy };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","let localLoggedinUser = null;\r\n// if (localStorage.user) localLoggedinUser = JSON.parse(localStorage.user);\r\n\r\nconst initialState = {\r\n  loggedInUser: localLoggedinUser,\r\n  users: []\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_USER':\r\n      return { ...state, loggedInUser: action.user };\r\n    case 'SET_USERS':\r\n      return {...state, users: action.users};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport BoardReducer from './BoardReducer'\r\nimport UserReducer from './UserReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  boards: BoardReducer,\r\n  user: UserReducer\r\n})\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from 'redux';\r\n\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst Store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n\r\nexport default Store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport ReactNotification from 'react-notifications-component';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'react-notifications-component/dist/theme.css';\n\nimport Store from './store';\n\nReactDOM.render(\n  <Provider store={Store}>\n    <ReactNotification />\n      <App />\n  </Provider>,\n  document.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}